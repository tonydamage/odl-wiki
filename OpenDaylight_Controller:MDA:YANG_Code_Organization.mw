
The code for Model-driven SAL is in controller.git in folder:

    opendaylight\sal\yang-prototype

===yang folder===
* '''yang-common''' - Common concepts for YANG

* '''yang-model-api''' - Java Interfaces describing in-memory model of parsed YANG schema
* '''yang-model-util''' - Util classes and methods for parsed YANG schema
===code-generator folder===
* '''binding-generator-*''' APIs and Implementation of component responsible for mapping between YANG and JAVA
* '''binding-java-api-generator''' - Component responsible for writing the mapping as Java code
* '''binding-model-api''' - APIs for modeling JAVA types which are to be genereated
* '''code-generator-demo''' - Demo code generator application which was presented on HackFest
* '''maven-yang-*''' - Maven plugin with SPI for adding components processing YANG files in Maven build process
* '''yang-model-parser-*''' - Implementation of YANG parser, which parses input text YANG files into the objects defined in yang-model-api.
