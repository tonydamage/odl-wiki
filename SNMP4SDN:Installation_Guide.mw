==Installation in OpenDaylight Release ==
* SNMP4SDN's bundle is already packaged in the [[Release/Hydrogen/Service Provider/Installation Guide|Hydrogen Release Service Provider Edition]], and no further installation steps are required.

==Troubleshooting==
[[SNMP4SDN:User_Guide#Troubleshooting | User Guide: Troubleshooting]]

== Installation from source ==
Steps overview: (details as below)

1. [[SNMP4SDN:Installation_Guide#Pull_code_via_git_CLI | Pull code via git CLI]]

2. If one'd like to proceed automatic [[SNMP4SDN:Installation_Guide#Unit_test | unit test]], [[SNMP4SDN:Installation_Guide#Manual_modifications_to_the_code | manual modifications to the code]] is required

3. [[SNMP4SDN:Installation_Guide#Build_the_code | Build the code]]

4. Install the bundle

=== Pull code via git CLI ===
<pre>
git clone ssh://<username>@git.opendaylight.org:29418/snmp4sdn.git
</pre>
or
<pre>
git clone https://git.opendaylight.org/gerrit/p/snmp4sdn.git
</pre>

=== Build the code ===
One may either build the code in console or using Eclipse, as follows.

==== Build the code in console ====
<pre>
cd snmp4sdn/
mvn clean install
</pre>

==== Import and build the code in Eclipse ====

===== Import the code =====
Eclipse --> File --> Import --> Existing Maven Projects <br>
--> Root Directory: Browse to select the SNMP4SDN's directory <br>
--> Selects all the Project POMs found --> ... Done

===== Build the code =====
On the project "snmp4sdn" --> Debug As --> Maven build

===Install the bundle===
Steps:

1. After [[SNMP4SDN:Installation_Guide#Build_the_code | building the code]], one may find the bundle here: snmp4sdn/snmp4sdn/tartget/snmp4sdn-x.x.x-SNAPSHOT.jar.

2. Copy the snmp4sdn-x.x.x-SNAPSHOT.jar to the controller's directory, somewhere under the controller's directory: .../distribution.opendaylight-osgipackage/opendaylight/plugins/. In this way, the controller will automatically load and activate the bundle.

3. Alternative to 2, one may load and activate the bundle by himself/herself, in controller's OSGi console:
<pre>
install file:<file path to snmp4sdn-x.x.x-SNAPSHOT.jar>
(note to use double slash in file path, for example: install file:///home//usersdn//controller//opendaylight//plugins//org.opendaylight.snmp4sdn.snmp4sdn-0.1.2.jar)
</pre>
Then the BundleId would be shown (say, ###).
Then, activate the bundle:
<pre>
start ###
</pre>

== Test the code ==
* Hardware is required: a subnet consisting of real Ethernet switches.
* For the first time to test the code, [[SNMP4SDN:Installation_Guide#Manual_modifications_to_the_code | manual modifications to the code]] is required, then [[SNMP4SDN:Installation_Guide#Unit_test | unit test]] will automatically proceed when building the code, and plugin test
===Manual modifications to the code===

1. Edit the [[:File:SwitchDB.txt|switch_login_db.csv]] (located at snmp4sdn/snmp4sdn/src/test) for the Ethernet switches. (Note that the first line is title and should not be removed)

2. In CmethUtil.java, modify the file path to switch_login_db.csv.

3. For all xxxTest.java files under the subdirectories of snmp4sdn/snmp4sdn/src/test, remove the mark in front of "@Test" so that the tests will proceed when building the code.

4. In these xxxTest.java files, the MAC address given to input to addNewSwitch() should be consistent with that in switch_login_db.csv, otherwise the program cannot know the mapped IP address and so on.

(Finally, you may want to [[SNMP4SDN:Installation_Guide#Build_the_code | rebuild the code]])

===Plugin test===
Steps:

1. Build the code (as described above)

2. Start the controller and wait until its initialization done.

3. Using the command "ss snmp" to see whether the SNMP4SDN plugin has been started. It should appear like this:<br>
"ACTIVATED org.opendaylight.snmp4sdn.snmp4sdn-x.x.x-SNAPSHOT.jar"

4. Manually reboot a Ethernet switch (this switch should have been listed in the switch_login_db.csv), and later this switch will be shown in the web GUI.

===Unit test===
Steps:

1. Build the code (as described above)

2. Unit tests would show up during the building. The summary of test results should appear like these:<br>
At the end of every module's unit tests:<br>
Tests run: XX, Failures: XX, Errors: XX, Skipped: XX, Time elapsed: XX sec - in org.opendaylight.snmp4sdn.internal.XXXTest

At the end of all modules' tests:<br>
Results :<br>
Tests run: XX, Failures: XX, Errors: XX, Skipped: XX
