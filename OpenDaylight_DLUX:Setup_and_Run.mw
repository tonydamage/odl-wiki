This section describes how to setup the latest OpenDaylight Dlux UI project and run it.

'''Note''' 
* The older version of dlux used Python/Django framework for UX. 
* The latest (current) version uses a JavaScript based Single-Page-Application using AngularJS, running on NodeJS. 
* This document describes the latest setup. This may eventually replace the documentation about Python-based UX. 

==Required Technology Stack==

* NodeJS (Http Server, http://www.nodejs.org)
* Bower (JavaScript Package Manager, http://bower.io)
* GruntJS (JavaScript Task Runner, http://gruntjs.com)
* AngularJS (JavaScript client-side framework, http://www.angularjs.org)
* Karma (JavaScript Test Runner, http://karma-runner.github.io/)
* Other AngularJS/Third-party JS libraries

==Install NodeJS==

For Mac, if you have '''brew''':

<pre>
* brew update
* brew install node
</pre>

For Windows and Mac without brew:

* Goto http://www.nodejs.org
* Download and install the NodeJS

Verify nodeJS is installed

<pre>$ npm --version</pre>

==Install required Node libraries==

Install the following node components using npm. For Mac, you may have to use "sudo"

<pre>
$ sudo npm -g install grunt-cli
$ sudo npm -g install bower
$ sudo npm -g install karma
$ sudo npm -g install karma-cli
</pre>

==Get latest DLUX code from git==

Anonymous clone:

<pre>$ git clone https://git.opendaylight.org:29418/dlux.git</pre>

If you have a opendaylight.org account:

<pre>$ git clone ssh://<username>@git.opendaylight.org:29418/dlux.git</pre>

If you want to create a new account with opendaylight.org, see [[WSO2 Identity server|https://identity.opendaylight.org/carbon/admin/index.jsp?loginStatus=true]]

==Build the DLUX code==

<pre>$ cd dlux

#installs the necessary NodeJS related components for the project - will create a node_modules directory
$ sudo npm install  

#installs necessary components provided by power
$ bower install 

# run the unit tests and start karma test runner
# this will open up the default browser pointing to karma test running and run the unit tests
$ grunt watch
</pre>

Hit Ctrl-C to quit

==Run the DLUX code against the controller==

* Start the ODL Controller using run.sh (run.bat in Windows) with defaults (ie start on 8080 port). For more information on running the controller see [[OpenDaylight Controller Installation|https://wiki.opendaylight.org/view/OpenDaylight_Controller:Installation]
* Goto mininet VM and create a topology for the controller

Back in the DLUX terminal, type

<pre>$ grunt live</pre>

Open a browser and goto http://localhost:9000

This should bring up the DLUX UI and pull data from the controller
