==What is PAX-Exam==

Pax exam is an OSGi testing framework that allows specific bundles to be activated together to write integration tests.  While stand-alone JUnit tests can only cover the logic within a single bundle, the integration tests will handle the bundle dependencies to provide more complete system testing.

==Creating Integration Tests==

Integration tests should be in a separate bundle under the main bundle's directory, just like API and Implementation.  For example, the statisticsmanager bundle is in statisticsmanager/api, statisticsmanager.implementation is in statisticsmanager/implementation, and statisticsmanager.integrationtest is in statisticsmanager/integrationtest.

'''Maven pom setup'''

In the pom file of the integration test, all of the bundles needed must be listed in the dependencies list.

<source>
 <dependencies>
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>protocol_plugins.stub</artifactId>
      <version>0.5.0-SNAPSHOT</version>
    </dependency>
     ...
  </dependencies>

</source>

Properties also need to be added in order to use the Jacoco plugin to generate integration test results, and then have Sonar find the results.

<source>
<pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.5.3.201107060350</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.5.3.201107060350</version>
        <configuration>
          <destFile>../implementation/target/jacoco-it.exec</destFile>
          <includes>org.opendaylight.controller.*</includes>
        </configuration>
        <executions>
          <execution>
            <id>pre-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-test</id>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
</source>



==Integration Testing Coverage Results==
After the test is in the repository and the next sonar run is completed, the integration test coverage percentage can be seen.  In this example, StatisticsManager had 28.9% coverage from JUnit testing, and the integration tests were able to get a complete 100% coverage.

[[File:Sonar_results.jpg]]
