= Welcome to the OpenDaylight Demo and Proof Of Concept Staging Area =
This page holds various demos and PoCs that are under construction or have been created to highlight the capabilities of OpenDaylight in a variety of settings.

== 1 - Dynamically manage multiple virtual networks within an environment/datacenter  ==
* Build an environment with multiple hosts on several virtual networks using overlays or flows
* Assign and identify policy between the networks/hosts, include inter-virtual-network connectivity ala route leaking etc.
* demonstrate the enforcement of policy
* Add/move/delete networks while all proper layer 3 routing behaviors remain in tact
* demonstrate the connections and policies persist through the change of the network
* Using BGP in addition to, or instead of, OpenFlow in managing the network interconnections would be additionally interesting.
* Using OpenStack for some/all of the virtual hosts/storage would be additionally interesting as well

=== Team ===
TBD

=== Logistics ===
*Status: In Design/Brainstorm
*Where - TBD
* Deadlines:  TBD

===Description / Notes / Issues===
TBD - Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc

== 2 - Multi-vendor Fabric ==
* This could be done by extending the IDOL demo given at ONS
*  Use OF and OVSDB to set up virtual network
*  Plumb additional physical network elements from different vendors  and show the resulting connectivity and traffic flow through the overlay and underlay networks
* demonstrate connectivity and traffic flow
=== Team ===
TBD

=== Logistics ===
*Status:  In Design/Brainstorm
*Where: TBD
* Demo Deadlines: TBD

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc
[[CrossProject:Integration_Group:Community_Lab:Defense4All|Wiki On the POC in the lab]]

== 3 - Network Resiliency ==
* Similar to what Rob Sherwood showed at ONS-2014
* Construct a small network with multiple controllers
* kill a switch, kill a controller/switch link, kill a controller, kill multiple/all controllers
* Show other interesting failure cases and how the network responds/recovers
=== Team ===
TBD

=== Logistics ===
*Status:  In Design/Brainstorm
*Where: TBD
* Demo Deadlines: TBD

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc


== 4 - Multi-vendor Fabric Resiliency ==
Combine #2 and #3 to show multi-vendor fabric resiliency in the face of network/component failure

=== Team ===
TBD

=== Logistics ===
*Status:  Waiting until #2 and #3 are complete
*Where - TBD
* Demo Deadlines: TBD

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc

== 5 - Dynamic Traffic Engineering for LAN/WAN ==
* Simulate multiple WAN connections with different costs/SLAs
** e.g. Research network for large data transfer,  video gets high QoS, secure tunnels on IPSEC, etc.
* Alter traffic flows based on time of day, bandwidth utilization or other criteria (i.e. MPLS connection used at night for data backups)
* The goal is to demonstrate the dynamic balance between SLA and cost

=== Team ===
TBD

=== Logistics ===
*Status:  In Design/Brainstorm
*Where: TBD
* Demo Deadlines: TBD

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks issues need resolution, etc

== 6 - Dynamic Traffic Engineering based on traffic ==
*DDoS is a good example of this.  Need to put into demo form
* Analysis  of traffic (switch/port stats, DPI, etc) causes dynamic change to network
* demonstrate the trigger, the resulting change(s) due to the trigger being tripped, and a return to “steady-state” once the issue causing the trigger is mitigated.
=== Team ===
TBD

=== Logistics ===
*Status:  In Design/Brainstorm
*Where: TBD
* Demo Deadlines: TBD

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks,  issues need resolution, etc

== 7 - Blue Sky Demo - OpenDaylight’s Killer Use Case is central control of dissimilar vendor network elements==
* Show desired SDN-type behaviors using multiple protocols to multiple disparate network elements
* What can we come up with here?

=== Team ===
TBD

=== Logistics ===
*Status:  In Design/Brainstorm
*Where: TBD
* Demo Deadlines: TBD

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc

== 8 - Cost-efficient network-wide DoS detection and mitigation==
Demonstrate how an SDN application (Defense4All) can utilize efficient programmability of a heterogeneous network (controlled by OpenDaylight controller) to 
* 1)  monitor traffic at different network points and detect DDoS attacks, and 
* 2) redirect traffic for mitigation (whether to local mitigation devices or distant scrubbing centers).

=== Team ===
Christopher O'Shea (Christopher.o.shea@ericsson.com)

=== Logistics ===
*Status:  Building Stage.
*Where - Ericsson Community Lab [[CrossProject:Integration_Group:Community_Lab|Community Lab]]
* Demo Deadlines: 31/7/2014

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc

==Template==

== Demo Name ==
Short Description

=== Team ===
TBD

=== Logistics ===
*Status:  In Design/Brainstorm - Under Construction - Complee
*Where
** mailing list / irc (they don’t have to be new/dedicated to this effort)
** Location of physical demo lab (if applicable)
** Demo Deadlines: 

===Description / Notes / Issues===
Use this section to share information across the the team…. ideas, work tasks, issues that need resolution, etc

=== Artifacts ===
* Demo configuration information
* written/recorded demo script
* Other Assets - Configuration files, VMs, etc

=== Demo Recording ===
* Link to demo being given live.
