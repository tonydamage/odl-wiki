
== Name  ==

Scalable peer addressing in virtualized L2-over-L3 overlay

== Repo Name ==

peeraddressing 

== Description  ==

VXLAN solves the scalability issue of VLAN and offers cross-datacenter support. However, VXLAN relies on multicast between VTEPs for address learning and broadcast. Multicast has scalability issue of its own, especially in virtualized environment where each of the 10s if not 100s of thousand hypervisors is a VTEP. Also, most data centers do not want to support broadcast and multicast due to issues they impose to the network infrastructure.

This project proposes and implements a scalable inter/intra-cluster& inter/intra-datacenter VXLAN peer addressing solution without using multicast. This same architecture applies to other virtualized L2 over L3 overlay as well, e.g. NVGRE, which can be supported with minor code change in later phases.

== Architecture ==

[[File:L2-over-L3-architecture.jpg|L2-over-L3-architecture.jpg]]

Multiple data centers, multiple clusters per datacenter,  multiple controllers per cluster, multiple monitoring/learning agents and multiple (if not thousands) switches per controller are supported for elastic scalability. Of course, the shared storage chosen must be scalable. Multiple shared storage instances may be needed to support controllers of same cluster, in which case records are statistically evenly distributed into different shards. Each shared storage shard must be HA'd. 

=== Shared Storage ===

Each VXLAN is assigned its own container, which is isolated from others. 

In each container, all records are stored in a hash table keyed by the IP of the endpoint. 

Each endpoint record is composed of the following info: IP, MAC, GW-IP, creation-time, last-modified-time, etc.

=== Security ===

TLS with certificate-based mutual authentication is recommended for intra/inter-cluster RESTful API access. 

TLS is also recommended for access to "local" shared storage for address record creation/retrieval/update/delete (CRUD).

Each VTEP is authority of all endpoints it serves and controllers of each cluster are authority of all VTEP and endpoints that the cluster manages. Address record CRUD must be access controlled as such.

== Configuration ==

* At controller side, besides the access URL and credentials to shared storage, the following configurations are needed:

** RESTful API entry point URL
** List of RESTful API entry point URLs of all collaborating clusters.

Within cluster, controllers instances are treated equal and states stored in and accessed via shared storage.

Obviously, the VM or bare metal network monitoring agents will be configured with it's local controller endpoints.

== Protocol ==

=== Openvswitch <--> controller ===

Using openflow, raw packet, via TCP or SSL connection to controller.

=== Peer Addressing CRUD API ===

Restful API using JSON encoding as defined here:

==== Create/update address records ====

===== Request =====
<pre>

    {    
         "action" : "update-req",
         "msgid" : "msg id",
         "ts" : "timestamp",
         "saddr" : {"vxlan" : "myvlans",  "gw": "1.2.3.4", "ip": " 1.2.3.4", "mac": "10:60:4b:7d:b5:1a", "expiry" : 12345},
         "addrs" : [
               {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.2", "mac": "10:60:4b:7d:b5:aa", "expiry" : 12345},
               {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.3", "mac": "10:60:4b:7d:b5:ab", "expiry" : 12345}
         ]
    }

</pre>

===== Reply =====
<pre>

    {    
         "action" : "update-rep",
         "msgid" : "msg id",
         "ts" : "timestamp",
         "saddr" : {"vxlan" : "myvlans",  "gw": "1.2.3.5", "ip": " 1.2.3.5", "mac": "10:60:4b:7d:b5:1b", "expiry" : 12345},
         "addrs" : [
               {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.2", "stat": "done",  "reason" : ""},
               {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.3", "stat": "done",  "reason" : ""}
          ]
    }

</pre>

==== Query address records ====

===== Request =====

<pre>

    {    
         "action" : "query-req",
         "msgid" : "msg id",
         "ts" : "timestamp",
         "saddr" : {"vxlan" : "100",  "gw" : "1.2.3.4", "ip" : "192.168.1.2", "mac" : "10:60:4b:7d:b5:aa", "expiry" : 12345},
         "addrs" : [
               {"vxlan" : "100", "ip" : "192.168.2.2"},
               {"vxlan" : "100", "ip" : "192.168.2.3"}
           ]
    }

</pre>

===== Reply =====

<pre>

    {    
         "action" : "query-rep",
         "msgid" : "msg id",
         "ts" : "timestamp",
         "saddr" : {"vxlan" : "myvlans",  "gw": "1.2.3.5", "ip": " 1.2.3.5", "mac": "10:60:4b:7d:b5:1b", "expiry" : 12345},
         "addrs" : [
               {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.2", "mac": "10:60:4b:7d:b5:aa", "expiry" : 12345},
               {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.3", "mac": "10:60:4b:7d:b5:ab", "expiry" : 12345}
         ]
    }

</pre>

==== Delete address records ====

===== Request =====

<pre>

    {    
         "action" : "delete-req",
         "saddr" :  {"vxlan" : "myvlans",  "gw": "1.2.3.4", "ip": " 1.2.3.4", "mac": "10:60:4b:7d:b5:1a", "expiry" : 12345},
         "addrs" : [
                 {"vxlan" : "100", "ip" : "192.168.2.2"},
                 {"vxlan" : "100", "ip" : "192.168.2.3"}
         ]
    }

</pre>

===== Reply =====

<pre>

    {    
         "action" : "delete-rep",
         "msgid" : "msg id",
         "ts" : "timestamp",
         "saddr" : {"vxlan" : "myvlans",  "gw": "1.2.3.5", "ip": " 1.2.3.5", "mac": "10:60:4b:7d:b5:1b", "expiry" : 12345},
         "addrs" :  [
                {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.2", "stat": "done",  "reason" : ""},
                {"vxlan" : "100",  "gw": "1.2.3.4", "ip": "192.168.1.3", "stat": "done",  "reason" : ""}
         ]
    }

</pre>

== Scope  ==
Scope of L2-over-L3 Peer Addressing includes:

* Providing openvswitch flow and configuration to support scalable peer addressing in network virtualization/segmentation via L2-over-L3 overlay.  
* Providing PeerAddressing OGSI module handling incoming VXLAN ARP requests and replies with the corresponding encapsulated ARP replies.
* Providing PeerAddressingNorthbound REST service to for update/query of peer addresses (GW & IP/MAC mapping) per virtualized L2 network
* Providing intra-cluster, inter-cluster support of scalable peer addressing within or across data centers.

== Resources Committed (developers committed to working)  ==

JZ (Jiangang Zhang)  <jgzhang@hotmail.com>
<br />
Andy Jiaming Zhang  <andy.jzsv@gmail.com>
<br />

== Initial Committers  ==

JZ (Jiangang Zhang)  <jgzhang@hotmail.com>
<br />
Andy Jiaming Zhang  <andy.jzsv@gmail.com>
<br />

== Vendor Neutral  ==

Completely Vendor agnostic

== Meets Board Policy (including IPR)  ==
Yes. Most/all of the code is written from scratch & it meets Board Policy.
