== Affinity API and metadata service ==

== Description ==
Affinity API is an SDN northbound interface to model or describe network requirements of applications to the controller, so that the controller may provision or configure paths between endpoints appropriately. Affinity API may be used by a variety of applications ranging from security applications (e.g., Ddos detection and mitigation), traffic engineering applications, and policy routing. 

# An overview of the affinity service can be found in this presentation ( [[File:Opendaylight_affinity_API.pdf|Opendaylight affinity API update]]) to Open Daylight TSC from November 2013. 

# Notes on affinity API objects. [[File:Affinity-overview-H2.txt | Open Daylight API objects.]]

=== Features in the Hydrogen release ===

* API objects (affinity groups, affinity links, affinity attributes, affinity endpoint identifiers). 
* In-memory state management of affinity objects. 
* REST API calls to add, delete and configure affinity API objects. 
* Specific affinity types supported with implementations for a flat openflow network: 
** Path redirect affinity, also known as waypoint routing, through a single waypoint server. 
** Tap affinity, to replicate traffic to additional endpoints for monitoring and troubleshooting. 
** Access control affinity, for network ACLs. 

== Developer documentation ==
* Get a copy of the affinity repository. 
** git clone ssh://${ODL_USERNAME}@git.opendaylight.org:29418/affinity.git
** Build instructions: mvn clean install

* Get a copy of the controller repository, this is required for running tests during development.  
** git clone ssh://${ODL_USERNAME}@git.opendaylight.org:29418/controller.git
** Build instructions: mvn clean install -DskipTests -DskipIT
** Use the following additions to config.ini to include the correct bundles and set the right bundle dependencies.
*** Include the correct bundles. Adjust the paths to refer to the location of the affinity jar files in your environment.  
<blockquote>
    reference\:file\:/Users/sraman/affinity/affinity/api/target/affinity-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/affinity/implementation/target/affinity.implementation-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/affinity/northbound/target/affinity.northbound-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/analytics/api/target/analytics-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/analytics/implementation/target/analytics.implementation-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/analytics/northbound/target/analytics.northbound-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/flatl2/target/flatl2-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/l2agent/target/l2agent-0.4.2-SNAPSHOT.jar@2:start, \
    reference\:file\:/Users/sraman/affinity/flatl2/northbound/target/flatl2.northbound-0.4.2-SNAPSHOT.jar@2:start
</blockquote>

*** Include the correct felix file filter, this is currently a restriction that we do not work correctly when ''samples'' are loaded. 
<blockquote>
felix.fileinstall.filter=\
        ^(?!org\\.(apache\\.felix\\.fileinstall|opendaylight\\.controller\\.(samples))).*
</blockquote>

* Source code: 
** affinity, contains the affinity API, implementation and northbound REST API. 
** analytics, contains the analytics application to present statistics within the context of affinity objects. Included in this are the API, implementation and northbound API. 
** flatl2, a demo-only flat L2 network using openflow to implement a learning bridge. Adapted from openflow tutorial available online. 
** scripts, a set of test scripts for test and demo.

== Installation ==
If you are interested in using the affinity API, and do not require a complete affinity development environment, it is sufficient to use the pre-packaged virtualization or service provider editions of OpenDaylight. 

* Download the virtualization or SP editions. Or, you may also build the latest affinity integration build from the integration repository. 
<pre>
git clone ssh://${ODL_USERNAME}@git.opendaylight.org:29418/integration.git
</pre>
or,
If you are using anonymous git, 
<pre>
git clone https://git.opendaylight.org/gerrit/p/integration.git
</pre>

* Use the following command line argument to include the correct affinity bundles and exclude conflicting bundles.  
<pre>run.sh -virt affinity</pre>
Samples (including simpleforwarding and loadbalancer bundles will be excluded upon issuing this command line.

== User documentation ==
* Description of affinity API is available here. [[File:Affinity-overview-H2.txt]]

* API examples. See the affinity repo: scripts/affinity.py script for API examples. 

* Running the waypoint routing demo using mininet
This is slightly more involved since it requires careful synchronization between mininet and the python scripted traffic steering application. See demo.py script.

== Release Notes ==

* Support for host migration and refresh by updating affinity state in the network is missing.
* Support for static hosts, inactive hosts, non-existent hosts in the host tracker database currently missing.

== Architectural Issues ==

* Correctly handle combination of affinity attributes (isolation + path redirect, isolation + tap, path redirect + tap, multiple tap servers)
* Allow a redirected path through multiple waypoint servers (currently only support for one server.)
* Implementation of specific affinities on non-openflow networks (OVSDB, VTN, opendove). 
* Extending the API with tunnel endpoint identifiers, typical in OVSDB, VTN and opendove networks. 
* Integration with other northbound services, such as the OpenStack plugin, especially mirroring web server application topologies with strict isolation between endpoint groups. 
* Additional affinity types including Class of Service, encrypted tunnels. 
* Yangtools integration and mirroring of configuration state in the hierarchical configuration datastore.

== Security Considerations ==
N/A

== Quality Assurance (test coverage, etc) ==
Inclusion in system test for virtualization edition in progress. 

==End-of-life (API/Features EOLed in Release)==
N/A

==Bugzilla (summary of bug situation)==
We have not been using bugzilla for bug tracking. 

==Standards (summary of standard compliance)==
None. 

==Schedule (initial schedule and changes over the release cycle)==
N/A
