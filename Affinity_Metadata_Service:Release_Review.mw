== Affinity API and metadata service ==

== Description ==
Affinity API is an SDN northbound interface to model or describe network requirements of applications to the controller, so that the controller may provision or configure paths between endpoints appropriately. Affinity API may be used by a variety of applications ranging from security applications (e.g., Ddos detection and mitigation), traffic engineering applications, and policy routing. 

# An overview of the affinity service can be found in this presentation ( [[File:Opendaylight_affinity_API.pdf|Opendaylight affinity API update]]) to Open Daylight TSC from November 2013. 

# Notes on affinity API objects. [[File:Affinity-overview-H2.txt | Open Daylight API objects.]]

=== Features in the Hydrogen release ===

* API objects (affinity groups, affinity links, affinity attributes, affinity endpoint identifiers). 
* In-memory state management of affinity objects. 
* REST API calls to add, delete and configure affinity API objects. 
* Specific affinity types supported with implementations for a flat openflow network: 
** Path redirect affinity, also known as waypoint routing, through a single waypoint server. 
** Tap affinity, to replicate traffic to additional endpoints for monitoring and troubleshooting. 
** Access control affinity, for network ACLs. 

== User documentation ==
* Installation instructions. In virtualization and SP editions, use the following command line argument to include the correct affinity bundles and exclude conflicting bundles.  
<blockquote>run.sh -virt affinity</blockquote>

Samples (including simpleforwarding and loadbalancer bundles will be excluded upon issuing this command line. 

* API examples. See the affinity repo: scripts/affinity.py script for API examples. 

* Running the waypoint routing demo using mininet
This is slightly more involved since it requires careful synchronization between mininet and the python scripted traffic steering application. See demo.py script. 
     
== Architectural Issues ==

Future directions include: 
* Support for host migration and refresh by updating affinity state in the network. 
* Support for static hosts, inactive hosts, non-existent hosts in the host tracker database. 
* Avoid dependence on learning based L2 forwarding service (currently included for demo purposes only). 
* Implementation of specific affinities on non-openflow networks (OVSDB, VTN, opendove). 
* Extending the API with tunnel endpoint identifiers, typical in OVSDB, VTN and opendove networks. 
* Integration with other northbound services, such as the OpenStack plugin, especially mirroring web server application topologies with strict isolation between endpoint groups. 
* Additional affinity types including Class of Service, encrypted tunnels. 
* Yangtools integration and mirroring of configuration state in the hierarchical configuration datastore.

== Security Considerations ==
N/A

== Quality Assurance (test coverage, etc) ==
Inclusion in system test for virtualization edition in progress. 

==End-of-life (API/Features EOLed in Release)==
N/A

==Bugzilla (summary of bug situation)==
We have not been using bugzilla for bug tracking. 

==Standards (summary of standard compliance)==
None. 

==Schedule (initial schedule and changes over the release cycle)==
N/A
