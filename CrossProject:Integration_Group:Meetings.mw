== Meeting Schedule and Logistics ==
Integration meetings are held weekly for 1 hour on Wednesday afternoon at 1:00 Pacific Daylight Time (-7:00 GMT).
To participate in the next meeting, please refer to the information below:

*Meeting URL:  https://meetings.webex.com/collabs/meetings/join?uuid=M3CEH7E28VVAM2D4FXK95Z0N8M-A0TB

* Access Information
**Meeting number: 195 678 337
**Meeting password: This meeting does not require a password.

*Audio Connection
**+1-415-655-0001 US TOLL
**Access code: 195 678 337

== Meeting Agenda ==
* Project news
* Tasks progress
* Q&A

== Minutes of Meeting 9/25/2013 ==

* Project news
** Project contacts: we have contact names for all projects contributing in ODL. Check vHackfest wiki and project introduction mails from yesterday.
** ODL resources for test: Andrew (ODL sysadmin) has offered to help us with this. ODL test resources are also part of tomorrows TSC meeting agenda.  
** Integration project review: TSC will review our project during the call tomorrow. All Integration group members are welcome to join. Meeting details in TSC wiki.
** TWS calls: every Monday at 1PM (PST), they are very recommended for all Integration team members. Meeting details in TWS wiki.

* Java test progress
** Moiz and Swaraj are checking the Java code, starting with the controller project.
** JUnit tests are very minimum according to Moiz. We can check code coverage in Sonar and ask developers to write more tests.
** Every project that has dependencies on other projects (all except Yangtools) needs to have at least one integration test job in Jenkins. 

* Test tools progress
** Carol has already install some tools at home: Robot, Testopia, Jenkins.
** Carol wonders when they can be moved to ODL space. We need to get the project standard setup in place first (Repo, Jenkins, Nexus, etc..).
** Carol will work closely with Andrew to get the tools installed in ODL. Hopefully this activity can start next week.

* Q&A
** How to build and run a release vehicle: We do not really need to build the code again, we just need to create a delivery artifact that is made of other projects deliveries (same as VTN). This is also the reason we might need our own git repo. Thanks Ed.
** System Test flow: everytime a project commits code and this gets merged and tested in Jenkins, 2 tests should be triggered: 1) Every other project that has dependency on the just changed project has to run its own build test to verify changes in the new artifact do not impact project build (this is what we need to check and push now); and 2) A release vehicle (i.e. basic, virtualization, service provider, full flavor) gets built and tested within an automated environment (this is what we are trying to setup now).

[[Category:Integration Group]]
