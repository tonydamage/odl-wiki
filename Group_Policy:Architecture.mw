This document describes the architecture for the [[Group Policy:Main|group-based policy project]], a part of [[Main Page|OpenDaylight]].  The group-based policy project defines an application-centric policy model for OpenDaylight that separates information about application connectivity requirements from information about the underlying details of the network infrastructure.

This document is organized as a series of overview pages that provide a high-level picture of a particular area, but can then link into pages that provide a more detailed treatment of some aspect of that high-level area.  This page provides an overview for the system as a whole, and has subpages that provide information about each of the major components of the architecture.

== Overview ==
The components of the architecture are divided into two main categories.  First, there are components that are responsible for managing the policy, configuration, and related state.  These are the components that deal with the higher-order group-based policy that exists independent of the underlying infrastructure.  Second, there renderer components that are responsible for applying the policy model to the underlying network infrastructure.  The system can support potentially a variety of renderers that may have very different sets of features and different approaches for enabling the policy that the user has requested.

The key to understanding the architecture is to first understand the policy model -- much of the design of the system flows directly from the design of the policy model.

== Policy Model ==
{{Main|[[Group_Policy:Architecture/Policy_Model|Policy Model]]}}
{{:Group_Policy:Architecture/Policy_Model}}

== State Repositories ==
The state repositories are distributed data stores that provide the configuration and operational data required for renderers to apply the policy as specified by the user.

=== Endpoint Repository ===

=== Policy Repository ===

=== Operational State Repository ===

== Renderers ==

=== Renderer Common Framework ===

=== OpenFlow/OVS Renderer ===

=== OpFlex Renderer ===
