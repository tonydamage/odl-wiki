= Flows : Test Provider =

Currently, the openflowplugin has a test-provider that allows you to push various flows through the system from the OSGI command line.  Once those flows have been pushed through, you can see them as examples
and then use them to see in the config what a particular flow example looks like.

== AddFlow : addMDFlow ==

From the
<pre>
cd openflowplugin/distribution/base/target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight
./run.sh
</pre>

Point your mininet at the controller as described above.

once you can see your node (probably openflow:1 if you've been following along) in the inventory, at the OSGI command line try running:
<pre>
addMDFlow openflow:1 f#
</pre>
Where # is a number between 1 and 80.  This will create one of 80 possible flows.  You can go confirm they were created on the switch.

== RemoveFlow : removeMDFlow ==

From the
<pre>
cd openflowplugin/distribution/base/target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight
./run.sh
</pre>

Point your mininet at the controller as described above.

once you can see your node (probably openflow:1 if you've been following along) in the inventory, at the OSGI command line try running:
<pre>
removeMDFlow openflow:1 f#
</pre>
Where # is a number between 1 and 80.  The flow to be deleted should have same flowid and Nodeid as used for flow add.  You can go confirm they were created on the switch.

== ModifyFlow : modifyMDFlow ==

From the
<pre>
cd openflowplugin/distribution/base/target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight
./run.sh
</pre>

Point your mininet at the controller as described above.

once you can see your node (probably openflow:1 if you've been following along) in the inventory, at the OSGI command line try running:
<pre>
modifyMDFlow openflow:1 f#
</pre>
Where # is a number between 1 and 80.  The flow to be modified should have same flowid and Nodeid as used for flow add.  You can go confirm they were created on the switch.

= Meters : Test Provider =

Currently, the openflowplugin has a test-provider that allows you to push various flows through the system from the OSGI command line.  Once those flows have been pushed through, you can see them as examples
and then use them to see in the config what a particular flow example looks like.

== AddMeter : addMeter ==

From the
<pre>
cd openflowplugin/distribution/base/target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight
./run.sh
</pre>

Point your mininet at the controller as described above.

once you can see your node (probably openflow:1 if you've been following along) in the inventory, at the OSGI command line try running:
<pre>
addMeter openflow:1
</pre>
You can go confirm they were created on the switch.

== RemoveMeter : removeMeter ==

From the
<pre>
cd openflowplugin/distribution/base/target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight
./run.sh
</pre>

Point your mininet at the controller as described above.

once you can see your node (probably openflow:1 if you've been following along) in the inventory, at the OSGI command line try running:
<pre>
removeMeter openflow:1
</pre>
The meter to be deleted should have same meterid and Nodeid as used for meter add.  You can go confirm they were created on the switch.

== ModifyMeter : modifyMeter ==

From the
<pre>
cd openflowplugin/distribution/base/target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight
./run.sh
</pre>

Point your mininet at the controller as described above.

once you can see your node (probably openflow:1 if you've been following along) in the inventory, at the OSGI command line try running:
<pre>
modifyMeter openflow:1
</pre>
The meter to be modified should have same meterid and Nodeid as used for meter add. You can go confirm they were created on the switch.
