== Maintainer ==
Luis Gomez (ecelgp@gmail.com)

== Introduction ==
OpenDaylight Jenkins builds and provides all artifacts we need for testing so there is no need to setup development environment for this. Also OSGi framework allows easy integration and generation of custom controller editions.

== Hydrogene release edition artifacts ==
Controller base edition:
<pre>
https://nexus.opendaylight.org/content/repositories/opendaylight.release/org/opendaylight/integration/distributions-base/0.1.1/distributions-base-0.1.1-osgipackage.zip
</pre>
Controller virtualization edition:
<pre>
https://nexus.opendaylight.org/content/repositories/opendaylight.release/org/opendaylight/integration/distributions-virtualization/0.1.1/distributions-virtualization-0.1.1-osgipackage.zip
</pre>
Controller service provider edition:
<pre>
https://nexus.opendaylight.org/content/repositories/opendaylight.release/org/opendaylight/integration/distributions-serviceprovider/0.1.1/distributions-serviceprovider-0.1.1-osgipackage.zip
</pre>

== Latest edition artifacts ==
Controller base edition:
<pre>
https://jenkins.opendaylight.org/integration/job/integration-project-centralized-integration/lastSuccessfulBuild/artifact/distributions/base/target/distributions-base-0.1.2-SNAPSHOT-osgipackage.zip
</pre>
Controller virtualization edition:
<pre>
https://jenkins.opendaylight.org/integration/job/integration-project-centralized-integration/lastSuccessfulBuild/artifact/distributions/virtualization/target/distributions-virtualization-0.1.2-SNAPSHOT-osgipackage.zip
</pre>
Controller service provider edition:
<pre>
https://jenkins.opendaylight.org/integration/job/integration-project-centralized-integration/lastSuccessfulBuild/artifact/distributions/serviceprovider/target/distributions-serviceprovider-0.1.2-SNAPSHOT-osgipackage.zip
</pre>




* Self contain test: you have controller, mininet and robot framework all running in the same VM. This is useful for verifying the tools included in the VM and/or writing system test.
* External controller test: you can use mininet and robot framework in the VM to test an external controller running on a separate VM or platform. This is useful for developers to test their builds or to validate a specific controller platform.

== VM description ==
* Intalled SW: [http://openjdk.java.net/ Java 1.7 OpenJDK], [http://www.opendaylight.org/software OpenDaylight release distributions], [http://mininet.org/ mininet 2.1.0], [http://openvswitch.org/ Open vSwitch 2.0.0], [https://github.com/CPqD/ofsoftswitch13 CPqD ofsoftswitch13], [http://code.google.com/p/robotframework/ Robot framework 2.8.3], [https://git.opendaylight.org/gerrit/gitweb?p=integration.git;a=tree integration test scripts], [https://wiki.opendaylight.org/view/OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator VTN coordinator], [http://www.wireshark.org/ Wireshark], CBench
* VM configuration:
** odl_server: Ubuntu 13.04 server, 8GB HDD, ova file size=2GB
** odl_desktop: Ubuntu 13.04 desktop (GUI), 20GB HDD, ova file size=3GB
