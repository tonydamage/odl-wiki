{| align="right" border="1"
|align="center"|'''Guide Contents'''
|-
|[[OpenDaylight_Lisp_Flow_Mapping:Architecture|Architecture Overview]]<br>[[OpenDaylight_Lisp_Flow_Mapping:Java_API|Java API]]<br>[[OpenDaylight_Lisp_Flow_Mapping:REST_API|REST API]]<br>[[OpenDaylight_Lisp_Flow_Mapping:SimultaneousReleasePlan2013|Release Plan]]<br>[[OpenDaylight_Lisp_Flow_Mapping:ReleasePlan2013_Detailed|Detailed Release Plan (2013)]]<br>[[OpenDaylight_Lisp_Flow_Mapping:Hacking_Code_From_CLI|Hacking the Code From CLI]]<br>[[OpenDaylight_Lisp_Flow_Mapping:Main|Back to LISP Flow Mapping Main]]
|}



== Overview and Architecture ==

=== LISP Overview ===
Locator ID Separation Protocol ([http://tools.ietf.org/search/rfc6830 LISP]) is a technology that provides a flexible map-and-encap framework that can be used for overlay network applications, such as data center network virtualization, and Network Function Virtualization (NFV). LISP introduces two name spaces: Endpoint Identifiers (EIDs), and Routing Locators (RLOCs). In a virtualization environment, EIDs can be viewed as virtual address space and RLOCs can be viewed as physical network address space.
The LISP framework decouples network control plane from the forwarding plane by providing: (1) a data plane that specifies how the virtualized network addresses are encapsulated in addresses from the underlying physical network, and (2) a control plane that stores the mapping of the virtual-to-physical address spaces and the associated forwarding policies, and serves this information to the data plane on demand. Network programmability is achieved by programming forwarding policies such as transparent mobility, service chaining, and traffic engineering in the mapping system, where the data plane elements can fetch these policies on demand as new flows arrive. In this presentation we explain how the LISP Flow Mapping project in ODL can be used to enable advanced SDN and NFV use cases.

=== Architecture Overview ===
The Lisp Flow Mapping service provides [http://tools.ietf.org/search/rfc6830 LISP] Mapping System services. This includes LISP Map-Server and LISP Map-Resolver services, to store and serve the ''mapping data'' to data plane nodes as well as to OpenDaylight applications. Mapping data can include mapping of virtual addresses to physical network address where the virtual nodes are reachable/hosted at. Mapping data can also include a variety of routing policies including traffic engineering and load balancing. To leverage this service, a northbound API allows OpenDaylight applications and services to define the mappings and policies in the LISP Mapping Service. This project also includes a southbound LISP plugin that enables LISP dataplane devices to interact with the OpenDaylight via the LISP protocol.

The following figure depicts the described components.

[[File:LISP-ODL-02.jpg|600px]]

=== Project Scope  ===

The OpenDaylight LISP Mapping Service includes: 

* LISP Map Server
* LISP Map Resolver
* Southbound ODL plugin supporting LISP protocol
* LISP Mapping Services northbound API

===Architecture Details===
* TO DO

== API ==

View the LISP Flow Mapping REST API and Java API here:

* [[OpenDaylight_Lisp_Flow_Mapping:Java_API|Java API]]
* [[OpenDaylight_Lisp_Flow_Mapping:REST_API|REST API]]

== Repo Name ==
lispflowmapping (Lisp Flow Mapping)


[[Category:LISP Flow Mapping]]
