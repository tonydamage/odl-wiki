{|  class="wikitable" style="color:#ff6600; background-color:#ffcc99;"  align="right" border="1"
|align="center"|'''OpenFlow Protocol Library Facts                                                           '''
|-
|'''Project Creation Date:''' July 18th, 2013
'''Lifecycle State:''' Incubation <br>
'''Primary Contact:''' Michal Polkorab <michal.polkorab@pantheon.sk> <br>
'''Project Lead:''' Michal Polkorab <michal.polkorab@pantheon.sk> <br>
'''Committers:''' <br>
* Daniel Bartos <daniel.bartos@pantheon.sk>
* Adam Brcek <adam.brcek@pantheon.sk>
* Michal Polkorab <michal.polkorab@pantheon.sk> <br>
'''IRC:'''  freenode.net #opendaylight <br>
'''Mailing List:''' openflowjava-dev@lists.opendaylight.org <br>
|}

= OpenFlow Protocol Library: Links =

* [[Project Proposals:Openflow Protocol Library|Project Proposal]]
* [[Openflow Protocol Library:RELEASE Plan 2013|RELEASE Plan 2013]]
* [[Openflow Protocol Library:PROJECT Plan 2013|PROJECT Plan 2013]]
* [[Openflow Protocol Library:Candidate RELEASE Plan 2014|RELEASE Plan 2014]]

* [[Openflow Protocol Library:Possible future progress|Future progress]]

=OpenFlow  Protocol Library: Insights=
OpenFlow Protocol Library is component in OpenDaylight, that mediates communication
between OpenDaylight controller and hardware devices supporting OpenFlow
protocol. Primary goal is to provide user (or upper layers of
OpenDaylight) communication channel, that can be used for managing network
hardware devices.

===Key objectives=== 
* Simultaneous support of multiple versions of wire-protocol 
* Extensibility to support later OpenFlow versions 
* Immutable transfer objects generation 
* Scalable non-blocking implementation 
* Pipeline processing 
* Scatter buffer 
* TLS support 

===Common principles===

* Serialization (message coding / decoding) logic is separated from implementation of transfer objects.

* All transfer objects returned from this library are immutable.

* Input/Output processing is done via processing pipeline, which could be modified in runtime based on session characteristics (e.g. support of multiple binary protocol versions).

= Architecture =
* [[Openflow Protocol Library: Architecture|Architecture]]

= User Guide =
* [[Openflow Protocol Library:Startup Guide|User Guide]]

= Developer Guide =
For developer guide check [[Openflow Protocol Library:Documentation|Documentation]] page

=Documentation=
* [[Openflow Protocol Library:Documentation|Documentation]]

= Testing =
* [[Openflow Protocol Library:Testing|Testing]]

* Testing environment
** [[Openflow Protocol Library:OpenVirtualSwitch|OpenVirtualSwitch]]

= Release Notes =

* [[Openflow Protocol Library:Release Notes|Release Notes]]
