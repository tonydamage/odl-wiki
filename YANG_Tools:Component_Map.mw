{| class="wikitable"
|-
! Artifact ID 
! Component 
! Description 
! Design 
! Javadoc 
! Howto 
! Experts 
! Users 
! Reviewers 
! Maturity 
! Bugzilla
|-
| concepts 
| Common Concepts 
| Common generic concepts, which are not defined by JRE and/or Guava 
| 
| 
| 
| 
*Tony Tkacik &lt;ttkacik@cisco.com&gt; 
*Robert Varga &lt;rovarga@cisco.com&gt;

| 
| 
| 
| 
|-
| util 
| Common Utilities 
| 
Common generic utilities, which are not provided by Java and/or Guava 

| 
| 
| 
| 
*Robert Varga &lt;rovarga@cisco.com&gt;

| 
| 
| 
| 
|-
| 
object-cache-api 

| rowspan="3" | Object Cache<br><br><br> 
| API Definition of Object Cache for Immutable objects 
| <br> 
| <br> 
| <br> 
| rowspan="3" | 
*Robert Varga &lt;rovarga@cisco.com&gt;

<br> 

| <br> 
| <br> 
| <br> 
| <br>
|-
| object-cache-noop 
| No-op implementation of Object Cache (no caching) 
| 
| 
| 
| 
| 
| 
| 
|-
| object-cache-guava 
| Guava Based Implementation of Object Cache 
| 
| 
| 
| 
| 
| 
| 
|-
| websocket-client 
| Websocket client 
| Netty-based Java Websocket client 
| 
| 
| 
| 
*Martin Bobak &lt;mbobak@cisco.com&gt; 
*Martin Sunal &lt;msunal@cisco.com&gt;

| 
| 
| 
| 
|-
| checkstyle-logging 
| rowspan="2" | Development Utilities<br> 
| Checkstyle rules for detecting and enforcing Best Loging Practices 
| 
| 
| 
| 
*Milos Fabian &lt;mifabian@cisco.com&gt;

| 
| 
| 
| 
|-
| mockito-configuration 
| Reusable Mockito Configuration 
| 
| 
| 
| 
*Milos Fabian &lt;mifabian@cisco.com&gt;

| 
| 
| 
| 
|-
| yang-common 
| YANG Common Concepts 
| Common concepts for working with YANG-modeled structures 
| 
| 
| 
| 
*Tony Tkacik&nbsp;&lt;ttkacik@cisco.com&gt; 
*Robert Varga &lt;rovarga@cisco.com&gt;

| 
| 
| 
|-
| yang-model-api 
| rowspan="2" | YANG Semantic Model<br> 
| 
API definition of YANG semantic model, which represents resolved and linked YANG models. 

| 
| 
| 
| rowspan="2" | 
*Tony Tkacik &lt;ttkacik@cisco.com&gt; 
*Martin Vitez &lt;mvitez@cisco.com&gt;

| 
| 
| 
|-
| yang-model-util 
| Utilities and implementations working with YANG semantic model 
| 
| 
| 
| 
| 
| 
|-
| yang-data-api 
| rowspan="5" | YANG Data Utilities<br><br><br><br> 
| API definition of YANG modeled data 
| 
| 
| 
| rowspan="2" | 
*Tony Tkacik &lt;ttkacik@cisco.com&gt;<br> 
*Maros Marsalek &lt;mmarsale@cisco.com&gt; 
*Jozef Gloncak &lt;jgloncak@cisco.com&gt;

| 
| 
| 
|-
| yang-data-impl 
| Implementation of datastructures defined in YANG Data, XML utilities 
| 
| 
| 
| 
| 
| 
|-
| yang-data-json 
| 
| 
| 
| 
| 
*Maros Marsalek &lt;mmarsale@cisco.com&gt; 
*Jozef Gloncak &lt;jgloncak@cisco.com&gt;

| 
| 
| 
|-
| yang-data-operations 
| Implementation of Netconf Operations 
| 
| 
| 
| 
*Maros Marsalek &lt;mmarsale@cisco.com&gt;

| 
| 
| 
|-
| yang-data-util 
| 
| 
| 
| 
| 
| 
| 
| 
|-
| yang-parser-api 
| rowspan="2" | YANG Parser<br> 
| API definition of YANG Parser which produces YANG Semantic Model 
| 
| 
| 
| rowspan="2" | 
*Martin Vitez &lt;mvitez@cisco.com&gt;

<br><br> 

| 
| 
|-
| yang-parser-impl 
| Antlr-based YANG Parser implementation and utilities to work with YANG Parser. 
| 
| 
| 
| 
| 
|-
| yang-maven-plugin 
| rowspan="2" | YANG Maven Plugin<br> 
| YANG Maven Plugin based on YANG Parser 
| 
| 
| 
| rowspan="2" | 
*Martin Vitez &lt;mvitez@cisco.com&gt;<br>

| 
| 
|-
| yang-maven-plugin-spi 
| SPI Definition for custom plugins for YANG Maven Plugin 
| 
| 
| 
| 
| 
|}
