__TOC__

== Model Driven Maven Project in Three Commands ==
To create a yang model project:

=== Write your yang file ===
 Write your yang model (see [http://www.yang-central.org/twiki/bin/view/Main/WebHome yang-central]) in a *.yang file

=== Create a maven model project using the archetype ===
Execute:
<pre>
mvn archetype:generate -DarchetypeRepository=http://nexus.opendaylight.org/content/repositories/opendaylight.snapshot/ \
     -DarchetypeGroupId=org.opendaylight.controller.archetypes \
     -DarchetypeArtifactId=odl-model-project \
     -DarchetypeVersion=1.1-SNAPSHOT \
     -DinteractiveMode=false \
     -DgroupId=mygroupId \
     -DartifactId=myartifactId \
     -Dversion=myversion
</pre>
Where: 
   mygroupId is the groupId you want for your maven project (recommend org.opendaylight.<reponame>.<something> )
   myartifactId is the artifactId you want for your maven project
   myversion is the version you want for your maven project (recommend 0.0.1-SNAPSHOT to start)
This will create a directory
<pre>
myartifactId
myartifactId/pom.xml
myartifactId/src
myartifactId/src/main
myartifactId/src/main/yang
</pre>
(please do sub in your artifactId, groupId, and version for myartifactId, mygroupId, and myVersion in the command line above)
cd into the project directory created.

=== Copy your yang model into the src dir ===
* Copy your *.yang model files into the src/main/yang subdir
* In your pom.xml file, include a dependency for each imported model. Supported models and their dependency stanzas can be found in [[YANG Tools:Available Models]]. For example, if you import the 'ietf-inet-types' model, include the following dependency in your pom.xml file:
<pre>
<dependency>
    <groupId>org.opendaylight.yangtools.model</groupId>
    <artifactId>ietf-inet-types</artifactId>
    <version>2010.09.24-SNAPSHOT</version>
</dependency>
</pre>

=== Run mvn clean install ===
* In your maven project directory run:
<pre>
mvn clean install
</pre>
* You will find all of the needed autogenerated classes in target/ and they will be built into the resulting jar file.  The java class source itself it ephemeral.

== Other helpful yang information ==

[http://www.yang-central.org/ YangCentral] has an excellent [http://www.yang-central.org/twiki/bin/view/Main/YangTutorials yang tutorial].
As examples you can find [[YANG_Tools:Available_Models|currently available yang models]], including the <dependency /> info if you want to make your model project depend on them.
This is particularly helpful if you need stock sorts of networking types like [[YANG_Tools:Available_Models#ietf-yang-types|ietf-yang-types]] or [[YANG_Tools:Available_Models#ietf-inet-types|ietf-inet-types]].
