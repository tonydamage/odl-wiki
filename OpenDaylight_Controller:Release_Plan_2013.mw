== Introduction  ==

The OpenDaylight Controller is a highly available, modular, extensible, scalable, and multi-protocol Controller infrastructure built for SDN deployment on modern heterogenous multi-vendor networks. The model driven Service Abstraction Layer provides the needed abstractions to support multiple Southbound protocols via Plugins. The Application oriented extensible north-bound architecture provides a rich set of Northbound APIs via RESTful web services for loosely coupled applications and OSGi services for co-located applications The OSGi framework, upon which the Controller platform is built on is responsible for the Modular and extensible nature of the Controller and also provides the versioning and life-cycle management for OSGi modules and services. 

Please see the [[OpenDaylight_Controller:Main|Main OpenDaylight Controller page]] for more details.

== Release Deliverables  ==

{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | Model Driven SAL&nbsp; 
| Please see a [https://wiki.opendaylight.org/view/OpenDaylight_Controller:Architectural_Framework#Evolution_of_the_Controller_Service_Abstraction_Layer summary of the MD-SAL] and a more [https://wiki.opendaylight.org/view/OpenDaylight_Controller:Model-Driven_Controller_Service_Abstraction_Layer detailed MD-SAL description].
|- align="right"
| align="left" | HA 
| Basic clustering and support for transactional NB API. 
|- align="right"
| align="left" | Filtered PacketIn 
| Allow applications using PacketIn to request to receive only certain kinds of packets. 
|- align="right"
| align="left" | Netconf SB 
| Support Netconf as a SB protocol
|- align="right"
| align="left" | FCAPS support 
| Support for managability of the controller itself.  Note, the FCAPS items are for things like configuring the log level or the size of the thread pool that have to do with managing the 
controller itself, not things like pushing a flow.
|}

== Release Milestones  ==

{| class="wikitable"
|-
! Milestone 
! Offset 0 Date 
! Deliverables
|- align="right"
| align="left" | M1 
| 7/22/2013 
| align="left" | 
{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | Release Plan 
| Candidate Release Plan
|- align="right"
| align="left" | MD-SAL: Initial Yang Models For Base Functionality 
| align="left" | Initial Yang Models for existing SAL Services including: 
#Topology<br> 
#Inventory<br>

|}

|- align="right"
| align="left" | M2 
| 8/19/2013 
| align="left" | 
{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | Release Plan 
| align="left" | Final Release Plan
|- align="right"
| align="left" | MD-SAL: OF 1.0 yang model completed. 
| align="left" | Yang model for OF 1.0 completed.
|- align="right"
| align="left" | MD-SAL: Initial Yang Models For Base Functionality<br> 
| align="left" | Initial Yang Models for existing SAL Services including: 

#Flowprogramming 
#Statistics

|- align="right"
| align="left" | MD-SAL: Working Model Driven SAL in single JVM 
| align="left" | Functioning MD&nbsp;SAL&nbsp;in a single JVM including dynamic runtime model augmentation.
|- align="right"
| align="left" | MD-SAL: Southbound Plugin Development Guide 
| align="left" | Documentation Describing how to write a Model Drive Southbound Plugin<br>
|- align="right"
| align="left" | MD-SAL: Design for MB integration 
| align="left" | Design work for integrating a message bus with the controller<br>
|- align="right"
| align="left" | HA: Basic Clustering Working 
| align="left" | OF 1.0 switch will be able to connect to multiple controllers and the controllers will automatically elect a master to control the switch and have topology etc working. 

#Multihomed switch connections 
#Consistency check for switches that migrate from one controller node to another

|}

|- align="right"
| align="left" | M3 
| 9/16/2013 
| align="left" | 
{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | MD-SAL: Integration of Message Bus 
| align="left" | Integration of Message Bus, multinode MD-SAL functioning and will support message exchange patterns: 

#Publish/Subscribe 
#Request/Reply

|- align="right"
| align="left" | MD-SAL: OF&nbsp;1.0 SB&nbsp;Plugin Migrated<br> 
| align="left" | 
OF&nbsp;1.0 Southbound plugin migrated to use the MD-SAL such that both old API and new MD-API are both exposed so everything continues to function.<br> 

|- align="right"
| align="left" | MD-SAL: Application Migration guide to MD-SAL<br> 
| align="left" | Documentation for writing applications on top of the MD-SAL and migrating existing applications.<br>
|- align="right"
| align="left" | MD-SAL:&nbsp; Lessons learned migrating OF&nbsp;1.0 SB&nbsp;Plugin 
| align="left" | Documentation for lessons learned migrating to OF&nbsp;1.0 SB&nbsp;plugin to assist other SB&nbsp;plugin migrators.
|- align="right"
| align="left" | HA: Support transactions on the NB 
| align="left" | When a request comes from the NB either complete all the work related to it or none of it and communicate result back to requestor.&nbsp;
|- align="right"
| align="left" | NETCONF-SB: Base Netconf Client Plugin prototype 
| align="left" | Base Netconf SB plugin prototype&nbsp;
|- align="right"
| align="left" | FCAPS: YANG-to-MXBean code generator
| align="left" | Code to generate MXBeans from yang model, integration with yangtools
|- align="right"
| align="left" | FCAPS: Integration with logging
| align="left" | Integration to allow configuration of log levels at runtime
|- align="right"
| align="left" | FCAPS: NB Netconf protocol implementation and JMX Bridge
| align="left" | Code to allow the MXBeans to be accessed via Netconf
|}

|- align="right"
| align="left" | M4 
| 10/14//2013 
| align="left" | 
{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | API Freeze 
| <br>
|- align="right"
| align="left" | MD-SAL: Migration of Existing Controller Applications<br> 
| align="left" | 
Migration of Existing Controller Applications to MD-SAL&nbsp;including: 

#FlowManager<br> 
#TopologyManager<br> 
#SwitchManager<br> 
#TroubleshootingManager<br> 
#StatisticsManager<br> 
#HostTracker<br>

|- align="right"
| align="left" | MD-SAL: Support for Model Driven REST APIs 
| align="left" | Automatic generation of REST&nbsp;APIs for the Model&nbsp;Driven Components (note: does not preclude hand crafted APIs, nor exclude existing NB&nbsp;APIs continuing to function.<br>
|- align="right"
| align="left" | Filter PacketIn 
| align="left" | Allow applications using PacketIn to request to receive only certain kinds of packets.
|- align="right"
| align="left" | NETCONF-SB: Basic mount support for configuration
| align="left" | Support for 'mounting' in configuration from remote devices.
|- align="right"
| align="left" | NETCONF-SB: Identification of capabilities
| align="left" | Identification of capabilities from remote devices.
|- align="right"
| align="left" | FCAPS: Yang based Netconf configuration validator
| align="left" | Allows generation of MXBean configuration verification leveraging information in underlying Yang models
|}

|- align="right"
| align="left" | M5 
| 11/11/2013 
| align="left" | 
{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | Code Freeze 
| <br>
|- align="right"
| align="left" | MD-SAL: Documentation generator for SAL 
| align="left" | Automatic generation of the JAVA and REST&nbsp;APIs from the Yang Models at compile time.
|- align="right"
| align="left" | NETCONF-SB: Mount support for notification 
| align="left" | Support for 'mounting' in notifications from remote devices.
|- align="right"
| align="left" | NETCONF-SB: Dynamic exposition of models 
| align="left" | Allow exposing models from remote devices dynamically to the MD-SAL.
|}

|- align="right"
| align="left" | RC0 
| 11/18/2013 
| align="left" | 


|- align="right"
| align="left" | RC1 
| 11/25/2013 
| align="left" | 


|- align="right"
| align="left" | RC2 
| 12/2/2013 
| align="left" | 


|- align="right"
| align="left" | Formal Release 
| 12/9/2013 
| align="left" | 
{| class="wikitable"
|-
! Name 
! Description
|- align="right"
| align="left" | Case of Champaign
| Required for shipping celebration.
|}

|}

== Expected Dependencies on Other Projects  ==

== Compatibility with Previous Releases  ==

== Themes and Priorities  ==

#Model Drive SAL - Plan incorporated into Milestones<br> 
#Performance - Not yet reflected in Milestones<br> 
#Scaling - Note yet reflected in Milestones<br> 
#HA - Reflected in Milestones<br> 
#Filtering PacketIn on Packet Type - Plan incorporated into Milestones
#FCAPS - Plan incorporated into Milestones<br> 
# CLI - Not yet reflected in Milestones
#Persistent Storage - Not yet reflected in Milestones - Need something that has simple deployment story - Maybe Infinispan CacheStore<br>
# Netconf - Plan incorporated into Milestones <br>

== Other  ==

<br>
