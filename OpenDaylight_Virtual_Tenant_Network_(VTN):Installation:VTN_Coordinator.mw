= Installing VTN Coordinator from source code =

== Prior preparation ==
:1. Arrange a server with the platform as suggested above.

:2. Install necessary packages. 
:* RHEL/Fedora/Cent OS
    yum install make glibc-devel gcc gcc-c++ boost-devel openssl-devel \
      ant perl-ExtUtils-MakeMaker unixODBC-devel perl-Digest-SHA uuid libxslt libcurl libcurl-devel git

:* Ubuntu 13.10
   apt-get install pkg-config gcc make  ant g++ maven git libboost-dev libcurl4-openssl-dev \
    libjson0-dev libssl-dev openjdk-7-jdk unixodbc-dev

:* Ubuntu 12.04
   apt-get install pkg-config gcc make  ant g++ maven git libboost-dev libcurl4-openssl-dev \
    libssl-dev openjdk-7-jdk unixodbc-dev
:: Install libjson0-dev from packages of ubuntu versions (>12.04)

:3. Install JDK 7, and add the JAVA_HOME environment variable (Only for RHEL/Cent OS/Fedora)
:* RHEL 6.1/Cent OS 6.1
:: Download Oracle JDK 7 from the following page, and install it.
::: http://www.oracle.com/technetwork/java/javase/downloads/index.html
:: Set JAVA_HOME to the location of the JDK.
::: e.g.) export JAVA_HOME=/usr/java/default
:* RHEL 6.4/Cent OS 6.4 /Fedora (17/20)
:: Install OpenJDK 7.
::: yum install java-1.7.0-openjdk-devel
:: Set JAVA_HOME to the location of the JDK.
::: e.g.) export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk.x86_64

:4. Preperation for Execution

:* RHEL/Fedora/Cent OS
:: Download the following PostgreSQL 9.1 files from http://yum.postgresql.org/9.1/redhat/rhel-6-x86_64/ and install. 
::* postgresql91-libs-9.1.9-1PGDG.rhel6.x86_64.rpm
::* postgresql91-9.1.9-1PGDG.rhel6.x86_64.rpm
::* postgresql91-server-9.1.9-1PGDG.rhel6.x86_64.rpm
::* postgresql91-contrib-9.1.9-1PGDG.rhel6.x86_64.rpm
::* postgresql91-odbc-09.00.0310-1PGDG.rhel6.x86_64.rpm

:* Ubuntu 13.10/12.04
   apt-get install  postgresql-9.1 postgresql-client-9.1 postgresql-client-common postgresql-contrib-9.1 odbc-postgresql


:5. Install Maven. (RHEL/Cent OS/Fedora)
:* Download Maven from the following page and install it folloiwng the instruction in the page.
:** http://maven.apache.org/download.cgi

:6. Install gtest-devel, json-c libraries 
:* RHEL/Fedora/Cent OS
   wget <nowiki>http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</nowiki>
   rpm -Uvh epel-release-6-8.noarch.rpm
   yum install gtest-devel json-c json-c-devel

:* Ubuntu 13.10/Ubuntu 12.04
   apt-get install cmake libgtest-dev
   cp -R /usr/src/gtest gtest-work
   cd gtest-work
   cmake CMakeLists.txt
   make
   sudo cp *.a /usr/lib
   cd ..
   rm -rf gtest-work

== Build ==
:1. Download the code from git.
 git clone ssh://<username>@git.opendaylight.org:29418/vtn.git
or
 git clone <nowiki>https://git.opendaylight.org/gerrit/p/vtn.git</nowiki>

:2. Build and install VTN Coordinator.
 cd vtn/coordinator
 mvn -f dist/pom.xml package
 sudo make install

= Run VTN Coordinator =

== Prior preparation ==
Please use any one of the below procedure
===Configuration via script===
Download the following file

:[[File:Tomcat setup.sh|Tomcat installation and configuration]]

To run the script,follow the steps :

:1. dos2unix Tomcat_setup.sh

:2. ./Tomcat_setup.sh

*Note:Run the script as a sudo user

===changing the port===
:1. By Default coordinator will listen on port 8083
:2. To change the listening port modify the TOMCAT_PORT in below file
:* /usr/local/vtn/tomcat/conf/tomcat-env.sh.
:3. Set up the DB.
 /usr/local/vtn/sbin/db_setup

== Start ==
:1. Start VTN Coordinator and Tomcat.
 /usr/local/vtn/bin/vtn_start
 
:2. Execute the following commands while stopping.
 /usr/local/vtn/bin/vtn_stop

== WebAPI ==
* VTN Coordinator version information will be displayed if following command is executed when VTN has started successfully.
    curl -X GET -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1' <nowiki>http://127.0.0.1:8080/vtn-webapi/api_version.json</nowiki>
* The expected response message:
 {"api_version":{"version":"V1.0"}}


[[Category:OpenDaylight Virtual Tenant Network]]
