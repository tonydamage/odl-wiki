
== Problem statement ==
Original MD-SAL DataStore used data structures defined in yang-data-api, which more resembles XML structures \
then well-defined data structures defined by YANG and used in the MD-SAL, Java DTOs generated by YangTools \
and so on, and it is hard to implement optimized datastore on top of them.

Also data contracts of MD-SAL does not provide enough capabilities to more closely specify intent of the
applications and could not perform optimizations (e.g. not deserializing unnecessary data, 
computing only necessary change sets) to clients.

Current implementation of datastore also does not allow for atomic updates on subtrees, which needs to be
addressed to improve reliability and performance of MD-SAL.

== Necessary actions ==

* yang-data-api needs to be extended to provide tree structures which more closely match data structures 
defined by YANG Schema.
** Data structures need to be closely alligned to Instance Identifier and should provide support 
for atomic operations.
* sal-common-api, sal-core-api and sal-binding-api needs to be extended to better specify user intent.
