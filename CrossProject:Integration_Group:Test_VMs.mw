== Maintainer ==
Luis Gomez (ecelgp@gmail.com)

== Introduction ==
New test VMs are available through the links below. The purpose of the VMs is to ease the task of developing/running integration/system test on the OpenDaylight controller. Note that both have same content, only difference is whether you prefer to test with desktop or not.

== Test environments ==
Test VM can be used in two scenarios:
* Self contain test: you have controller, mininet and robot framework all running in the same VM. This is useful for verifying the tools included in the VM and/or writing system test.
* External controller test: you can use mininet and robot framework in the VM to test an external controller running on a separate VM or platform. This is useful for developers to test their builds or to validate a specific controller platform.

== VM description ==
* Intalled SW: [http://openjdk.java.net/ Java 1.7 OpenJDK], [http://www.opendaylight.org/software OpenDaylight release distributions], [http://mininet.org/ mininet 2.1.0], [http://openvswitch.org/ Open vSwitch 2.0.0], [https://github.com/CPqD/ofsoftswitch13 CPqD ofsoftswitch13], [http://code.google.com/p/robotframework/ Robot framework 2.8.3], [https://git.opendaylight.org/gerrit/gitweb?p=integration.git;a=tree integration test scripts], [https://wiki.opendaylight.org/view/OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator VTN coordinator], [http://www.wireshark.org/ Wireshark], CBench
* VM configuration:
** odl_server: Ubuntu 13.04 server, 8GB HDD, ova file size=2GB
** odl_desktop: Ubuntu 13.04 desktop (GUI), 20GB HDD, ova file size=3GB

== Links to VMs ==
* [https://wiki.opendaylight.org/images/HostedFiles/odl_test_server_2.ova odl_test_server_2.ova]
* [https://wiki.opendaylight.org/images/HostedFiles/odl_test_desktop_2.ova odl_test_desktop_2.ova]

== Installation Procedure ==

=== Prerequisites ===
* [https://www.virtualbox.org/ Virtualbox] 
* For [http://wiki.qemu.org/Main_Page QEMU] you can find online instructions on how to covert vmdk file to raw or qcow, normally you will need to convert to intermediate vdi format using VBoxManage tool
* For VMware vCenter, please remove this line from ovf fle: <vssd:VirtualSystemType>virtualbox-2.2</vssd:VirtualSystemType>

=== Installation steps ===
# Download the VM ova file from link above
# Open VirtualBox and do import appliance
# Configure the VM with the following recommended settings
#* ''Processor:'' 4x CPU if you plan to run the controller in the VM, just 1 if you don't
#* ''RAM:'' 4GB if you plan to run the controller in the VM, or just 1GB if you don't 
#* ''Network:'' 1x NIC, bridge mode is recommended, otherwise NAT (to share your Internet connection) or host-only (creates internal network)
# Start the VM
# Login with mininet/mininet
# Open README.txt

=== Using the VM ===

The VM contains the following (see README.txt file):

<pre>
1) OpenDaylight release editions:

~/controller-base/ -> Base edition folder
~/controller-virt/ -> Virtualization edition folder
~/controller-sp/ -> Service Provider edition folder

Note: to run controller just go to opendaylight folder and type run.sh

2) Mininet 2.1.0 with OVS 2.0.0 and CPqD:

~/integration/vm/scripts/start_mininet_of10.sh -> starts mininet OVS OF10 on local controller
~/integration/vm/scripts/start_mininet_of13.sh -> starts mininet OVS OF13 on local controller
~/integration/vm/scripts/start_mininet_cpqd.sh -> starts mininet CPqD on local controller

3) Integration tests (Robot Framework):

~/integration/test/csit/suites/ -> Robot test folder
~/integration/vm/scripts/run_test_base_self.sh -> run base edition test on local controller
~/integration/vm/scripts/run_test_base.sh <IP> -> run base edition test on external controller

Note: Robot test results (saved at ~/) can be opened with a browser

4) VTN Coordinator:

~/integration/vm/scripts/start_vtn_coordinator.sh
~/integration/vm/scripts/stop_vtn_coordinator.sh

Note: VTN coordinator uses port 8081 as 8080 is reserved for controller.
</pre>

You can update controller to latest SW from Jenkins (example for base edition):
<pre>
mininet@mininet:~\> cd controller-base
mininet@mininet:~\> wget https://jenkins.opendaylight.org/integration/job/integration-project-centralized-integration/lastSuccessfulBuild/artifact/distributions/base/target/distributions-base-0.1.2-SNAPSHOT-osgipackage.zip
</pre>

Also make sure to update the integration repo time to time issuing this command:
<pre>
mininet@mininet:~\> cd integration
mininet@mininet:~\> git pull
</pre>

If you want to know more about system test and what tests are available, please click [[CrossProject:Integration_Group:CSIT|here]]

Finally you can watch the recorded TWS session explaining the VMs: [https://meetings.webex.com/collabs/files/viewRecording?encryptData=0_FED7CE707B5D20CAE99139DC96D4CB68540FC96221940AA933A1F72075506BE8BE044929D0175C147B0EB1D63AED5B1A45F483FA7A1B8B7AC1ACCD4C118654D359E9B10ED33D737225FA3896573D1B8F_A7A851A33F5E7FFEA1AF67801352B064AFFF90E3 Link To WebEx recording]

Or watch the End-User Tutorial recorded at the OpenDaylight Summit 2014: [https://www.youtube.com/watch?v=J-7lmVPrxb0 Link to ODS2014 recording]

[[Category:Integration Group]]
