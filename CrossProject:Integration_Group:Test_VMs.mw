== Maintainer ==
Luis Gomez (luis.gomez@ericsson.com)

== Introduction ==
New test VMs are available through the links below. The purpose of the VMs is to ease the task of developing/running system test on the OpenDaylight controller. Note that both have same content, only difference is whether you prefer to test with desktop or not.

== Test environments ==
Test VM can be used in two scenarios:
* Self contain test: you have controller, mininet and robot framework all running in the same VM
* External controller test: you can use mininet and robot framework in the VM to test an external controller running on a separate VM or platform

== VM description ==
* Common intalled SW: mininet 2.1.0, OVS 2.0.0, CPqD ofsoftswitch13, Robot framework 2.8.3, Java 1.7 openjdk, wireshark
* odl_test_server: Ubuntu 13.04 server, 8GB HDD, vmdk size=1GB
* odl_test_desktop: Ubuntu 13.04 desktop (GUI), 8GB HDD, vmdk size=2GB

== Links to VMs ==
* [https://wiki.opendaylight.org/images/HostedFiles/odl_test_server_1_new.zip odl_test_server.zip]
* [https://wiki.opendaylight.org/images/HostedFiles/odl_test_desktop_1_new.zip odl_test_desktop.zip]

== Installation Procedure ==

=== Prerequisites ===
* Virtualbox (if you use Qemu or VMware there are Internet available instructions on how to covert ovf/vmdk files to these formats)

=== Installation steps ===
* Download the VM from link above
* Unzipthe file
* Open VirtualBox and do import applicance
* Boot the VM following the recommendations below
* Login with mininet/mininet

=== Recommended settings ===
* Processor: 2x vCPU if you plan to run the controller in the VM, just 1 if you don't
* RAM: 2GB/3GB for the server/desktop if you plan to run the controller in the VM, or just 1G/2G if you don't 
* Network: 1x NIC, bridge mode is the best, otherwise NAT (to share your Internet connection) or host-only (creates internal network)

=== VM usage ===
There are 3 shell scripts under user home that illustrate what can be done with the VM:
* run_test_base_self.sh (with no arguments) will start controller base edition in the VM and perform system test for base edition. This can be used to verify test VM installation.
* run_test_base.sh <controller IP> will execute system test on an external controller. Please make sure you can reach (ping) the controller first
* update_controller_last_base.sh (with no arguments) will update the controller to latest base edition. IMPORTANT: check for Internet connectivity before running it as it will wipe out the current controller intallation

In any case you can use these scripts or create your own to test a particular controller edition.

Also make sure to update the integration repo time to time issuing this command:
<pre>
mininet@mininet:~\> cd integration
mininet@mininet:~\> git pull
</pre>

If you want to know more about system test and what tests are available, please click [[CrossProject:Integration_Group:CSIT|here]]

Finally you can watch the recorded TWS session explaining the VMs: https://meetings.webex.com/collabs/#/meetings/detail?uuid=IVQEYBRYIHNGKQYTAAS3PIVDB6-9VIB
