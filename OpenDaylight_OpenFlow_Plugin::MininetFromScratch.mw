= Mininet on debian wheezy(7), x86_64 =
== Requirements ==
=== openvswitch ===
Install all requirements
<pre>
apt-get install build-essential fakeroot
apt-get install debhelper autoconf automake libssl-dev pkg-config bzip2 openssl python-all procps python-qt4 python-zopeinterface python-twisted-conch
</pre>

Install some helper applications
<pre>
apt-get -y install screen sudo vim etckeeper mlocate autoconf2.13 libssl-dev graphviz  tcpdump  gdebi-core
</pre>

=== test python env ===
Python pip
* setuptools has to be installed first
<pre>
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
sudo python ez_setup.py
</pre>
* install pip itself
<pre>
wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py
sudo python get-pip.py
</pre>
* post install python libraries required by the ODL testing script
<pre>
sudo pip install netaddr
</pre>

== Installation ==

===openvswitch 2.0.0===
Remove old packages as root:
<pre>
sudo -i
apt-get remove openvswitch-common openvswitch-datapath-dkms openvswitch-controller openvswitch-pki openvswitch-switch
</pre>
Download and unpack OpenV Switch 2.0.0
<pre>
wget http://openvswitch.org/releases/openvswitch-2.0.0.tar.gz
tar zxvf openvswitch-2.0.0.tar.gz
</pre>
Build and install

Install  the openvswitch package and deploy it using module assistant because  its easy. https://wiki.debian.org/ModuleAssistant

<pre>
cd ../
gdebi openvswitch-datapath-source_2.0.0-1_all.deb
module-assistant auto-install openvswitch-datapath
gdebi openvswitch-common_2.0.0-1_amd64.deb
gdebi openvswitch-switch_2.0.0-1_amd64.deb
</pre>


Post installation settings

<pre>
service openvswitch-controller stop
update-rc.d openvswitch-controller disable
</pre>
Test installation
<pre>
ovs-vsctl show
ovs-vsctl --version
ovs-ofctl --version
ovs-dpctl --version
ovs-controller --version
</pre>

Expected result
<pre>
</pre>

=== Mininet 2.1.0 ===
Download and checkout version
<pre>
git clone git://github.com/mininet/mininet
cd mininet
git checkout -b 2.1.0 2.1.0
</pre>
Compile a install mininet
<pre>
gcc mnexec.c -o mnexec
mv mnexec /usr/bin/
python setup.py install
</pre>
Test installation
<pre>
mn --version
mn --test pingall
</pre>

Expected Result
<pre>
root@debian:~/mininet# mn --version
2.1.0
root@debian:~/mininet# mn --test pingall
*** Creating network
*** Adding controller
*** Adding hosts:
h1 h2 
*** Adding switches:
s1 
*** Adding links:
(h1, s1) (h2, s1) 
*** Configuring hosts
h1 h2 
*** Starting controller
Cannot find required executable ovs-controller.
</pre>

Post installation additions
* modify source code of mininet node.py file in similar manner as is described in [[Openflow_Protocol_Library:OpenVirtualSwitch#Stage_3|Stage 3]]
<pre>
--- /root/mininet/build/lib.linux-x86_64-2.7/mininet/node.py    2013-11-22 03:35:12.000000000 -0800
+++ /usr/local/lib/python2.7/dist-packages/mininet-2.1.0-py2.7.egg/mininet/node.py      2013-11-22 06:17:07.350574387 -0800
@@ -952,6 +952,10 @@
            datapath: userspace or kernel mode (kernel|user)"""
         Switch.__init__( self, name, **params )
         self.failMode = failMode
+        protKey = 'protocols'
+        if self.params and protKey in self.params:
+               print 'have protcol params!'
+               self.opts += protKey + '=' + self.params[protKey]
         self.datapath = datapath
  
@@ -1027,8 +1031,9 @@
         if self.datapath == 'user':
             self.cmd( 'ovs-vsctl set bridge', self,'datapath_type=netdev' )
         int( self.dpid, 16 ) # DPID must be a hex string
+        print 'OVSswitch opts: ',self.opts
         self.cmd( 'ovs-vsctl -- set Bridge', self,
-                  'other_config:datapath-id=' + self.dpid )
+                  self.opts+' other_config:datapath-id=' + self.dpid)
         self.cmd( 'ovs-vsctl set-fail-mode', self, self.failMode )
         for intf in self.intfList():
             if not intf.IP():
</pre>
[[Openflow_Protocol_Library:OpenVirtualSwitch#Start_and_test_modified_mininet|Start and Test installed mininet]]

== Usage ==

=== REST tests openflowplugin ===
The test scripts are in openflowplugin/test-scripts
<pre>
sudo python odl_tests.py --xmls 1,2
</pre>
For more option informations, type
<pre>
sudo python odl_tests.py --help
</pre>
or read README from dir.
