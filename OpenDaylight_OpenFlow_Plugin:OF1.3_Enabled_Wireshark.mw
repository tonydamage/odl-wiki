== Intro ==

Using [http://www.wireshark.org/ Wireshark] to monitor traffic on the wire is fantastically useful for seeing what's really happening.

== Getting Wireshark ==

The Good News is, the mainstream wireshark now has [http://wiki.wireshark.org/OpenFlow support for OpenFlow 1.3].  The bad news is it 
does not appear to have  made it into any of the releases yet.

But, you can build it pretty easily on a unix system.  Complete [http://www.wireshark.org/docs/wsdg_html_chunked/ documentation exists].

I have some pre-built Ubuntu debs here:

[https://www.dropbox.com/s/a7d6oxuywd2su39/wireshark-common_1.11.3_i386.deb wireshark-common]
[https://www.dropbox.com/s/u6vu8dknnm81qsc/wireshark_1.11.3_i386.deb wireshark]
[https://www.dropbox.com/s/d2nwcd7zrkuqxzr/tshark_1.11.3_i386.deb twireshark]
[https://www.dropbox.com/s/clohutvy4tckt1y/wireshark-dev_1.11.3_i386.deb wireshark-dev]

To install them on 

<pre>
hagbard@ubuntu:~/Downloads/eclipse$ lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 12.04.1 LTS
Release:	12.04
Codename:	precise
</pre>

Simply type:

<pre>
sudo apt-get remove libwireshark-data
sudo dpkg -i wireshark_1.11.3_i386.deb wireshark-common_1.11.3_i386.deb tshark_1.11.3_i386.deb 
</pre>

== Hints for using Wireshark for OF 1.3 traffic ==

For general instructions on using Wireshark please see their [http://www.wireshark.org/docs/wsug_html_chunked/ user's guide] 

=== Enabling OpenFlow Decode ===

For reasons unclear to me, the Wireshark OF plugin does not hook up to the correct ports yet, so I suggest and initial display filter of

<pre>tcp.port == 6653 or tcp.port == 6633</pre>

which will filter your capture down to just those two ports.  Then to get Openflow decode, select one of your packets and and right click on it and pick 'Decode As'.
This will bring up a dialog where you can select the transport protocol you want to decode such traffic as.  Pick openflow from the list and all similar packets to 
that port will be decoded as OF.

=== Following a particular stream ===

If you have a lot of switches going, the original filter by port is going to be insufficient to make sense of it all.  So I would suggest picking a packet from a connection
that interests you, right clicking on it and selecting 'Follow TCP Stream'.  This will set a display filter to show just that TCP stream.
