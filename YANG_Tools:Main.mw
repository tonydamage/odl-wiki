{|  class="wikitable" style="color:#ff6600; background-color:#ffcc99;"  align="right" border="1"
|align="center"|'''Yang Tools Facts                            '''
|-
|'''Project Creation Date:''' July 18th, 2013
'''Lifecycle State:''' Incubation <br>
'''Primary Contact:''' Tony Tkacik <ttkacik@cisco.com> <br>
'''Project Lead:''' N/A <br>
'''Committers:''' <br>
* Jan Medved <jmedved@cisco.com>
* Lukas Sedlak <lsedlak@cisco.com>
* Martin Vitez <mvitez@cisco.com>
* Robert Varga <rovarga@cisco.com>
* Tony Tkacik <ttkacik@cisco.com>
'''IRC:'''  freenode.net #opendaylight <br>
'''Mailing List:''' yangtools-dev@lists.opendaylight.org <br>
|}


YANG Tools is a infrastructure project aiming to develop necessary tooling and libraries providing support of NETCONF and YANG for Java (JVM-language based) projects and applications, such as Model Driven SAL for Controller (which uses YANG as it's modeling language) and Netconf / OFConfig plugins.

==Project Information==
* [[Project Proposals:YANG Tools|Project Proposal]]
* [[YANG Tools:Release Plan 2013|Release Plan (2013)]]
* [https://git.opendaylight.org/gerrit/#/q/project:yangtools,n,z Git Patches & Code Review]
* [https://jenkins.opendaylight.org/yangtools Jenkins]

==Logical Subprojects==

=== Concepts ===

Project defines base concepts and helper classes which are project-agnostic and could be used outside of YANG Tools project scope.

=== Yang ===

Project contains YANG related artefacts such as binding specification to Java, YANG parser, semantic model and Maven plugin for processing YANG files.

=== Code Generator ===

Projects contains code generator definitions and utility classes to generate Java source files based on parsed yang models.

=== Model ===

Project contains base yang modules packaged as maven projects.

=== RestConf ===

==Models==

* [[YANG Tools:Available Models|List of known models and their Maven artifacts]]

==Documentation==

* Demos
** [[Yang Tools:Code Generation Demo|MD-SAL plug-in code generation demo]]
** [[Ping#Yang_definition_for_ping|YANG definition]] for the [[Ping]] demo
* [[Yang Tools:Maven Plugin Guide|Maven Plugin Guide]]
* [[Yang Tools:Code Generation Demo:YANG2JAVA Mapping|YANG to Java mapping]]

==Test coverage==

==Contribute==

YANG Tools project is open to contributions and we would appreciate your help with:

* Generation of DSDL (RelaxNG) based on RFC6110
* Generation of YIN representation (RFC6020)
** compile time (using custom generator for YANG Maven Tools)
** runtime (transforming org.opendaylight.yangtools.yang.model.* classes to their YIN representation in XML DOM)
* Implementation of validation of instance data (XML) based on YANG to RelaxNG mapping - RFC6110
* Bugfixes, code reviews
* Documentation
* Example generators
* Testing with various YANG modules and models

If you are interested feel free to contact as at [https://lists.opendaylight.org/pipermail/yangtools-dev/ yangtools-dev] mailing list
or submit a patch for review.

== List of all subpages ==

{{Special:PrefixIndex |prefix=YANG Tools|hideredirects=1}}
