== Introduction ==
Continuous Integration System Test (CSIT) area is created to develop automated system test.

== Continuous System Integration Tests ==

Currently we are considering 3 types of continuous system integration tests:

* System test using existing framework (Java)
 
Requires maven and java, same as developers have today. Tests run when you build them in OpenDaylight Jenkins or locally in developer computer. Advantage of this solution is that all the Java environment is already there so test cases can be written from day 1. The only issue so far is that we need something on SB to simulate the devices. The plan for this is to have either a simulator running in the same system (collocated with the controller) or in a separate instance. 
 
* System test adding robot framework (Python or Java)
 
New test framework has to be installed on both: OpenDaylight Jenkins and testers computer. Jenkins can be used to build a release vehicle and execute robot test cases. Same as before we need to have something on SB to simulate the devices either collocated with the controller or on a separate machine.
 
* System test using a new test bed (Python or Java)
 
In this case we use existing OpenDaylight Jenkins just to trigger system test on a separate test bed made of 3-5 instances: 1.Robot framework, 2. Controller, 3. Device simulation. With this infrastructure we do real blackbox testing as the controller is running on its own instance, also there is no impact on existing OpenDaylight Jenkins because Robot and tests run on a separate instance as well. Only issue with this solution is that more infrastructure is needed to debug the test code, so it is less portable than 2 before.
