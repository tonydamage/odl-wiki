== Introduction ==

The purpose of this page is to walk you through how to see the Inventory Manager working end to end with the openflowplugin using OpenFlow 1.3.

Basically, you will learn how to:

# Run the Base Edition with the new openflowplugin
# Start mininet to use OF 1.3
# Use RESTCONF to see the nodes appear in inventory.

== Building a Base Edition that has the new openflowplugin ==

# Checkout the openflowplugin project (if you need help with this see [[GettingStarted:Pulling,_Hacking,_and_Pushing_All_the_Code_from_the_CLI|Pulling Hacking and Pushing All the Code from the CLI]] ).
# cd into the openflowplugin/distribution/base directory
#: <pre>cd openflowplugin/distribution/base</pre>
# Build the distribution
#: <pre>mvn clean install</pre>
# Run the controller
#: <pre>cd target/distributions-openflowplugin-base-0.0.1-SNAPSHOT-osgipackage/opendaylight/</pre>
#: <pre>./run.sh -debug</pre>

== Testing controller application module with new openflowplugin ==
If you want to test your application module that's in under development stage with the new openflowplugin, following are the two ways:

1) Push your changes to the controller repository and merge it. Once new artifacts get publish to nexus repository you can follow above steps (1-4) to test it.

2) Build the bundle and its dependency locally and use it with the new openflowplugin. Fire following command from controller project's root directory

 <pre>mvn clean install -pl :<bundle-name> -amd
e.g mvn clean install -pl :statistics-manager -amd</pre>

Above command will install the new packages to the local maven repo. Now follow steps mentioned in above section to build the base edition of openflowplugin project. It will pick up the latest bundle from local maven repo.

== Getting Mininet with OF 1.3 ==

[https://www.dropbox.com/s/dbf9a372elqs1s1/mininet-of-1.3.zip Download Mininet VM Upgraded to OF 1.3] (or the [https://www.dropbox.com/s/t66vqfqx57a7nhk/mininet-2.1.0-of1.3.zip newer mininet-2.1.0 with OVS-2.0])

(or you could build one yourself [[Openflow Protocol Library:OpenVirtualSwitch|Instructions for setting up Mininet with OF 1.3]] ).

=== Installing under VirtualBox ===

[[File:Host-only-vbox.png|thumb|right|300px|configuring a host-only adapter]]

For whatever reason, at least on the Mac, NATed interfaces in VirtualBox don't actually seem to allow for connections from the host to the VM. Instead, you need to configure a host-only network and set it up. Do this by:

* Go to the VM's settings in VirtualBox then to network and add a second adapter attached to "Host-only Adapter" (see the screenshot to the right)
* Edit the /etc/network/interfaces file to configure the adapter properly by adding these two lines
<pre>auto eth1
iface eth1 inet dhcp</pre>
* Reboot the VM

At this point you should have two interfaces one which gives you NATed access to the internet and another that gives you access between your mac and the VMs. At least for me, the NATed interface gets a 10.0.2.x address and the the host-only interface gets a 192.168.56.x address.

=== Your simplest choice: Use Vagrant ===

[https://www.virtualbox.org/ Download Virtual Box] and install it
[http://www.vagrantup.com/ Download Vagrant] and install it

<pre>
cd openflowplugin/vagrant/mininet-2.1.0-of-1.3/
vagrant up
vagrant ssh
</pre>
This will leave you sshed into a fully provisioned Ubuntu Trusty box with mininet-2.1.0 and OVS 2.0 patches to work with OF 1.3.

== Setup CPqD Openflow 1.3 Soft Switch ==
Latest version of Openvswitch (v2.0.0) doesn't support all the openflow 1.3 features, e.g group multipart statistics request. Alternate options is CPqD  Openflow 1.3 soft switch, It supports most of the openflow 1.3 features. 
* You can setup the switch as per the instructions given on the following URL
                https://github.com/CPqD/ofsoftswitch13

* Fire following command to start the switch 
Start the datapath :
 <pre>$ sudo udatapath/ofdatapath --datapath-id=<dpid> --interfaces=<if-list> ptcp:<port>
 e.g $ sudo udatapath/ofdatapath --datapath-id=000000000001 --interfaces=ethX ptcp:6680</pre>

ethX should not be associated with ip address and ipv6 should be disabled on it.
If you are installing the switch on your local machine, you can use following command (for Ubuntu) to create virtual interface.
<pre>ip link add link ethX address 00:19:d1:29:d2:58 macvlan0 type macvlan</pre>
ethX - Any existing interface.

Or if you are using mininet VM for installing this switch, you can simply add one more adaptor to your VM.

Start Openflow protocol agent:
 <pre>$secchan/ofprotocol tcp:<switch-host>:<switch-port> tcp:<ctrl-host>:<ctrl-port>
 e.g $secchan/ofprotocol tcp:127.0.0.1:6680 tcp:127.0.0.1:6653</pre>

=== Commands to add entries to various tables of the switch ===
* Add meter

 <pre>$utilities/dpctl tcp:<switch-host>:<switch-port> meter-mod cmd=add,meter=1 drop:rate=50 </pre>

* Add Groups

 <pre>$utilities/dpctl tcp:127.0.0.1:6680 group-mod cmd=add,type=all,group=1</pre>
 <pre>$utilities/dpctl tcp:127.0.0.1:6680 group-mod cmd=add,type=sel,group=2 weight=10 output:1</pre>

* Create queue
 <pre>$utilities/dpctl tcp:<ip>:<switch port> queue-mod <port-number> <queue-number> <minimum-bandwidth>
  e.g - $utilities/dpctl tcp:127.0.0.1:6680 queue-mod 1 1 23</pre>
"dpctl" --help is not very intuitive, so please keep adding any new command you figured out while your experiment with the switch.

== Running Mininet with OF 1.3 ==

From within the Mininet VM, run:

<pre> sudo mn --topo single,3  --controller 'remote,ip=<your controller ip>:6653' --switch ovsk,protocols=OpenFlow13</pre>

== Restconf for Inventory ==

The REST url for listing all the nodes is:

<pre>http://localhost:8080/restconf/datastore/opendaylight-inventory:nodes/</pre>

You will need to set the Accept header:
<pre>Accept: application/xml</pre>
You will also need to use HTTP Basic Auth with username: admin password: admin.

Alternately, if you have a node's id you can address it as
<pre>http://localhost:8080/restconf/datastore/opendaylight-inventory:nodes/node/<id></pre>
for example
<pre>http://localhost:8080/restconf/datastore/opendaylight-inventory:nodes/node/openflow:1</pre>

=== How to hit Restonf with Postman ===

[https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm?hl=en Install Postman for Chrome]

In the chrome browser bar enter 
<pre>chrome://apps/</pre>
And click on Postman.

Enter the URL.  Click on the Headers button on the far right.  Enter the Accept: header.  Click on the Basic Auth Tab at the top and setup the username and password.  Send.

== Known Bug ==

If you have not had any switches come up, and though no children for 
http://localhost:8080/restconf/datastore/opendaylight-inventory:nodes/
and exception will be thrown.  I'm pretty sure I know how to fix this bug, just need to get to it :)
