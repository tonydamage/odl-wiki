== Prerequisites ==
* Maven 3
* [https://wiki.opendaylight.org/view/YANG_Tools:Installation_Guide Installation Guide]


=== Configuring Plugin ===

To generate code from yang models you need to specify one or more CodeGenerator implementations: 

            <plugin>
                <groupId>org.opendaylight.yangtools</groupId>
                <artifactId>yang-maven-plugin</artifactId>
                <version>0.6.1-SNAPSHOT</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-sources</goal>
                        </goals>
                        <configuration>
                            &lt;!-- directory containing yang files to parse and generate code --&gt;
                            <yangFilesRootDir>src/main/yang</yangFilesRootDir>
                            <codeGenerators>
                                <generator>
                                    <codeGeneratorClass>
                                        org.opendaylight.yangtools.maven.sal.api.gen.plugin.CodeGeneratorImpl
                                    </codeGeneratorClass>
                                    &lt;!-- directory into which generated files will be placed --&gt;
                                    <outputBaseDir>
                                        target/generated-sources/sal
                                    </outputBaseDir>
                                </generator>
                            </codeGenerators>
                            &lt;!-- if true, plugin will search for yang files also in dependent projects --&gt;
                            <inspectDependencies>true</inspectDependencies>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.opendaylight.yangtools</groupId>
                        <artifactId>maven-sal-api-gen-plugin</artifactId>
                        <version>0.6.1-SNAPSHOT</version>
                        <type>jar</type>
                    </dependency>
                </dependencies>
            </plugin>


=== Required Dependencies ===
The generated APIs refers to common supertypes defined in org.opendaylight.yangtools:yang-binding and 
org.opendaylight.yangtools:yang-common projects.

You need to add these as dependencies to your project:

    <dependencies>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>yang-binding</artifactId>
            <version>0.6.1-SNAPSHOT</version>
        </dependency>
    </dependencies>

== Building ==

The code is generated in generate-sources phase. To generate code run following command on your project:

   mvn generate-sources

== Eclipse Integration (m2e) ==
=== Warnings by m2e ===

If you are using Eclipse you may want to add following snippet to your pom.xml to supress warning from m2e:
    <build>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse 
                    m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.opendaylight.controller
                                        </groupId>
                                        <artifactId>
                                            yang-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.5,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                generate-sources
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

=== Source folder discovery ===

If the generated files are not imported in the eclipse you may want to add mojo-build-helper-plugin
to your build.

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                &lt;source>target/generated-sources/sal&lt;/source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
