
= VTN Manager Implementation =

VTN Manager will be implemented in Java, and consists of OSGi bundles in an OpenDaylight Controller.
It provides virtual network functions for VTN Coordinator via REST API.

VTN Manager is developed from scratch to take advantage of functions of the OpenDaylight controller.

[[File:vtn_manager_and_relevant_bundles.png|550px]]

== Development milestone ==

Initial submittal for the following features is slated at Milestone 2.

* VTN multi-tenancy
* vBridge function

With the above features, OpenDaylight Controller can have the capability to create virtual L2 network, and set up flow entries to OpenFlow switches based on OpenFlow 1.0.

=== REST API to be provided ===

* VTN GET/POST/DELETE
* vBridge GET/POST/DELETE
* Interface GET/POST/DELETE
* Port map GET/POST/DELETE
* Vlan map GET/POST/DELETE

=== VTN Manager for VTN multi-tenancy ===
We planed to create a container for each VTN.
However, it seems that current containermanager in OpenDaylight Controller does not implement container creation function, except default container.
Therefore, we are planning to create all VTNs and its vNodes in default container at Milestone 2.
After the implementation plan of containermanager become clear, we will revisit this design.

=== VTN Manager for vBridge ===
To enable virtual L2 network, VTN Manger has the following functions.

* Create MAC address tables per vBridge
* Receive Packet-In events, send Packet-Out, and set up flow entries to switches based on the destination MAC address
* Drop packets from a port not VTN provisioned

== Specification ==
The following is the specifications of VTN Manager which we are planning on creating at the milestone 2.
* [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Manager:Specification|VTN Manager Specifications]]
** [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Manager:RestApi|REST API specifications]]
** [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Manager:JavaApi|Java API specifications]]

[[Category:OpenDaylight Virtual Tenant Network]]
