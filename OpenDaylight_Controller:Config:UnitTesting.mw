== Overview ==
To test config subsystem without having to running inside OSGi container, it is possible to subclass [https://github.com/opendaylight/controller/blob/master/opendaylight/config/config-manager/src/test/java/org/opendaylight/controller/config/manager/impl/AbstractConfigTest.java AbstractConfigTest] .
Core of config subsystem is not dependent on codegen nor OSGi. OSGi is only used for registering
published services into Service Registry. Thus it is easy to mock BundleContext.

As written in javadoc, one starts with calling 

org.opendaylight.controller.config.manager.impl.AbstractConfigTest#initConfigTransactionManagerImpl

with all factories that should be available. Example of test can be 
[https://github.com/opendaylight/controller/blob/master/opendaylight/config/threadpool-config-impl/src/test/java/org/opendaylight/controller/config/threadpool/fixed/FixedThreadPoolConfigBeanTest.java FixedThreadPoolConfigBeanTest]

== Setting up test ==

In test setUp, the initConfigTransactionManagerImpl is called with 
[https://github.com/opendaylight/controller/blob/master/opendaylight/config/config-manager/src/test/java/org/opendaylight/controller/config/manager/impl/factoriesresolver/HardcodedModuleFactoriesResolver.java HardcodedModuleFactoriesResolver]
, which wrapps mocked BundleContext and all factories needed for configuring fixed threadpool, that is FixedThreadPoolModuleFactory and NamingThreadFactoryModuleFactory.

== Testing instantiating modules ==

Simplest test is testCreateBean, which creates transaction, creates both naming thread factory and fixed threadpool in createFixed() method. Note that client APIs (ConfigRegistryJMXClient, ConfigTransactionJMXClient) implement MXBean interfaces implemented by 
[https://github.com/opendaylight/controller/blob/master/opendaylight/config/config-manager/src/main/java/org/opendaylight/controller/config/manager/impl/ConfigRegistryImpl.java config registry] and 
[https://github.com/opendaylight/controller/blob/master/opendaylight/config/config-manager/src/main/java/org/opendaylight/controller/config/manager/impl/ConfigTransactionControllerImpl.java transaction controller]
.

testCreateBean also shows how to validate and commit transaction.

== Testing reconfiguration ==
Method testReusingOldInstance tests that instance is reused if and only if no attributes nor dependencies are changed in transaction.

== Testing resource cleanup ==
Method testDestroy creates and then destroys threadpool. It verifies number of threads using JVM's ThreadMXBean.
