== Intro ==

This is an overview on how to hack the Integration code

== Make sure you have an account ==

In order to push code you will need to [https://identity.opendaylight.org/carbon/user-registration/index.jsp?region=region1&item=user_registration_menu get an account].

== Gerrit Setup ==
Code reviews are enabled through Gerrit. [[OpenDaylight Controller:Gerrit Setup|Set up Gerrit]] for use if you wish to use ssh.  If you
wish to use https, [[OpenDaylight Controller:Setting up HTTP in Gerrit|Set up Gerrit to use HTTPS]].

Note: You will need to perform the [[OpenDaylight Controller:Gerrit Setup|Gerrit Setup]] before you can access git via
ssh as described below.

== Pull code via git CLI ==
Pull the code by cloning the controller repository.

First, all the lines below use the $ODL_USERNAME environment variable, so your life will be *way* easier of you set it with:

<pre>
export ODL_USERNAME=<username for the account you created at OpenDaylight>
</pre>

Then you will want to check out the code from each of the repos for each project.  You can, of course select any one of the following lines if you are only looking for one project.
Each line does three things:
# Clone the git repo
# Setup the Gerrit ChangeId commit hook
# Setup pushes to go back to HEAD:refs/for/master as Gerrit requires

You have two choices for your method of engagement, you can use:
# ssh on port 29418 (blocked by some firewalls) 
# https

=== Pull code via ssh ===

<pre>
git clone ssh://${ODL_USERNAME}@git.opendaylight.org:29418/integration.git
cd integration
scp -p -P 29418 ${ODL_USERNAME}@git.opendaylight.org:hooks/commit-msg .git/hooks/
chmod 755 .git/hooks/commit-msg
git config remote.origin.push HEAD:refs/for/master
</pre>

=== Pull code with https ===

<pre>
git clone https://git.opendaylight.org/gerrit/p/integration.git
cd integration
curl -o .git/hooks/commit-msg https://git.opendaylight.org/gerrit/tools/hooks/commit-msg
chmod 755 .git/hooks/commit-msg
git config remote.origin.push HEAD:refs/for/master
</pre>

=== Pull the code changes ===
Use git pull to get the latest changes from the remote repository
<pre>
git pull 
</pre>

== Hack the Code ==

=== Pushing your changes ===
== Commit the code via git CLI ==
You do it this way
<pre>
git commit --signoff
</pre>

or in a shorter version:
<pre>
git commit -s
</pre>

You will be prompted for a commit message, and if you are fixing a bugzilla bug, you can add that to your commit message as well and it will get linked from the Gerrit:

<pre>
Fix for bug 2.

Signed-off-by: Ed Warnicke <eaw@cisco.com>

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       modified:   README
#
</pre>

Make sure your credentials (name, email) are configured properly in git. They can be configured by adding the following settings:

   git config --global user.name "John Doe"
   git config --global user.email johndoe@example.com

== Push the code via git CLI ==
Use git push to push your changes back to the remote repository.

<pre>
git push
</pre>

You will get a message pointing you to your gerrit request like:

<pre>
remote: Resolving deltas: 100% (2/2)
remote: Processing changes: new: 1, refs: 1, done    
remote: 
remote: New Changes:
remote:   http://git.opendaylight.org/gerrit/64
remote: 
</pre>

=== Seeing your change in Gerrit ===

Follow the link you got above to see your commit in Gerrit:

[[File:Gerrit Code Review.jpg|700px]]

Note the Jenkins Controller User has verified your code, and at the bottom is a link to the Jenkins build.

Once your code has been reviewed and submitted by a committer it will be merged into the authoritative repo, which would look like this:

[[File:Gerrit Merged.jpg|700px]]

=== Amending your Commit ===
If you wish to 'amend' your commit and push a new PatchSet to your existing Gerrit, you can make your changes, add them, and run:

<pre>
git commit --amend
git push
</pre>
