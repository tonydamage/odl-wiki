The instructions on the page assume that the example in [[Open Dove:Configuring a basic Overlay]] has been completed.  The steps in this example enables traffic from virtual network 1 to exit the overlay via the oDGW.

== Create External Network ==

Submit POST request to http://<odmc address>:8080/controller/nb/v2/neutron/networks with the following JSON body:

 { "networks": [
  { "id": "<network uuid 4>", "name": "<network name 4>", "tenant_id": "<tenant uuid>", "router:external": true }
 ]}

'''Important!''' The last token (router:external) is necessary to distinguish this network from the other internal networks.

== Create External Subnet ==

Submit POST request to http://<odmc address>:8080/controller/nb/v2/neutron/subnets with the following JSON body:

 { "subnet" :
  { "id": "<subnet uuid 4>",
    "network_id": "<network uuid 4>",
    "name": "<network name 4>",
    "gateway_ip": "<subnet gateway 4>",
    "cidr": "<subnet cidr 4>",
    "tenant_id": "<tenant uuid>" }
 }

'''Important!''': OpenDOVE will allocate addresses for the external interface, SNAT pools, and Forwarding Rules from the cidr block defined in this subnet, so be sure it's big enough and the addresses aren't being used by others!

== Create Ports ==

Submit POST request to http://<odmc address>:8080/controller/nb/v2/neutron/ports with the following JSON body:

 { "ports": [
   { "id": "<port uuid 5>",
     "network_id": "<network uuid 1>",
     "name": "<port name 5>",
     "mac_address": "<port mac 5>",
     "fixed_ips": [{ "subnet_id": "<subnet uuid 1>" , "ip_address": "<port ip address 5>" }],
     "tenant_id": "<tenant uuid>" },
   { "id": "<port uuid 6>",
 "network_id": "<network uuid 4>",
 "name": "<network name 6>",
 "mac_address": "<port mac 6>",
 "fixed_ips": [{ "subnet_id": "<subnet uuid 4>", "ip_address": "<port ip address 6>" }],
 "tenant_id": "<tenant uuid>" } ]
}

== Create Router ==

Submit POST request to http://<odmc address>:8080/controller/nb/v2/neutron/routers with the following JSON body:

 { "router": { "id": "<router uuid 3>", "name": "<router name 3>", "admin_state_up": true } }

== Attach Interfaces to Router ==

Submit two PUT requests to http://<odmc address>:8080/controller/nb/v2/neutron/routers/internal_router_id_3/add_router_interface
For the first, use this JSON body:

 { "id": "<router uuid 3>", "tenant_id": "<tenant uuid>", "port_id": "<port uuid 5>", "subnet_id": "<subnet uuid 1>" }

and for the second, use this JSON body:

 { "id": "<router uuid 3>", "tenant_id": "<tenant uuid>", "port_id": "<port uuid 6>", "subnet_id": "<subnet uuid 4>" }
