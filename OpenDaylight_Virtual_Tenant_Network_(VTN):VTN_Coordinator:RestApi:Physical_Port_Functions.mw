{| align="right" border="1"
|align="center"|'''Related Pages'''
|-
|
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi|Introduction]]<br>
* [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator:RestApi#VTNCoordinator_RestApi_Contents|VTN Coordinator RestApi Contents]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi: Physical Controller Functions|Physical Controller Functions]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi:Physical Switch Functions|Physical Switch functions]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi:Physical Port Functions|Physical Port function]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTNCoordinator:RestApi:Physical Link Function|Physical Link function]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi:Physical Domain Functions|Physical Domain functions]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi:Logical Port Function|Logical Port function]]<br>
* [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator:RestApi:Physical Boundary Functions|Physical Boundary functions]]<br>
|}

=List Physical Ports=
This operation is used to list physical Port information.

==Request==
{|class = "wikitable"
|-
|Method || GET
|-
|Request URI || 
* XML format
 /controllers/{controller_id}/switches/{switch_id}/ports.xml
 /controllers/{controller_id}/switches/{switch_id}/ports/detail.xml
 /controllers/{controller_id}/switches/{switch_id}/ports/count.xml
* JSON format
 /controllers/{controller_id}/switches/{switch_id}/ports.json
 /controllers/{controller_id}/switches/{switch_id}/ports/detail.json
 /controllers/{controller_id}/switches/{switch_id}/ports/count.json
|-
| Query string ||
 ?index={port_name}&max_repetition={max_repetition}
|}


;Description of request URI element
{|class = "wikitable"
|-
|Element || Description || Required
|-
|controller_id ||Identifier of the Controller.
Valid value: Up to 31 characters that can include
alphabets, numbers, and underscore (except at the
beginning).
||No
|-
|switch_id || Identifier of the Switch.
Valid value: A string of up to 255 characters
||No
|}

;Description of query string elements
{|class = "wikitable"
|-
|Element || Description ||Required
|-
|port_name || Port name.
A string of up to 31 characters.
||No
|-
|max_repetition || Number of resources that are returned.
Valid value: A positive integer
Valid range: 1 to MAX of UINT32. Default is 10000.
||No
|}

;Request body
:None

==Response==
{|class = "wikitable"
|-
|Response body ||
* XML format
If count is not specified in URI
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <ports>
   <port port_name="{port_name}" />
 </ports>

If detail is specified in URI
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <ports>
   <port port_name="{port_name}" description="{description}" admins
    tatus="{adminstatus}" direction="{direction}" trunk_allowed_vlan="{t
    runk_allowed_vlan}" port_id="{port_id}" operstatus="{operstatus}" ma
    caddr="{macaddr}" speed="{speed}" duplex="{duplex}" alarmsstatus="{a
    larmsstatus}" logical_port_id="{logical_port_id}">
 <neighbor switch_id="{switch_id}" port_name="{port_name}" />
 </port>
 </ports>

If count is specified in URI
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <ports count="{count}" />

• JSON format
If count is not specified in URI
 {
  "ports": [
   {
     "port_name": "{port_name}"
   }
   ]
 }

If detail is specified in URI
 {
  "ports": [
  {
   "port_name": "{port_name}",
   "description": "{description}",
   "adminstatus": "{adminstatus}",
   "direction": "{direction}",
   "trunk_allowed_vlan": "{trunk_allowed_vlan}",
   "port_id": "{port_id}",
   "operstatus": "{operstatus}",
   "macaddr": "{macaddr}",
   "speed": "{speed}",
   "duplex": "{duplex}",
   "alarmsstatus": "{alarmsstatus}",
   "logical_port_id": "{logical_port_id}",
   "neighbor": {
        "switch_id": "{switch_id}",
        "port_name": "{port_name}"
    }
   }
  ]
 }

If count is specified in URI
 {
  "ports": {
    "count": "{count}"
   }
 }
|}


;Description of response elements (ports)
{|class = "wikitable"
|-
|Element || Description
|-
|port_name ||Port name of a Switch.
Valid value: A string of up to 31 characters.
|-
|controller_id ||Identifier of the Controller.
Valid value: Up to 32 characters that can include alphabets,
numbers, and underscore (except at the beginning).
|-
|description ||Additional information.
Valid value: A string of up to 127 characters.
|-
|adminstatus ||The admin status.
Valid value: up, down
|-
|Direction ||The direction.
Valid value: internal, external, unknown
|-
|trunk_allowed_vlan ||Valid value: A positive integer.
Valid range: 0 - 65535 (UINT16_MAX)
|-
|port_id ||Identifier of the Port.
Valid value: A positive integer.
Valid range: 0 - 4294967295 (UINT32_MAX)
|-
|operstatus || Operational status of Port.
Valid value: up, down, unknown
|-
|macaddr || The MAC address.
Valid value: Three groups of four hexadecimal digits separated
by dots (.) (Example: 0123.4567.89ab ).
Note: MAC address is case insensitive.
|-
|speed ||The communication speed of the port.
Valid value: A positive integer.
Valid range: 0 - 18446744073709551615(UINT64_MAX)
|-
|duplex ||The communication method of the port
Valid value:
• full : Full-duplex communication
• half : Half-duplex communication
|-
|alarmsstatus ||Alarm information.
Valid value: A hexadecimal number.
|-
|Logical_port_id ||Identifier of the logical Port.
Valid value: A string of up to 319 characters.
|-
|neighbor ||Neighbor
|-
|count ||The number of port.
Valid value: A positive integer.
|}

;Description of response elements (neighbor)
{|class = "wikitable"
|-
|Element || Description
|-
|switch_id ||Identifier of the switch.
Valid value: A string of up to 255 characters.
|-
|port_name ||External Port name.
Valid value: A string of up to 31 characters.
|}
[[Category:OpenDaylight Virtual Tenant Network]]
