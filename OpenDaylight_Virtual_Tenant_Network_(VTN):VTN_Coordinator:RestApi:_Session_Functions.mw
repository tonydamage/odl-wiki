=About =
This section lists the Session functions.
 
=List of Functions Supported =
==List Sessions ==
This operation is used to list sessions information.

=== Request ===
 
{| class="wikitable"
|-
| Method || GET
|-
| Request URI   || 
 /sessions
 /sessions/detail
 /sessions/count
|-
| Response Body (XML)  ||
  
|-
| Response Body (JSON) ||
  {
    "password": "{password}"
  }
|}

==== Description of Request URI Elements ====

{| class="wikitable"
|-
| Element || Description || Required
|-
|username || The user name for which to set the password.
Valid values: admin, oper
||Yes 
|-
|password ||The new password.
Valid value: A string of up to 72 characters.
||Yes
|}
=== Response ===
 
{| class="wikitable"
|-
|Response Body(XML format)
|| 
If count or detail is not specified in URI
 <?xml version="1.0"
 encoding="UTF-8"
 standalone="yes"?>
 <sessions>
 <session
  session_id="{session_id}"/>
 </sessions>

If detail is specified in URI
 <?xml version="1.0"
 encoding="UTF-8"
 standalone="yes"?>
 <sessions>
  <session
   session_id="{session_id}"
   type="{type}"
   username="{username}"
   usertype="{usertype}"
   ipaddr="{ipaddr}"
   login_name="{login_name}"
   login_time="{login_time}"
   info="{info}" mode="{mode}"
   configstatus="{configstatus}"/>
  </sessions>
If count is specified in URI
 <?xml version="1.0"
 encoding="UTF-8"
 standalone="yes"?>
 <sessions count="{count}"/>
|-
|Response Body(JSON format)
||
If count or detail is not specified in URI
 {
   "sessions": [
    {
    "session_id":
    "{session_id}"
    }
   ]
}

If detail is specified in URI
 {
   "sessions": [
    {
    "session_id":
    "{session_id}",
    "type": "{type}",
    "username":
    "{username}",
    "usertype":
    "{usertype}",
    "ipaddr": "{ipaddr}",
    "login_name":
    "{login_name}",
    "login_time":
    "{login_time}",
    "info": "{info}",
    "mode": "{mode}",
    "configstatus":
    "{configstatus}"
    }
   ]
}

If count is specified in URI
 {
  "sessions": {
  "count": "{count}"
 }
|}


====Description of response elements(interface)====

{| class="wikitable"
|-
| Element || Description 
|-
| session_id || Identifier of the session.
Valid value: A positive integer.
Valid range: 1 - UINT32_MAX
|-
|type ||Session type.
Valid value: webapi, webui
Note: This parameter will not be included in case of CLI session.
|-
|username || User name for which the session information is shown.
Valid value: admin, oper
Note: This parameter will not be included in case of CLI session.
|-
|usertype || Type of user.
Valid value: admin, oper
|-
|ipaddr || IPv4 IP address.
Valid value: IPv4 dot-separated format (Example: 192.168.1.1)
|-
|loginname || The login name.
Valid value: A string of up to 63 characters.
|-
|logintime || Number of seconds that have passed since last login.
Valid value: UNIX time (The elapsed time in seconds since 00:00:00 UTC, 1 January, 1970) will be returned.
|-
|info || Arbitrary information which is set when session is created.
Valid value: A string of up to 63 characters.
|-
|mode || Value of mode.
Valid value: oper, enable, del, unknown
|-
|configstatus || The configuration status.
Valid value: enable, disable
|-
|count || The number of sessions.
Valid value: A positive integer.
|}
