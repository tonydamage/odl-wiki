== Library's lifecycle ==


[[File:Library lifecycle.png | center | Library's lifecycle]]



== Integration with Plugin ==
{| class="wikitable"
|-
| '''Plugin'''
| '''SwitchConnectorHandler'''
* onSwitchConnected(''ConnectionAdapter'') [4]
:: <code>connectionAdapter.setMessageListener(ofProtocolListener)</code> [5]
:: <code>connectionAdapter.setSystemListener(systemListener)</code> [5]
* accept(''InetAddress'')
:: //policy logic
----
'''OFProtocolListener'''
* onHelloMessage(message)
* ...
----
'''SystemListener'''
* onDisconnectEvent(event)
----
call particular rpc method on particular instance of ''ConnectionAdapter'' to send message to particular switch [6][7]
|-
| '''Library'''
| '''SwitchConnectionProvider'''
* config() [1]
* startup() [2]
* shutdown() [8]
* setSwitchConnectionHandler(''SwitchConnectionHandler'') [1]

----
'''ConnectionAdapter''' extends OFProtocolService
* disconnect()
* sendMessage() -- via RPC (OFProtocolService)
* isAlive()
* setOFProtocolListener(''OFProtocolListener'') -- place to send message notifications
call ''OFProtocolListener'' when a message arrives  [6][7]
|}

==== Connection workflow ====
# @Plugin: config, set ''SwitchConnectionHandler''
# @Plugin: startup()
# new switch connects to netty layer
# @Library: onSwitchConnected(new ''ConnectionAdapter''...)
# @Plugin: setMessageListener(); setSystemListener();
# @both: send/receive Hello  (handshake)
# @both: do some switch exercise
# @Plugin: shutdown
