= OpenFlow 1.3 FlowMod test = 

Based on the [[OpenDaylight_OpenFlow_Plugin::Python_test_scripts|OpenFlow Plugin Python test script]], that has be migrated to [[CrossProject:Integration_Group:Robot_Framework|Robot test framework]] for the CSIT.

==  Tools used ==
* Mininet with OVS 2.0/2.1 
* Robot Framework

== How it works == 
# Using the RESTConf API we "PUT" an xml file that installs the flow.
# Check that the XML has been installed into the controller
# Loop through a set of flow elements to see if they are in the dpctl output from switch
# Using the RESTConf we delete the xml
# Check the flow has been deleted
# Loop through the flow element to confirm they have been removed from switch  

== Important Variables ==

The test case is write to allow for people to copy the test case and update the 4 below variables based on the flow that will be installed 

* ${FILE} - Where the XML File lives 
* ${FLOW} - The Flow ID from the XML File
* ${TABLE} - The table the flow is installed from the XML File
* ${FLOWELMENTS} - The Flow element as they will been seen in dpctl output. 

=== Sample test Case ===

<source>

*** Settings ***
Documentation     Test suite for Ethernet, ARP and Action controller
Suite Setup       Create Session    session    http://${CONTROLLER}:8080    auth=${AUTH}    headers=${HEADERS_XML}
Suite Teardown    Delete All Sessions
Library           SSHLibrary
Library           Collections
Library           OperatingSystem
Library           ../../../libraries/RequestsLibrary.py
Library           ../../../libraries/Common.py
Variables         ../../../variables/Variables.py

*** Variables ***
${REST_CON}       /restconf/config/opendaylight-inventory:nodes
${REST_OPR}       /restconf/operational/opendaylight-inventory:nodes
${FILE}           ${CURDIR}/../../../variables/xmls/f14.xml
${FLOW}           137
${TABLE}          2
@{FLOWELMENTS}    dl_dst=ff:ff:ff:ff:ff:ff    table=2    dl_src=00:00:fc:01:23:ae    CONTROLLER:60    arp    arp_op=1    arp_spa=192.168.4.1
...               arp_tpa=10.21.22.23    arp_tha=fe:dc:ba:98:76:54    arp_sha=12:34:56:78:98:ab

*** Test Cases ***
Add a flow - Output to physical port#
    [Documentation]    Push a flow through REST-API
    [Tags]    Push
    ${body}    OperatingSystem.Get File    ${FILE}
    Set Suite Variable    ${body}
    ${resp}    Putxml    session    ${REST_CON}/node/openflow:1/table/${TABLE}/flow/${FLOW}    data=${body}
    Should Be Equal As Strings    ${resp.status_code}    200

Verify after adding flow config
    [Documentation]    Verify the flow
    [Tags]    Get
    ${resp}    get    session    ${REST_CON}/node/openflow:1/table/${TABLE}/flow/${FLOW}    headers=${ACCEPT_XML}
    Should Be Equal As Strings    ${resp.status_code}    200
    compare xml    ${body}    ${resp.content}

Verify flows after adding flow config on OVS
    [Documentation]    Checking Flows on switch
    [Tags]    Switch
    sleep    2
    write    dpctl dump-flows -O OpenFlow13
    ${body}    OperatingSystem.Get File    ${FILE}
    Sleep    1
    ${switchouput}    Read
    : FOR    ${flowElement}    IN    @{FLOWELMENTS}
    \    should Contain    ${switchouput}    ${flowElement}

Remove a flow - Output to physical port#
    [Documentation]    Remove a flow
    [Tags]    remove
    ${resp}    Delete    session    ${REST_CON}/node/openflow:1/table/${TABLE}/flow/${FLOW}
    Should Be Equal As Strings    ${resp.status_code}    200

Verify after deleting flow config 
    [Documentation]    Verify the flow
    [Tags]    Get
    ${resp}    Get    session    ${REST_CON}/node/openflow:1/table/${TABLE}
    Should Not Contain    ${resp.content}    ${FLOW}

Verify flows after deleting flow config on OVS
    [Documentation]    Checking Flows on switch
    [Tags]    Switch
    write    dpctl dump-flows -O OpenFlow13
    ${body}    OperatingSystem.Get File    ${FILE}
    Sleep    1
    ${switchouput}    Read
    : FOR    ${flowElement}    IN    @{FLOWELMENTS}
    \    should Not Contain    ${switchouput}    ${flowElement}

</source>

== To Do ==

* Get CPqD working in linux Foundation for Groups and Metering.
