__TOC__

= Overview =
The following wiki page will document the recommended best practices as recommended by the [[TSC:Main|TSC]] committee.

'''This document is currently a work in progress and has not yet been ratified by the TSC committee. Please engage the mailing lists, Discussion Tab on this Page, and the TSC meeting to provide input on the below recommendations.'''

= Recommended Best Practices =
The following are the proposed recommended best practices for developers in all projects. 

* '''The intent is to find a balance between project autonomy, consistency in quality, and ability for new comers to quickly come up to speed and get involved.'''
* Projects should be free to choose how they implement these recommendations. However the implementation a project chooses should be documented clearly for all developers to see.

== Recommendation: Build Time Testing ==

Build time tests are tests which run as part of the building of your source code. Often referred to as "Unit tests" because most build time tests test small units of code or work, and are intended to run quickly.

==== Justification ====
Build time testing is intended to give developers (and everyone) a level of confidence in the code base to enable rapid development (including new features, bug fixes, refactoring etc).
==== Request ====
Ensure we have an adequate number build-time tests to enable developers to quickly and easily get notified of a regression in functionality do to an enhancement or refactoring of logic. We should strive to ensure all functionality is covered in such tests. Specifically, a build time tests should:
# Run at build time
# Run quickly
# Contain assertions to validate the functionality under test
==== Verification ====
It will be the responsibility of the individual projects to refine and define the implementation of the following recommendations. The committers on the respective projects will need to encourage and monitor commits 

''If code is the coin of our realm, tests are the gold in Fort Knox that give the currency its value.''

== Recommendation: Comments ==
Commenting source code is intended to enable future readers/editors for the code to quickly understand and come up to speed on the logic in order to facilitate a community where anyone can read and modify any code.
==== Justification ==== 
Comments in code is intended to help readers of the code to quickly gain an understanding of the purpose of a file, class, method, etc. There is no way to avoid having to read code, but with a few well placed comments in classes you can quickly speed up developers understanding of the code.
==== Request ====
Ensure the following code is commented:
# Line level comments - any code which is complex or doing some out of the ordinary.
# File level comments - any file which has multiple purposes, or whose name doesnâ€™t clearly state its sole purpose.

==== Verification ====
It will be the responsibility of the individual projects to refine and define the implementation of the above recommendations. The committers on the respective projects will need to encourage and monitor commits.
