= Potential Items For Helium Release =

* [[OpenDaylight OpenFlow Plugin:Backlog|Backlogs from Hydrogen]] - few from there noted below
** Migrate the OF Plugin onto the Configuration Subsystem - [[OpenDaylight_OpenFlow_Plugin::Config_Subsystem|done]]
*** Implement changes to allow extensibility in OF Library and OF Plugin (registers, ...)
** Plugin internal stats - add more, make stats accessible through the config subsystem
** Handle reserve ports as actual named things (and fix adapters around that) (note: OF10 and OF13 have different port numbers for the same logical reserve ports... adapters should also be fixed to handle)
** Make topology initially aggressive then very calm
** [[OpenDaylight_OpenFlow_Plugin:Backlog:Threading Model and Packet Handling Priority|Threading Model and Packet Handling Priority]]
** TLS support
** Table config and capabilities learning.
** Port config.
** Queue config.
** DTLS based connection establishment not supported.
** Role request not supported.
** Make the OpenDaylight GUI 1.3 aware (not exactly plugin specific feature - just capturing here anyway). Example: to be able to configure 1.3 style flows, meters and groups.
** [[OpenDaylight_OpenFlow_Plugin:Backlog:FlowCookieLifecycle|move/merge flow.id (model) to flow.cookie (protocol) = flowCookie lifecycle]]
** [[OpenDaylight_OpenFlow_Plugin:Backlog:Overload Protection and Event Dampening|Overload Protection and Event Dampening]]


* OpenFlow 1.4 Support ?? (May be implement some key features as extensions on top of OpenFlow 1.3 if whole 1.4 found to be too aggressive?? )
** B.14.1 (from OF 1.4 spec) : More extensible wire protocol. Make the OpenFlow protocol more TLV based - may be a little extensive.
** B.14.2 : More descriptive reasons for packet-in. This should be easy to implement
** B.14.3 Optical port properties. This may not be hard to implement - but may be hard to test
** B.14.4 Flow-removed reason for meter delete - should be a straightforward addition
** B.14.5 Flow monitoring. This is in multi controller environment. It allows a controller to monitor in real time the changes to any subsets of the flow table done by other controllers. May be a stretch for Helium - as we do not even support the multi controller features from OpenFlow 1.3 (example - role request).
** B.14.7 Eviction. Mechanism enabling the switch to automatically eliminate entries of lower importance to make space for newer entries. Mostly a switch side feature.
** B.14.8 Vacancy events. Mechanism enabling the controller to get an early warning of flow table size exploding based on a capacity threshold chosen by the controller.
** B.14.9 Bundles. The bundle mechanism enables to applying a group of OpenFlow message as a single operation. This may be a very useful operation for controller applications - and probably should be prioritized.
** B.14.10 Synchronised tables. Needs study whether will be useful in the near term. 
** B.14.11 Group and Meter change notifications. Multi controller environment. Group and Meter change notifications allow a controller to monitor in real time the changes to the group table or meter table done by other controllers. May be a stretch for Helium - as we do not even support the multi controller features from OpenFlow 1.3 (example - role request).
** B.14.12 Error code for bad priority
** B.14.13 Error code for Set-async-config
** B.14.14 PBB UCA header field
** B.14.15 Error code for duplicate instruction
** B.14.16 Error code for multipart timeout
** B.14.17 Change default TCP port to 6653 - done

* OpenFlow Config Protocol ??
* Changes required by Negotiable Datapath Model project ??
