__TOC__

=Overview =
This page will be used to document the Toaster MD-SAL sample.

= Documentation Contributers =
This section can be used to track people actively contribute documetation on the Toaster example.

Would like to contribute comments to yang / java code
* Devin Avery (Devin.Avery@brocade.com)


=Questions=
''Place questions here that we can try and get answered''
# Were the toaster-provider, toaster-provider-impl, toaster-consumer, toaster-consumer-impl yang models created post Hydrogen release when toaster initialization was moved to config subsystem?<br>
# It will be good to show the relation between how various java classes get generated based on Yang elements. e.g. if RPCs are present it created <ModuleName>Service java class, if Notifications are present it creates <ModuleName>Listener etc <br>
# The OpendaylightToaster implements the getToaster method from ToasterProviderRuntimeMXBean interface to return a hard-coded Toaster instance. However, issuing a GET via restconf does not invoke the OpendaylightToaster to return this instance. restconf goes directly to the data store. Also issuing a POST to create the Toaster goes directly to the data store. There seems to be a disconnect here between restconf and the OpendaylightToaster service. Is the OpendaylightToaster actually supposed to access the data store service as restconf does? <br>
