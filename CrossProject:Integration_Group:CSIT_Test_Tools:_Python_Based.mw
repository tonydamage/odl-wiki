== Maintainer ==
Baohua Yang (baohyang@cn.ibm.com) and Denghui Huang (huangdenghui@gmail.com)

== Introduction ==
We provide a python based automatic test tool here to finish the CSIT test robustly and efficiently. The tool will also be integrated with the robot framework.

Using the tool, we found two bugs in the current base edition, [https://bugs.opendaylight.org/show_bug.cgi?id=136 bug #136] and [https://bugs.opendaylight.org/show_bug.cgi?id=137 bug #137].

Currently, the latest code is hosted at [https://github.com/yeasy/CSIT_Test Github], and the stable version can be pulled from the [https://git.opendaylight.org/gerrit/#/admin/projects/integration integration git repo].

== Prerequisites ==
* Linux based OS
* Java 1.7+
* Python 2.6/2.7 environment
* Python requests library, can be install through <pre> pip install requests </pre>
* [https://wiki.opendaylight.org/view/GettingStarted:Developer_Main OpenDaylight Controller]
* [http://mininet.org/walkthrough/ Mininet] or other SDN simulator

== Test Steps ==
The CSIT test will be simple, complete and automatic with the tool.
* Download the test tool code.
 <pre> git clone https://github.com/yeasy/CSIT_Test.git</pre>
The stable version can be pulled by
 <pre> git clone https://git.opendaylight.org/gerrit/integration </pre>
* Start the OpenDaylight controller at local host (If not on local host, should modify the controller ip accordingly in Mininet).
* Start Mininet to emulate a 2-layer tree topology network; make sure it is connected to the controller.
 <pre>sudo mn --controller=remote,ip=127.0.0.1 --mac --topo tree,2</pre>
* Go into the directory of the edition, such as 'base', (modify the controller ip address in 'restlib.py' file according to your environment)and run the test tool by <pre>python run.py</pre> The test will output the processing on each module, and warnings if there's any failure. Normally, the output looks like
 <pre>
#Test case: switch manager
#Test case: topology manager
#Test case: forwarding rule manager
#Test case: statistics manager
#Test case: host tracker
#Test case: arp handler
#Test case: forwarding manager
#Test case: container manager

Process finished with exit code 0
</pre>
* By default, all modules will be tested in order. If you want to test specific modules, please change the module_to_test variable in run.py.

== Development Plan ==
=== All modules's basic test in OpenDaylight's base edition ===
DONE in 2013/11/06.

=== Integration with the robot framework ===
We decided to develop a specific library for the robot framework integration based on the tool code.
Please go to [[CrossProject:Integration_Group:CSIT_Test_Robot_Lib| CSIT Test Robot Library]].

=== Interaction with other components ===
TODO:
*Interaction with Mininet, now can clean&start and stop mininet with given mininet host address.

[[Category:Integration Group: CSIT Test Tools]]
