==About this Document==

Note that this is intentionally a verbatim copy of sections from the [http://www.opendaylight.org/project-lifecycle-releases#MatureReleaseProcess Project Lifecycle & Releases Document] which has the following to say about the Release Review Document:

<blockquote>''Both the Release Plan and Release review document are intended to be relatively short, simple, posted publicly on the wiki documents to assist projects in coordinating among themselves, and the general world in gaining visibility.''</blockquote>

When copying, please remove this section and simply fill out the next sections.

==Project Name==
Openflow Protocol Library (openflowjava)

==Features==
Openflow v1.3 support

Openflow v1.0 support

==Non-Code Aspects (user docs, examples, tutorials, articles)==

* [[Openflow_Protocol_Library:Startup_Guide|Startup Guide]]

* [[File:OpenFlow_Protocol_Library_-_Project_documentation.pdf]]

==Issues to be fixed==
* YANG model should go through a minor refactoring
** groupings should have "-grouping" suffix to ease the development and remove ambiguity
** list actions-list (openflow-action.yang) and underlying container action should be merged into list action
** all lists with plural nouns (e.g. list instruction'''s''') should be replaced by their singular form to improve code understanding
* Netty's threads should go through performance testing to improve overall performance

==Security Considerations==
Communication over TLS uses bogus key - will be replaced when global keystore is implemented in Config Subsystem

==Quality Assurance (test coverage, etc)==
Unit tests cover all message (de)serialization factories and util classes. Integration test is used to test communication over wire (SimpleClient is used as lightweight switch implementation). Detailed test cases are tested also in the Openflow Plugin tests. It is also possible to test openflowjava communication with vswitch.

==Bugzilla (summary of bug situation)==
There is only one issue in bugzilla ([https://bugs.opendaylight.org/show_bug.cgi?id=370]) assigned to openflowjava. It occurs during Multipart message (OF v1.3) deserialization. There is a suspicion that vswitch is sending incorrect data (based on Wireshark capture) or that network errors might be the cause. This issue is under further investigation.

==Standards (summary of standard compliance)==
* Openflow v1.3.2 specification
* Openflow v1.0.0 specification

==Schedule (initial schedule and changes over the release cycle)==
* TLS support not tested / fully implemented
* Added Openflow v1.0 support
