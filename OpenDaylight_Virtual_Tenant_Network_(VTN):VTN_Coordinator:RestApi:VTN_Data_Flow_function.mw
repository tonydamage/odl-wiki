=Show VTN Data Flows=
This operation is used to view a specific VTN data flows information

==Request==
{|class = "wikitable"
|-
|Method || GET
|-
|Request URI || /vtns/{vtn_name}/dataflows
|Query String || ?
vnode_name={vnode_name}&srcmacaddr={srcmacaddr}&vlan_id=
{vlan_id}& no_vlan_id={no_vlan_id}
|}


===Description of request URI element===
{|class = "wikitable"
|-
|vtn_name || VTN name.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
||Yes
|}

===Description of query string elements===
{|class = "wikitable"
|-
|vnode_name|| Virtual node name.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
||Yes
|-
|srcmacaddr || The source MAC address.
Valid value: Three groups
of four hexadecimal
digits separated by
dots (.) (Example:
1234.5678.90AB).
||Yes
|-
|vlan_id || VLAN identifier.
Valid value: A decimal
integer.
Valid Range: 1 - 4095
||Yes
|-
|no_vlan_id || No VLAN ID.
Valid value: Always true.
Note: Either vlan_id
or no_vlan_id can be
specified.
||Yes
|}

===Request body===
:None

==Response==
{|class ="wikitable"
|-
|Response body || 
 <?xml version="1.0"
  encoding="UTF-8"
  standalone="yes"?>
 <dataflows>
 <dataflow reason="{reason}">
 <controller_domain_dataflows>
 <controller_domain_dataflow
  controller_id="{controller_id}"
  controller_type="{controller_type}"
  flow_id="{flow_id}"
  createdtime="{createdtime}"
  idletimeout= "{idletimeout}"
  hardtimeout= "{hardtimeout}"
  ingress_vnode_name=
  "{ingress_vnode_name}"
  ingress_if_name=
  "{ingress_if_name}"
  ingress_switch_id=
  "{ingress_switch_id}"
  ingress_port_name=
  "{ingress_port_name}"
  ingress_logical_port_id=
  "{ingress_logical_port_id}"
  ingress_domain_id=
  "{ingress_domain_id}"
  egress_vnode_name=
  "{egress_vnode_name}"
  egress_if_name=
  "{egress_if_name}"
  egress_switch_id=
  "{egress_switch_id}"
  egress_port_name="{egress_domain_id}"
  egress_logical_port_id=
  "{egress_logical_port_id}"
  egress_domain_id=
  "{egress_domain_id}">
  <match inport="[{inport}]"
  macdstaddr="[{macdstaddr}]"
  macdstaddr_mask="[{macdstaddr_mask}]"
  macsrcaddr="[{macsrcaddr}]"
  macsrcaddr_mask="[{macsrcaddr_mask}]"
  macethertype="[{macethertype}]"
  vlan_id="[{vlan_id}]"
  vlan_priority="[{vlan_priority}]"
  iptos="[{iptos}]"
  ipproto="[{ipproto}]"
  ipdstaddr="[{ipdstaddr}]"
  ipdstaddr_mask="[{ipdstaddr_mask}]"
  ipsrcaddr="[{ipsrcaddr}]"
  ipsrcaddr_mask="[{ipsrcaddr_mask}]"
  l4dstport_icmptype="[{l4dstport_icmptype}]"
  l4dstport_icmptype_mask
  ="[{l4dstport_icmptype_mask}]"
  l4srcport_icmptype="[{l4srcport_icmptype}]"
  l4srcport_icmptype_mask
  ="[{l4srcport_icmptype_mask}]"
  ipv6dstaddr="[{ipv6dstaddr}]"
  ipv6dstaddr_mask="[{ipv6dstaddr_mask}]"
  ipv6srcaddr="[{ipv6srcaddr}]"
  ipv6srcaddr_mask="[{ipv6srcaddr_mask}]"/
 >
 <action
  outputport="[{outputport}]"
  enqueueport="[{enqueueport}]"
  queue_id="[{queue_id}]"
  setmacdstaddr="[{setmacdstaddr}]"
  setmacsrcaddr="[{setmacsrcaddr}]"
  setvlan_id="[{setvlan_id}]"
  setvlan_priority="[{setvlan_priority}]"
  setipdstaddr="[{setipdstaddr}]"
  setipsrcaddr="[{setipsrcaddr}]"
  setiptos="[{setiptos}]"
  setl4dstport_icmptype
  ="[{setl4dstport_icmptype}]"
  setl4srcport_icmptype
  ="[{setl4srcport_icmptype}]"
  setipv6dstaddr="[{setipv6dstaddr}]"
  setipv6srcaddr="[{setipv6srcaddr}]"/
 >
 <pathinfos>
 <pathinfo
  in_vnode_name="{in_vnode_name}"
  in_if_name="{in_if_name}"
  out_vnode_name="{out_vnode_name}"
  out_if_name="{out_if_name}"
  vlink_flag="{vlink_flag}"
  status="{status}"/>
 </pathinfos>
 </controller_domain_dataflow>
 </controller_domain_dataflows>
 </dataflow>
 </dataflows>

Important:
* Square brackets ([]) indicate that multiple
data elements of the same type appear.
* The multiple elements are separated by
comma (,).
|-
|Response body (JSON format)||
 {
    "dataflows": [
       {
      "reason": "{reason}",
      "controller_domain_dataflows": [
             {
            "controller_id":
       "{controller_id}",
            "controller_type":
       "{controller_type}",
            "flow_id":
       "{flow_id}",
            "createdtime":
       "{createdtime}",
            "idletimeout":
       "{idletimeout}",
            "hardtimeout":
       "{hardtimeout}",
            "ingress_vnode_name":
       "{ingress_vnode_name}",
            "ingress_if_name":
       "{ingress_if_name}",
            "ingress_switch_id":
       "{ingress_switch_id}",
            "ingress_port_name":
       "{ingress_port_name}",
            "ingress_logical_port_id":
       "{ingress_logical_port_id}",
            "ingress_domain_id":
       "{ingress_domain_id}",
            "egress_vnode_name":
       "{egress_vnode_name}",
            "egress_if_name":
       "{egress_if_name}",
            "egress_switch_id":
       "{egress_switch_id}",
            "egress_port_name: ":
       "{egress_domain_id}",
            "egress_logical_port_id":
       "{egress_logical_port_id}",
            "egress_domain_id":
       "{egress_domain_id}",
            "match": {
                   "inport":
                       [
                       "{inport}"
                        ],
                   "macdstaddr": [
                       "{macdstaddr}"
                        ],
                   "macdstaddr_mask": [
                        "{macdstaddr_mask}"
                        ],
                   "macsrcaddr": [
                        "{macsrcaddr}"
                        ],
                   "macsrcaddr_mask": [
                        "{macsrcaddr_mask}"
                        ],
                   "macethertype": [
                        "{macethertype}"
                        ],
                   "vlan_id":
                        [
                        "{vlan_id}"
                        ],
                    "vlan_priority": [
                        "{vlan_priority}"
                        ],
                    "iptos": [
                        "{iptos}"
                        ],
                    "ipproto":
                        [
                        "{ipproto}"
                        ],
                    "ipdstaddr": [
                        "{ipdstaddr}"
                        ],
                    "ipdstaddr_mask": [
                        "{ipdstaddr_mask}"
                        ],
                    "ipsrcaddr": [
                        "{ipsrcaddr}"
                        ],
                    "ipsrcaddr_mask": [
                        "{ipsrcaddr_mask}"
                        ],
                    "l4dstport_icmptype": [
                        "{l4dstport_icmptype}"
                        ],
                    "l4dstport_icmptype_mask": [
                        "{l4dstport_icmptype_mask}"
                        ],
                    "l4srcport_icmptype": [
                        "{l4srcport_icmptype}"
                        ],
                "l4srcport_icmptype_mask": [
                        "{l4srcport_icmptype_mask}"
                        ],
                "ipv6dstaddr": [
                        "{ipv6dstaddr}"
                        ],
                "ipv6dstaddr_mask": [
                        "{ipv6dstaddr_mask}"
                        ],
                "ipv6srcaddr": [
                        "{ipv6srcaddr}"
                        ],
                "ipv6srcaddr_mask": [
                        "{ipv6srcaddr_mask}"
                        ]
                        },
                "action": {
                     "outputport": [
                            "{outputport}"
                               ],
                     "enqueueport": [
                            "{enqueueport}"
                                ],
                      "queue_id": [
                            "{queue_id}"
                                ],
                      "setmacdstaddr": [
                            "{setmacdstaddr}"
                                ],
                       "setmacsrcaddr": [
                            "{setmacsrcaddr}"
                                ],
                       "setvlan_id": [
                            "{setvlan_id}"
                                ],
                       "setvlan_priority": [
                            "{setvlan_priority}"
                                ],
                       "setipdstaddr": [
                            "{setipdstaddr}"
                                ],
                       "setipsrcaddr": [
                            "{setipsrcaddr}"
                                ],
                       "setiptos": [
                            "{setiptos}"
                                ],
                       "setl4dstport_icmptype": [
                            "{setl4dstport_icmptype}"
                                ],
                       "setl4srcport_icmptype": [
                            "{setl4srcport_icmptype}"
                                ],
                       "setipv6dstaddr": [
                            "{setipv6dstaddr}"
                                ],
                       "setipv6srcaddr": [
                            "{setipv6srcaddr}"
                                ]
                   },
                 "pathinfos": [
                        {
                     "in_vnode_name":
                "{in_vnode_name}",
                     "in_if_name": "{in_if_name}",
                "out_vnode_name":
                     "{out_vnode_name}",
                "out_if_name": "{out_if_name}",
                     "vlink_flag": "{vlink_flag}",
                "status": "{status}"
                          }
                ]
           }
       ]
     }
    ]

===Description of response elements(dataflows)===

{|class = "wikitable"
|-
|Element || Description 
|-
|reason ||
Data flow traversal status.
Valid values:
• success
• exceeds_flow_limit
• exceeds_hop_limit
• dst_not_reached
• controller_disconnected
• operation_not_supported
• flow_not_found
• system_error
|-
|controller_domain_dataflows ||
Controller domains data flow
information.
|}

===Description of response elements(controller_domain_dataflows)===

{|class = "wikitable"
|-
|Element || Description 
|-
|controller_id ||Identifier of the Controller.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
|-
|controller_type ||Controller type.
Valid values: bypass, pfc
|-
|flow_id || Flow identifier.
Valid value: A decimal integer.
Valid range: 0 -
18446744073709551615
(UINT64_MAX)
|-
|createdtime || Number of seconds that have
passed since last create.
Valid value: UNIX time (The
elapsed time in seconds since
00:00:00 UTC, 1 January,
1970) will be returned.
|-
|idletimeout || Idle timeout.
Valid value: A decimal integer.
Valid range: 0 -
18446744073709551615
(UINT64_MAX)
|-
|hardtimeout || hardtimeout Hard timeout.
Valid value: A decimal integer.
Valid range: 0 -
18446744073709551615
(UINT64_MAX)
|-
|ingress_vnode_name ||Ingress vNode name.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
|-
|ingress_if_name || Ingress vNode Interface name.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
|-
|Ingress_switch_id || Ingress switch identifier.
Valid value: A string of upto
255 characters.
|-
|ingress_port_name || Ingress port dentifier.
Valid value: A string of upto
31 characters.
|-
|ingress_logical_port_id || Ingress Logical port dentifier.
Valid value: A string of upto
319 characters.
|-
|egress_vnode_name || Egress vNode name
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
|-
|egress_if_name || Egress vNode Interface name.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning).
|-
|egress_switch_id ||Egress switch identifier.
Valid value: A string of upto
255 characters.
|-
|egress_domain_id || Egress domain identifier.
Valid value: Up to 31
characters that can include
alphabets, numbers, and
underscore (except at the
beginning) and the string -
(DEFAULT).
Note: The value of
egress_domain_id is case
sensitive.
|-
|match || Information about parameters
used for matching.
|-
|action ||Information about parameters
set by action.
|-
|pathinfos || Path flow information.
|}
