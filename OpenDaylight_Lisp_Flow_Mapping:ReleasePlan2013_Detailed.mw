== LISP RFC6830 features ==
=== Record ===
* Record TTL.
* Locator Count.
* EID-Prefix-AFI. 
* EID-Prefix.
Potential:
* EID mask-len.
Optional:
* ACT(Negative Map-Reply action).
* Authoritive bit(used in proxy mode).
* Map version number. 
=== Locator ===
* Priority.
* Weight.
* Locator.
Optional:
* Multicast priority/weight.
* L bit(local locator).
* p bit(RLOC-Probing ITR).
* R bit(Is the address routed).
=== Map-Register ===
* M bit.
* Record Count.
* Nonce.
* Key ID.
* Authentication Data.
* P bit set to 1 (Mapping service will act as proxy and won't allow non proxy mode)
=== Map-Notify ===
* Record Count.
* Nonce.
* Key ID.
* Authentication Data.
=== Map-Request ===
* IRC.
* Record Count.
* Nonce.
Potential:
* S bit(Solicit-Map-Request  to control rates of MapReply).
Optional:
* Source-EID-AFI.
* Source EID Address. 
* Authoritive bit(A).
* M bit(Map-Reply Record exist in the MapRequest).
* P bit(Locator reachbility probe).
* p bit(Indicates PITR send a map-request).
* s bit(ETR is sending a Map Request in response to a received Solicit-Map-Request).
=== Map-Reply ===
* Record Count.
* Nonce.
* S bit(Security bit).
Optional:
* P bit(probing).
* E bit(Echo-Nonce Locator reachability algo).
=== Generic ===
*  Supported AFIs – IPV4, IPV6, MAC.
* LCAFs – List (type=1), SegmentId (type=2), Convey application data (type=4), TE (type=10), source/dest (type=12).
== Database ==
 the design is to have a DAO layer that will separate the LISP logics from the DB. first implementation of that layer will use the Controller ClusterService.
== REST (OpenStack) API ==
In the initial phase the following will be supported in the REST API:
* Map-Register
* Map-Request
* Add Authentication Key to an EID
* View Authentication Keys per EID
Optional:
* View logged data on an EID (Logged info from latest Map-Register and Map-Request)
