This page provides how to examples of various tasks when using OpenDOVE.  In the Hydrogen release, OpenDOVE leverages the neutron interface including in the OpenDaylight Controller for overlay configuration, and augments it with native REST calls to handle zero day configuration and ongoing maintenance.  Details are accessed via the [[Open_DOVE:API|OpenDOVE API Page]].

== Zero Day Tasks ==

These tasks all assume that the oDMC is up and running 

=== Configure oDCS with oDMC address ===
# Start oDCS with ./build/dcs_server.py <port> 
# Log in as Developer with password "Hook&Ladder"
# Point oDCS at oDMC with "controller_add <odmc address> 8080"

=== Enable oDCS Role ===
# Issue a GET request to http://<odmc_address>:8080/controller/nb/v2/opendove/odmc/serviceAppliances
# In response, copy out the uuid of the oDCS and issue a PUT request to http://<odmc_address>:8080/controller/nb/v2/opendove/odmc/odcs/<uuid>/role with the following JSON body: 
{ "service_appliance": { "isDCS": true } }

=== Configure oDGW with oDMC address ===
# Start oDGW with build/dove_gateway.py from the dgadmin directory
# log in with password "admin"
# Point oDGW at oDMC with "service dmcadd <odmc address> 8080"

=== Enable oDGW Role ===
# Issue a GET request to http://<odmc_address>:8080/controller/nb/v2/opendove/odmc/serviceAppliances
# In response, copy out the uuid of the oDGW and issue a PUT request to http://<odmc_address>:8080/controller/nb/v2/opendove/odmc/odgw/<uuid>/role with the following JSON body: 
{ "service_appliance": { "isDGW": true } }
