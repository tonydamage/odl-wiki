The instructions below assume you already have pulled the code from the remote server either via CLI or Eclipse.

== Installation ==

* Install IntelliJ (there is a community edition)  
http://www.jetbrains.com/idea/free_java_ide.html
* Run IntelliJ (make sure you have set JAVA_HOME variable first)
/yourIntelliJInstallLocation/bin/idea.sh

== Open controller code base ==
* In order to open the controller project, do on the top menu:
  File-->Open Project

Select the pom.xml located here:
/opendaylight/controller/
It should then open the project structure on the left pane.
(there is a package-based view as well similar to Eclipse. In order to switch to it, select in left upper corner of the left pane: "view as: Packages")

== Configuring Maven ==
* First, verify Intellij is using the correct version and installation of Maven in case you have several versions installed. In order to check it, there are 2 options to reach Maven menu:
1. on right side of Intellij, there is a button named "Maven projects". After the maven menu opens, on its top there's option "maven settings".
2. same "maven settings" option can be reached via Project Settings --> Maven. The "Settings" button is available under the top menu.
* Configure convenient shortcuts:

 Run --> Edit configurations --> Add new configuration (select Maven)

Give it a meaningful name (such as "build including distribution")<br>
Fill the working directory (where the parent/root pom.xml is located)<br>
Fill goals in the command line field (for example - clean install)<br>
Fill profiles if exist<br>
If you need to set any -D flags , it is available in the Runner tab 

Now you can always select this configuration from the combo box in the main Intellij pane, and press "run" (the green triangle) - it is equivalent to running "mvn clean install ... " from the command line.

Please note you can create and use several different configurations with different names.

== Git ==
Intellij detects automatically the project is working with Git and its settings, and the right click menu adjusts to the Git integration.
If it didn't detect, check if source control is enabled in the VCS menu option

* Nice to know:

== Keymap/keyboard shortcuts ==
