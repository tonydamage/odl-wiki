Here are some common problems you can encounter while working with BGP-LS or PCEP plugins in ODL.

First, if you encounter ANY kind of problems, turn on logger on level TRACE for bgpcep project. Log file will be located in opendaylight/logs/opendaylight.log , after you run ODL.

Add to [https://jenkins.opendaylight.org/integration/view/Integration%20jobs/job/integration-project-centralized-integration/lastSuccessfulBuild/artifact/distributions/serviceprovider/target/distributions-serviceprovider-0.1.2-SNAPSHOT-osgipackage/opendaylight/configuration/logback.xml logback.xml] following lines:

 <nowiki><!-- BGPCEP plugin --> </nowiki>
 <logger name="org.opendaylight.protocol" level="TRACE"/>
 <logger name="org.opendaylight.bgpcep" level="TRACE"/>

We will need this log file to investigate your problem.
== RESTCONF ==

==== RESTCONF request returns HTTP error 415: Unsupported media type.====

You have to specify custom HTTP header: Content-type: application-xml in your request.

== BGP-LS ==




== PCEP ==

<big>'''Important note : troubleshoot guide for PCEP is currently only for draft versions ietf-stateful-02 & crabbe-initiated-00.'''</big>

==== Session with PCC does not come up ====

There are multiple causes for this problem. Inspect opendaylight.log:

* '''I can find following line in the log'''

 WARN  o.o.p.p.i.AbstractPCEPSessionNegotiator - Unexpected error received from PCC: type 6 value 13

PCEP error code type 6, value 13 states LSP_CLEANUP_TLV_MISSING. LSP Cleanup TLV is sent as a part of PCEP session proposal, but only when you specified
stateful02 version in your configuration. Session proposal for stateful07 does NOT contain this TLV as it was removed from the draft in later versions.

Please, check again your configuration for PCEP and make sure it is set according to [[BGP_LS_PCEP:User_Guide#Configure_draft_versions|User Guide]] .

* '''No error/warning is shown in the log file'''

Wait. Depending on the nature of your PCC, it can take several minutes for PCC to initiate the connection.

==== Bandwidth and symbolic path name return a weird string instead of a number and readable string ====

YANG currently does not suport IEEE-544 floating type data type, therefore bandwidth is stored as 4B binary array. 
Symbolic path name is stored as byte array by default. Binary data are encoded in RESTCONF as base64 string, which is
what you see in your output. If you want to send e.g. bandwidth value through RESTCONF, you also have to encode it in base64.

Example:

'sample-lsp-name' will be encoded as 'c2FtcGxlLWxzcC1uYW1l'

'3,14' to IEEE-544 floating point in hexa is '4048F5C2' encoded in base64 : 'QEj1wg=='

Useful translator: http://home.paulschou.net/tools/xlate/
