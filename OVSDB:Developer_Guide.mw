= OpenDaylight OVSDB Architecture =

For a deep dive into the ODL OVSDB architecture please see the following:

[[OVSDB Integration:Design]]

== OpenStack OpenDaylight OVSDB Integration ==

[https://docs.google.com/presentation/d/19ua9U6nFJSO0wtenWmJUEzUFmib8ClTkkHTgZ_BvaMk/edit#slide=id.g2961f7ff5_081 Neutron and ODL Interactions]

The OpenStack integration architecture uses the following technologies:

* RFC 7047 [http://datatracker.ietf.org/doc/rfc7047/ OVSDB Open vSwitch Database] 
* Both OpenFlow v1.3 and v1.0
* OpenStack Neutron ML2 Plugin

= Getting the Code =

 export ODL_USERNAME=<username for the account you created at OpenDaylight>
 git clone ssh://${ODL_USERNAME}@git.opendaylight.org:29418/ovsdb.git;(cd ovsdb; scp -p -P 29418 ${ODL_USERNAME}@git.opendaylight.org:hooks/commit-msg .git/hooks/;chmod 755 .git/hooks/commit-msg;git config remote.origin.push HEAD:refs/for/master)

== OpenDaylight Mechanism Driver for Openstack Neutron ML2 ==

This code is a part of OpenStack and can be found [https://github.com/openstack/neutron/blob/master/neutron/plugins/ml2/drivers/mechanism_odl.py here]

To make changes to this code, please read the [https://wiki.openstack.org/wiki/NeutronDevelopment NeutronDevelopment page on the OpenStack wiki]

Remember to run the tests before submitting code:

 tox -e py27
 tox -e pep8

== Importing the Code in to Eclipse/IntelliJ ==

Please check out either [[Eclipse Setup]] or [[OpenDaylight_Controller:Developing_With_Intellij]]

=== Avoiding conflicting project names ===

TBD

== Browsing the Code ==

The code is mirrored to [https://github.com/opendaylight/ovsdb GitHub] for those occasions where it's easier to read code online.

== Source Code Organization ==

The OVSDB project generates 3 x OSGi Bundles:

* '''org.opendaylight.ovsdb''' is the OVSDB Plugin and Library
* '''org.opendaylight.ovsdb.neutron''' is the OpenStack Neutron Integration
* '''org.opendaylight.ovsdb.northbound''' is the Northbound API for the OVSDB Library

These correspond to the ''ovsdb'' ''neutron'' and ''northbound'' directories in the source tree.

''commons'' contains the project's parent POM file for Maven which is used to get consistency of settings across the project.

''distribution'' contains the OVSDB distribution. This is the latest Virtualization Edition pulled from the [[CrossProject:Integration Group|Integration project]] with your local OVSDB artifacts added. This gives developers the ability to run the controller for testing.

''resources'' contains useful scripts, How-To's etc...

== Building the code ==

From the root of the project

 mvn clean install

You may need to change your MAVEN_OPTS

 export MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=512m"

== Running the Distribution ==

 cd distribution/opendaylight/target/distribution.ovsdb-<version>-SNAPSHOT-osgipackage/opendaylight/
 ./run.sh -debug -Xmx2048m -XX:MaxPermSize=1024m -virt ovsdb

= Testing Patches =

While we do have CI it is not comprehensive and therefore it is recommended to test you patches locally before submission.

== Neutron Integration ==
To test patches to the Neutron integration you will need a [http://devstack.org/guides/multinode-lab.html Multi-Node Devstack Setup]
There are sample ``local.conf`` files in the ``resources`` folder.

== Open vSwitch ==

To test patches to the library you will need a working [http://openvswitch.org/ Open vSwitch].
Packages are available for most Linux distributions.
If you would like to run multiple versions of Open vSwitch for testing you can use [https://github.com/dave-tucker/docker-ovs docker-ovs] to run Open vSwitch in [http://docker.io Docker] containers

== Mininet ==

[Mininet http://mininet.org/] is another useful resource for testing patches. Mininet creates multiple Open vSwitches connected in a configurable topology.

== Vagrant ==

The Vagrantfile in the root of the OVSDB source code provides an easy way to create VMs to test with.

=== Installing Vagrant ===

Please follow the instructions [https://docs.vagrantup.com/v2/installation/ here] to install Vagrant on your machine

=== Testing with Devstack ===

First, start the controller from the OVSDB distribution as mentioned [[ OVSDB:Developer_Guide#Running_the_Distribution| here ]]

 vagrant up devstack-control
 vagrant ssh devstack-control
 cd devstack
 ./stack.sh

Get coffee... (a tall one, like a Latte or an Americano)

 vagrant up devstack-compute
 vagrant ssh devstack-compute
 cd devstack
 ./stack.sh

Get another coffee... (something smaller this time. Espresso or Macchiato)

Once it's finished stacking you can start testing...

Maybe create a virtual machine...

 nova boot --flavor m1.tiny --image $(nova image-list | grep 'cirros-0.3.1-x86_64-uec\s' | awk '{print $2}') --nic net-id=$(neutron net-list | grep private | awk '{print $2}') test

...or three...

 nova boot --flavor m1.tiny --image $(nova image-list | grep 'cirros-0.3.1-x86_64-uec\s' | awk '{print $2}') --nic net-id=$(neutron net-list | grep private | awk '{print $2}') --num-instances 3 test

=== Testing with Mininet ===
 
 vagrant up mininet
 vagrant ssh mininet

You now have a Mininet install at your disposal

=== Cleaning Up ===

When you are finished

 vagrant destroy

= OpenDaylight OVSDB Developer Getting Started Video Series =

We created three videos to help folks bootstrap into OVSDB development.

== OpenDaylight OVSDB Developer Getting Started ==

[http://www.youtube.com/watch?v=ieB645oCIPs OpenDaylight OVSDB Developer Getting Started - Start Here]
 
== OpenDaylight OVSDB Developer Getting Started - Northbound API Usage ==

[http://www.youtube.com/watch?v=xgevyaQ12cg OpenDaylight OVSDB Developer Getting Started - Northbound API Usage]

== OpenDaylight OVSDB Developer Getting Started - Java APIs ==

[http://www.youtube.com/watch?v=xgevyaQ12cg OpenDaylight OVSDB Developer Getting Started - Java API ]

== OpenDaylight OVSDB Developer Getting Started - OpenStack Integration OpenFlow v1.0 ==

[http://www.youtube.com/watch?v=NayuY6J-AMA OpenDaylight OVSDB Developer Getting Started - OpenStack Integration OpenFlow v1.0]

= Developer Tutorials =

== OVSDB OpenFlow v1.3 Neutron ML2 Integration ==

*[[OVSDB:OVSDB_OpenStack_Guide| Tutorial: OVSDB OpenFlow v1.3 Neutron ML2 Integration]]

== Open vSwitch Database Table Explanations and Simple Jackson Tutorial ==

*[http://networkstatic.net/getting-started-ovsdb/ Tutorial: Open vSwitch Database Table Explanations and Simple Jackson Tutorial]
