 OpenFlow Plugin provides following features: 
# Connection handshake with switches supporting 1.3 and 1.0 using OF Library API's.
# Capability exchange with Switch.
# Handled multiple connections from switches.
# Handle multiple Auxiliary and Main connection from switches.
# Role request.
# Error handling.
# Support OF CRUD operation for Flow, group, meter, stats, etc.
# Packet processing.
# Support discovery service for topology.
# Handle and propagate switch events.

 OpenFlow Plugin Dependencies
# MD-SAL
# Hard-SAL
# OF Library.

So dependencies should be created in Jenkins as to run integration tests when any dependencies changes.


 Openflow Plugin needs to be integrated with following modules:

# Integration with Library.
# Integration with MD-SAL.
# Integration with Hard-SAL.
# MD-SAL, Library and plugin integration.


 So each of the above integration scenario's will have different features to be tested.

 # Integration with Library

:* Connection handshake with switch(Version bitmap and Hello message exchange.
:* Capability exchange.
:* Handle multiple connection.
:* Handle TCP/TLS/UDP connection.
:* Certificate Management though its Library functionality but still it would be good to do integration testing.
:* Error Handling.
:* Event Management.
:* Packet processing.


 # Integration with MD-SAL

:* Registration of RPC method with MD-SAL.
:* Routing the call to right RPC by MD-SAL.
:* Switch notification from plugin to SAL.
:* MD-SAL routing the notification to all registered modules.


 # Integration with Hard-SAL.

Will be same as "Integration with MD-SAL.


 # MD-SAL, Library and plugin integration.

All the above scenario 1 and 2 have to combined and tested.
