
== Building the YANG Tools ==


1. Checkout the latest version from Controller Git - [[OpenDaylight_Controller:Pulling,_Hacking,_and_Pushing_the_Code_from_the_CLI]]

2. Go into the folder for YANG SAL prototype

    cd opendaylight\sal\yang-prototype\code-generator\

3. Build all packages

    mvn clean install -DskipTests


== Running Demo ==

1. Go into the folder for builded API code generator

    cd code-generator-demo\target

1. Download sample YANG examples from here:
https://dl.dropboxusercontent.com/u/789331/yang-examples.zip

2. Extract the yang-examples.zip to 'yang' directory under the target directory

3. Run code generator (-f argument is for input folder containing YANG files, -o argument for output folder where sources could be generated)

    java -jar .\code-generator-demo-1.0-jar-with-dependencies.jar -f=yang -o=gen

4. Generated sources of Java interfaces describing DTOs are in gen folder.

=== Testing with other YANG files ===

The other YANG files are at several places in the codebase, but are for testing purposes only.
You could test the generator against any valid YANG file but following functionality is still not supported:

* Augment support
* Enumeration support
* Type safety for sub-types defined in the third-party YANG modules (only base types are used in API)
* Support for Grouping
