=About=
This page provides the procedure to demonstrate configuration of [[OpenDaylight Virtual Tenant Network (VTN):VTN Coordinator|VTN Coordinator]] with L2 network using VTN Virtualization

[[File:Example for VTN Virtualization.png|border|530px]]

The OpenDaylight Virtualization information on Virtual Tenant Network can be found from the link below:

* [[OpenDaylight_Virtual_Tenant_Network_(VTN):Installation:Virtualization_Edition|VTN Virtualization]]

==L2 Network with Single Controller ==
Here is the Example for vBridge Interface Mapping with Single Controller using mininet. 
mininet details and set-up can be referred at below URL:
https://wiki.opendaylight.org/view/OpenDaylight_Controller:Installation#Using_Mininet

[[File:Single Controller Mapping.png|border|530px]]

- mininet command for above topology:
  mininet@mininet-vm:~$ sudo mn --controller=remote,ip=<controller-ip> --topo tree,2

* Create a Controller
{| class="wikitable"
|-
| curl -v  -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"controller": {"controller_id": "controllerone", "ipaddr":"10.0.0.2", "type": "odc", "version": "1.0", "auditstatus":"enable"}}' http://127.0.0.1:8080/vtn-webapi/controllers.json
|}

* Create a VTN 
{| class="wikitable"
|-
| curl -v  -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"vtn" : {"vtn_name":"vtn1","description":"test VTN" }}' http://127.0.0.1:8080/vtn-webapi/vtns.json 
|}

* Create a vBridge in the VTN 
{| class="wikitable"
|-
| curl -v  -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"vbridge" : {"vbr_name":"vBridge1","controller_id":"controllerone","domain_id":"(DEFAULT)" }}' http://127.0.0.1:8080/vtn-webapi/vtns/vtn1/vbridges.json
|}

* Create two Interfaces into the vBridge 
{| class="wikitable"
|-
| curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"interface": {"if_name": "if1","description": "if_desc1"}}' http://127.0.0.1:8080/vtn-webapi/vtns/vtn1/vbridges/vBridge1/interfaces.json
|-
| curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"interface": {"if_name": "if2","description": "if_desc2"}}' http://127.0.0.1:8080/vtn-webapi/vtns/vtn1/vbridges/vBridge1/interfaces.json
|-
|}

* Get the list of logical ports configured
{| class="wikitable"
|-
|curl -v -X GET -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   http://127.0.0.1:8081/vtn-webapi/controllers/controllerone/domains/\(DEFAULT\)/logical_ports.json
|-
|}

* Configure two mappings on the interfaces 
{| class="wikitable"
|-
| curl -v -X PUT -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"portmap":{"logical_port_id": "PP-00:00:00:00:00:00:00:03-s3-eth1"}}' http://127.0.0.1:8080/vtn-webapi/vtns/vtn1/vbridges/vBridge1/interfaces/if1/portmap.json
|-
| curl -v -X PUT -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"portmap":{"logical_port_id": "PP-00:00:00:00:00:00:00:02-s2-eth1"}}' http://127.0.0.1:8080/vtn-webapi/vtns/vtn1/vbridges/vBridge1/interfaces/if2/portmap.json
|-
|}

* Send packets from Host1 to Host3
{| class="wikitable"
|-
|mininet> h1 ping h3
|}

==L2 Network with Multiple Controllers ==
Here is the Example for vBridge Interface Mapping with Multi-controller using mininet:

[[File:MutiController Example diagram.png|border|530px]]

* Create a VTN
{| class="wikitable"
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"vtn" : {"vtn_name":"vtn3","description":"test VTN" }}' http://127.0.0.1:8081/vtn-webapi/vtns.json
|}
* Create two Controllers
{| class="wikitable"
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"controller": {"controller_id": "controller1", "ipaddr":"10.0.0.5", "type": "odc", "version": "1.0", "auditstatus":"enable"}}' http://127.0.0.1:8081/vtn-webapi/controllers.json
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"controller": {"controller_id": "controller2", "ipaddr":"10.0.0.6", "type": "odc", "version": "1.0", "auditstatus":"enable"}}' http://127.0.0.1:8081/vtn-webapi/controllers.json
|}

* Create two vBridges in the VTN like, vBridge1 in Controller1 and vBridge2 in Controller2
{| class="wikitable"
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"vbridge" : {"vbr_name":"vBridge1","controller_id":"controller1","domain_id":"(DEFAULT)" }}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges.json
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"vbridge" : {"vbr_name":"vBridge2","controller_id":"controller2","domain_id":"(DEFAULT)" }}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges.json
|}

* Create vBridge Interfaces
{| class="wikitable"
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"interface": {"if_name": "if1","description": "if1_desc"}}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges/vBridge1/interfaces.json
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"interface": {"if_name": "if2","description": "if2_desc"}}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges/vBridge1/interfaces.json
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"interface": {"if_name": "if1","description": "if1_desc"}}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges/vBridge2/interfaces.json
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"interface": {"if_name": "if2","description": "if2_desc"}}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges/vBridge2/interfaces.json
|}

* Create boundary and vLink
{| class="wikitable"
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1' -d '{"boundary": {"boundary_id": "b5", "link": {"controller1_id": "controller1", "domain1_id": "(DEFAULT)", "logical_port1_id": "PP-0A:00:00:00:00:00:00:02-s2-eth1", "controller2_id": "controller2", "domain2_id": "(DEFAULT)", "logical_port2_id": "PP-0A:00:00:00:00:00:00:03-s2-eth2"}}}' http://127.0.0.1:8081/vtn-webapi/boundaries.json
|-
|curl -v -X POST -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'  -d '{"vlink": {"vlk_name": "vLink1" , "vnode1_name": "vBridge1", "if1_name":"if2", "vnode2_name": "vBridge2", "if2_name": "if2", "boundary_map": {"boundary_id":"b5", "vlan_id": "50"} }}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vlinks.json
|}
* Configure port-map on the interfaces
{| class="wikitable"
|-
|curl -v -X PUT -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"portmap":{"logical_port_id": "PP-00:00:00:00:00:00:00:03-s3-eth1"}}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges/vBridge1/interfaces/if1/portmap.json
|-
|curl -v -X PUT -H 'content-type: application/json' -H 'username: admin' -H 'password: adminpass' -H 'ipaddr:127.0.0.1'   -d '{"portmap":{"logical_port_id": "PP-00:00:00:00:00:00:00:09-s3-eth2"}}' http://127.0.0.1:8081/vtn-webapi/vtns/vtn3/vbridges/vBridge2/interfaces/if1/portmap.json
|}

* Send packets from h5 to h6
{| class="wikitable"
|-
|mininet> h5 ping h6
|}
