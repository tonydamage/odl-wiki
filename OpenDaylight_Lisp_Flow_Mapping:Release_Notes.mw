==Release Notes==
===Major Features===
Ideally less than 10 bullets. Biggest bullets from the participating projects.

* First release of Lisp Flow Mapping
* LISP Map Server with flat key-value mappings
** Support for basic mappings including multiple RLOCs per EID, priority, and weight
** Support for storing Segment ID, Traffic Engineering with Path Specification, Distinguished Names, AS Numbers, Application Specific Data
** Support for Source/Destination 2-Tuple Lookups
* LISP Map Resolver 
* Northbound (application facing) REST API for Map Server  and Map Resolver to add/retrieve EID-RLOC (e.g. : virtual IP address to physical IP address) mappings 
* Southbound (device facing) LISP API for Map Server and Map Resolver to register/request EID-RLOC mappings via LISP protocol

===Target Environment===

====For Execution====

* Languages used: Java
* Required: JRE

====For Development====

* JDK
* Maven

===Known Issues and Limitations===

* SMR is not supported in this version. As a result the Map Server is not proactive. Devices must retrieve information from the Map Server to see the latest updates.
* Some more specific Map-Server features are not supported:
** In Locators: Map version number,  Multicast priority/weight, L bit(local locator), p bit(RLOC-Probing ITR), R bit(Is the address routed) 
** In Map-Request: M bit(Map-Reply Record exist in the MapRequest), P bit(Locator reachbility probe), p bit(Indicates PITR send a map-request), s bit(ETR is sending a Map Request in response to a received Solicit-Map-Request)
** In Map-Reply: E bit(Echo-Nonce), P bit(probing)
* Mappings registered via southbound LISP protocol and via northbound REST API for the same EID (EID prefix) are not differentiable, and will overwrite each other. Later versions may provide support for differentiating with priority to allow for non-overwrite option.
* Particular known bugs?
* Testing methodology. How extensive was it? What should be expected to work? What hasn't been tested as much?
