==Public API (openflow-protocol-api)==
Set of interfaces and builders for immutable data transfer
objects representing Openflow Protocol structures.
  
Transfer objects and service APIs are infered from several 
YANG models using code generator to reduce verbosity of 
definition and repeatibility of code. 

The following YANG modules are defined:
* openflow-types - defines common Openflow specific types
* openflow-instruction - defines base Openflow instructions
* openflow-action - defines base Openflow actions
* openflow-augments - defines object augmentations
* openflow-extensible-match - defines Openflow OXM match
* openflow-protocol - defines Openflow Protocol messages
* system-notifications - defines system notification objects
 
This modules also reuse types from following YANG modules:
* ietf-inet-types - IP adresses, IP prefixes, IP-protocol related types
* ietf-yang-types - Mac Address, etc. 
 
The use of predefined types is to make APIs contracts more 
safe, better readable and documented (e.g using MacAddress instead 
of byte array...)

==Channel pipeline (openflow-protocol-impl)==

Creates channel processing pipeline based on configuration and 
support.

==== Switch Connection Provider ====
Implementation of connection point for other projects. Library exposes its functionality through this class.

==== TCP Handler ====
Represents single server that is handling incoming connections over TCP protocol.

[[File:ChannelPipeline.png|500px|right|Channel pipeline]]

==== Publishing Channel Initializer ====
This class is used for channel initialization / rejection and passing arguments.

==== Idle State Handler ====
If there are no messages received for more than time specified, handler triggers idle state notification.

==== TLS Detector ====
Detector is used for detecting message encryption.

==== TLS Handler ====
It encrypts and decrypts messages with configured protocol.

==== OF Frame Decoder ====
Parses input stream into message frames for further processing.

==== OF Version Detector ====
Detects version of used OpenFlow Protocol and discards unsupported version messages.

==== OF Decoder ====
Chooses correct deserilization factory (based on type of message) and deserializes messages into generated DTOs.

==== OF Encoder ====
Chooses correct serialization factory (based on type of DTO) and serializes DTOs into byte messages.

==== Delegating Inbound Handler ====
Delegates received DTOs to Connection Adapter.

==== Connection Adapter ====
Provides a facade on top of pipeline, which hides netty.io specifics. Provides a set of methods
to register for incoming messages and to send messages to particular channel / session.

== SPI (openflow-protocol-spi)==
Defines interface for library's connection point for other projects. Library exposes its functionality through this interface.

== Integration test (openflow-protocol-it)==
Testing communication with simple client. 

== Simple client(simple-client)==
Lightweight switch simulator - programmable with desired scenarios.

=Openflow Protocol Library:Main page=
* [[Openflow Protocol Library:Main]]
