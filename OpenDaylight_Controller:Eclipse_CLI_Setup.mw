These instructions should enable you to use the CLI to pull and push to the git repository, but hack on code from Eclipse.

==Starting From Scratch==

# Pull the code from the command line ([[OpenDaylight Controller:Pulling, Hacking, and Pushing the Code from the CLI|Instructions]])
## You should also build the code once from the CLI before importing the projects
## Do that by moving into the opendaylight/distributions/opendaylight directory of the repo and then running mvn clean install
# Download and install Eclipse ("for Java EE Developers", "for Java Developers" and "for RCP and RAP Developers" all seem to work)
# Install Eclipse Maven Integration Version 1.2.0
## From Eclipse, go to Help => Install New Software...
## Paste "http://download.eclipse.org/technology/m2e/releases" into the "Work with:" field
## Uncheck the "Show only the latest versions of available software box"
## Select m2e and (optionally) m2e - slf4j both with version 1.2.0.whatever
## Click Next, OK and Finish else until things install
# Restart Eclipse when it asks
# Import all of the OpenDaylight projects
## From Eclipse, go to File => Import => Maven => Existing Maven Projects
## Browse to the opendaylight/distributions/opendaylight directory in the git repository
## All of the projects should be selected by default, just click Finish
## It may ask you to install Tycho, do so if it asks

==If you Installed a Newer Version of m2e==

Newer versions of m2e seem to play poorly with some dependencies in OpenDaylight. In particular, they don't seem to be able to resolve the enunciate module which is used in generating documentation for the Northbound APIs. If you run into this problem, use these instructions to uninstall the newer version, then use the instructions above to get up and working with m2e 1.2.0.

# Close and then delete all of the current OpenDaylight projects in Eclipse so that you can reimport them later
# Uninstall m2e
## go to About Eclipse -> Installation Details -> Select the m2e packages -> Click uninstall
## For me, there were 2 m2e packages: "m2e - Maven Integration for Eclipse" and "m2e - slf4j over logback logging (Optional)"
# Restart Eclipse when it asks
# Pick up with the steps above starting with installing Eclipse Maven Integration 1.2.0

==Debugging Weird Errors==

If Eclipse starts giving you lots of weird errors that seem to not make sense, closing, deleting and reimporting all of the OpenDaylight projects seems to help pretty frequently.
