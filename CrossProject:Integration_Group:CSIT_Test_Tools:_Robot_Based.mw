== Maintainer ==
Baohua Yang (baohyang@cn.ibm.com) and Denghui Huang (huangdenghui@gmail.com)

== Introduction ==
The library is designed for the robot framework to implement flexible and readable test case. The design is following google's [http://robotframework.googlecode.com/hg/doc/userguide/RobotFrameworkUserGuide.html#creating-test-libraries recommendation] style.

You can try the latest code from the [https://github.com/yeasy/robot_tool Github] or the stable code from the [https://git.opendaylight.org/gerrit/#/admin/projects/integration integration git repo].

== Get Code ==
<pre>
git clone https://github.com/yeasy/robot_tool.git
</pre>
The stable version can be pulled by
 <pre> git clone https://git.opendaylight.org/gerrit/integration </pre>

== Usage ==
===Prerequisites===
* Python 2.6/2.7
* Python [https://github.com/bulkan/robotframework-requests Roboframework-requests library]
 <pre>
  pip install -U robotframework-requests
</pre>
* [https://wiki.opendaylight.org/view/GettingStarted:Developer_Main OpenDaylight Controller]
Download and build OpenDaylight Controller

<pre>
   git clone https://git.opendaylight.org/gerrit/p/controller.git
   cd controller/opendaylight/distribution/opendaylight
   mvn clean install -DskipTests -Dmaven.compile.fork=true -U
</pre>
* [http://mininet.org/walkthrough Mininet]
* [http://robotframework.org Robotframework]

===Run Test===
* Start the [https://wiki.opendaylight.org/view/GettingStarted:Developer_Main OpenDaylight Controller]
<pre>
  cd controller/target/distribution.opendaylight-0.1.0-SNAPSHOT-osgipackage/opendaylight/
  ./run.sh
</pre>
* Start mininet, and make sure mininet has all switches connected to the controller, for example, 
<pre>sudo mn --controller=remote,ip=your_controller_ip --topo tree,2</pre>
*  Go to the suites directory, executing the suite such as 
<pre>pybot --variable topo_tree_level:2 base                  #Run all tests in the base suite 
OR
pybot --variable topo_tree_level:2 switch_manager.txt     #Test the switch manager module.
</pre>

==Code Structure==

    robot_tool
    \---------suites       # all robot test suites
    |              \-----base                # all test suites for the base edition
    |              |
    |              \-----service_provider    # all test suites for the service provider edition
    |              |
    |              \-----virtualization      # all test suites for the service provider edition
    |
    \---------libraries    # all keywords
    |
    \---------resources    # resources related files
    |
    \---------variables    # all variables

==Hack Code==
===Create and import Library===
The robotframework supports both Python and Java based library. Here we take the Python code for example.

The library can be either a normal module or a class (Commonly a *.py file). You can add the `Library    your_library_file` command into the `*** Settings ***` part to import a library. Notice the elements (variable, keyword, etc) separator in robot script is tab, instead of space. Space is only used inside the name of the same element. 

===Add Keyword===
In case of a module, a keyword will be created for each top-level function in the module. In case of a class, a keyword will be created for each public method of the class.

Keyword name will be mapped to the function name (case insensitively and underscores removed), and the keywords will have same arguments as the functions. For example, if you define a function in the library as
<pre>
def print_hello_world(param1,param2):
    """
    Just print out the first hello to the world.
    """
    print "Hello world",param1,param2
</pre>
Then after import the library, you can use the keyword in the robot framework as
<pre>
$param1    Hi
$param2    Again
Print Hello World     ${param1}    ${param2}
</pre>


== Development Plan ==
=== Code architecture discussion  ===
Done.

=== Base edition test suites  ===
Basically Done.

=== Accept controller IP parameters  ===
In process.

=== Operate the outside mininet environment  ===
In process.

=== Support topology parameters  ===
TODO.

[[Category:Integration Group:CSIT Test Tools]]
