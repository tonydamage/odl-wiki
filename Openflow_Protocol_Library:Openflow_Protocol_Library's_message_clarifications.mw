== OF 1.0 and OF 1.3 message differences ==
There are differences between OF 1.0 and OF 1.3 messages (for example the ofp_match
structure is completely different). These differences are handled by using
additional fields in generated DTOs. This way some fields might be null. Splitting the Library into separate bundles according to Openflow version supported, should fix this issue.
 
For example:
 
Packet-in message in OF 1.0 (see structure below) would have in_port field set and table_id, cookie, match fields empty (null). The packet-in message in OF 1.3 would be the opposite.


[[File:Packetin-of10.png | center | OF1.0 Packet-in structure]]  

Packet-in message in OF 1.0

  
[[File:Packetin-of10.png | center | OF1.3 Packet-in structure]]

Packet-in message in OF 1.3

  
== 8.2   OF 1.0 Vendor and Stats messages DTOs ==
 
Vendor messages are represented as
ExperimenterMessage/ExperimenterInput objects (as the messages were renamed in
the OF 1.3 version). Similarly Stats messages use
MultipartReplyMessage/MultipartRequestInput objects.

 
== 8.3   Using supertypes (higher types) ==
 
Values
used for communication with switch are represented as unsigned values. Java
uses signed values - which can store only a half of unsigned (positive) values.
To ensure that correct values are (de)serialized, the values are set into
supertypes (higher types). For example uint32 is represented as Long, uint16 as
Integer and so on.

  
== 8.4   Signed int to unsigned long conversion and vice versa ==
 
There
are cases when we need to convert signed integer into unsigned long. For
example the ofp_port_no (special port values in OF 1.3). Yang generates enums
with .getIntValue() method. Special values (like 0xffffffff) would be
represented as negative integers. For this purpose it is needed to use
BinContent class. It is located in openflow-protocol-api project, under
src/main/java/*.util package. This class does the translation into unsigned
value. BinContent also provides method for the opposite case.

  
== 8.6   Table-miss flow entry ==
 
To
set up a table-miss flow entry in switch table it is needed to create FlowMod
message with desired flow properties and an empty match. Match is considered
empty when it has only type specified (no oxm_fields are present).
