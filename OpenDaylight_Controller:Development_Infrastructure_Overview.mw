{| align="right" border="1"
|align="center"|'''Guide Contents'''
|-
|[[OpenDaylight Controller:Overview|OpenDaylight Controller Overview]]<br>[[OpenDaylight Controller:Architectural Framework|Architectural Framework]]<br>[[OpenDaylight Controller:Development Infrastructure Overview|Development Infrastructure Overview]]<br>[[OpenDaylight Controller:Pulling, Hacking, and Pushing the Code from the CLI|Pulling, Hacking, and Pushing the Code from the CLI]]<br>[[OpenDaylight Controller:Pulling, Hacking, and Pushing the Code from Eclipse|Pulling, Hacking, and Pushing the Code from Eclipse]]<br>[[OpenDaylight Controller:Sample Applications|Sample Applications]]<br>[[OpenDaylight Controller:Library Descriptions|Library Descriptions]]<br>[[OpenDaylight Controller:REST Reference and Authentication|REST Reference and Authentication]]<br>[[OpenDaylight Controller:Java API Reference|Java API Reference]]<br>[[OpenDaylight Controller:Topologies|Topologies]]<br>[[OpenDaylight Controller:Main|Top Level Contents]]
|}

OpenDaylight Infrastructure consists of 

SCM: [http://git-scm.com/ git]&nbsp;([https://git.opendaylight.org OpenDaylight git]) 

Code Review: [https://code.google.com/p/gerrit/ Gerrit] ([https://git.opendaylight.org/gerrit/ OpenDaylight Gerrit]) 

Continuous Integration: [http://jenkins-ci.org/ Jenkins] ([https://jenkins.opendaylight.org/ OpenDaylight Jenkins]) 

Artifact Repo: [http://www.sonatype.org/nexus/ Nexus] ([https://nexus.opendaylight.org/ OpenDaylight Nexus]) 

Quality Management: [http://www.sonarsource.org/ Sonar] ([https://sonar.opendaylight.org/ OpenDaylight Sonar]) 

Bug Tracking [http://www.bugzilla.org/ Bugzilla] ([http://bugs.opendaylight.org/ OpenDaylight Bugzilla]) 

Wiki: [http://www.mediawiki.org/ MediaWiki] ([https://wiki.opendaylight.org/ OpenDaylight Wiki]) 

The rough code flow is depicted below: 

<br> [[Image:Development Infrastructure Overview.jpg|800px]] 

<br> 

#'''Pull code''': contributor pulls code from the authoritative git repo 
#'''Pull dependency artifacts''': Most Java/OSGI code bases have a large number of dependencies managed by maven. During build the artifacts (usually binary jars) for those dependencies are pulled from a Development Nexus Artifact Repository. 
#'''Hack code''': contributor hacks on the code 
#'''Push code''': Contributor pushes code to the pending changes HEAD:refs/for/&lt;branch&gt; for code review 
#'''Trigger Jenkins Verification:''' 
#'''Runs CI''': Jenkin’s runs Continuous Integration (builds,tests, static analysis, etc… whatever the project has decided is needful for the health of the code base) 
#'''Indicates patch verified''': Presuming everything checks out OK, Jenkin’s indicates to Gerrit the patch is verified 
#'''Get patch to review:''' A committer picks up the patch for consideration 
#'''Reviews patch:''' committer determines whether the patch looks like a good idea 
#'''Submits patch''': committer indicates to Gerrit that the patch is should be submitted to the &lt;branch&gt;<br> 
#'''Merge patch into &lt;branch&gt;''': Now that the patch is both approved and verified, Gerrit merges it into the branch 
#'''Trigger Jenkins Merge CI''': Jenkins is triggered to run the CI on the result of the merge

'''Run's Merge CI''': Jenkin’s kicks off the builds for the new artifacts that will need to be in the Development Nexus Artifact Repo 

#'''Upload new artifacts''': If builds (and possible other CI tasks) are successful, Jenkin’s uploads the new artifacts to the Development Nexus Artifact Repo


[[Category:OpenDaylight Controller]]
