=Welcome to CrossProject OpenDaylight Security Analysis Page=

== Introduction ==
The OpenDaylight security analysis captures what security features are present in OpenDaylight  today. In addition, it provides some recommendations for security enhancements.

===OpenDaylight Controller Security ===

==== Overall Controller Security ====
Controllers can  theoretically  be used  to  do  anything,  hence their compromise  could  have  potentially endless  threat implications.  First  and foremost,  controllers,  need  to  be secure,  both  physically  and  logically. This  will  require  the  controller technology,  itself,  to  mature  from  a security  standpoint,  as  well  as  IT personnel  taking  precautionary measures during deployments.  

Security to controller occurs at multiple layers. The following sections capture what exists on OpenDayLight controller today and recommendations to increase security at different layers.

==== Controller Load/Runtime ====

The current unit of OpenDaylight deployment is OSGi bundles. Bundles provide some level of isolation with explicit code boundaries and package import/exports.  The recommendation is to augment this at load time with bundle signature/permission verifiers and at runtime with bundle access security. In addition, the OSGi based runtime which provides a container should not open any security loopholes. 

===== Application Bundle Security   =====

Recommendations for the bundle security requirements
*Application bundle insertion authentication and authorization: Bundle that can be deployed should come only from trusted, verifiable sources. Bundle may specify their local permissions, the maximum privileges that they need to function. Before installing the bundle, the local permissions can be authorized with the bundle permission resource.
*Post activation application bundle resource authorization: Other components that bundle can communicate with. Are they authorized? What data in the URI tree can be accessed? Does the bundle have access to program flow to the network? For example, multiple applications in the OpenDaylight controller may introduce conflicts in the flow tables. Therefore, verification of policy compliance is required to address these issues.
*Auditing: Application bundle authentication/authorization should be logged.

===== OSGi Runtime Container Security - OpenDaylight Apache Karaf Distribution =====

Apache Karaf is being considered as the OSGi runtime container environment. During the April 28, 2014 Tech Work Stream conference call concern was expressed regarding the security footprint deploying ODL into Karaf represents. The following key areas were discussed:
* Karaf's Remote Shutdown Port.
* SSHD default presence.
* Webconsole access.
* External JMX connectivity.
These remote management capabilities are present in Apache Karaf by default, however they can be disable via various configuration alterations. These configuration options may be applied during the construction of the ODL-Karaf distribution. Alternatively, ODL wikidocs may provide guidance and/or links to external documentation to allow users to lock down their deployment post installation. 

Apache Karaf does provide various runtime security features that should become familiar to OpenDaylight developers and administrator. General security documentation at Karaf can be found  [http://karaf.apache.org/manual/latest/users-guide/security.html here]. 

Further security advice can be found in the links below:
* Role based JMX administration is discussed [http://karaf.apache.org/manual/latest/users-guide/monitoring.html here]. 
* Remote SSH access configuration is discussed [http://karaf.apache.org/manual/latest/users-guide/remote.html here]. 
* WebConsole access is discussed [http://karaf.apache.org/manual/latest/users-guide/webconsole.html here].

Disablement of the remote shutdown port can be accomplished via the following:
Set karaf.shutdown.port=-1 in etc/custom.properties or etc/config.properties

==== OpenDaylight Controller’s  Plugins Security ====

The document [https://docs.google.com/presentation/d/1df-GMYVe1zGEU6DgKzFQ3xeceicqcGNRRsT5l5QNd_E/edit?pli=1#slide=id.g26bf015a9_2_42 here] captures the existing northbound and southbound plugins. These plugins should provide secure communication access to the controller. The following table captures the state of the plugin’s transport layer security. 

{| class="wikitable"
|-
!  Plugins 
! Existing Security 
! Recommendations     
|- align="right"
| align="left" | RESTCONF 
| HTTPS
| align="left" | 

|- align="right"
| align="left" | Neutron
| HTTPS
| align="left" | 

|- align="right"
| align="left" | VTN Coordinator
| HTTP
| align="left" | HTTPS

|- align="right"
| align="left" | D4A Protection
| HTTP
| align="left" | HTTPS

|- align="right"
| align="left" | GUI
| HTTPS 
| align="left" | 

|- align="right"
| align="left" | OpenDove
| HTTP
| align="left" | HTTPS

|- align="right"
| align="left" | BGP-LS/PCEP
| TCP
| align="left" | TCP-MD5, TLS 1.2

|- align="right"
| align="left" | NETCONF
| SSH  / TCP
| align="left" | SSH /  TLS 1.2

|- align="right"
| align="left" | OpenFlow 1.0/1.3 (openflowjava)
| TCP  / TLS 1.2
| align="left" | 

|- align="right"
| align="left" | OpenFlow 1.0 (openflowj)
| TLS 1.2
| align="left" | 

|- align="right"
| align="left" | OVSDB
| TCP
| align="left" | TLS 1.2

|- align="right"
| align="left" | SNMP
| SNMP v2
| align="left" | SNMP v3

|- align="right"
| align="left" | LISP
| Encrypted Map Request / Map Reply
| align="left" | 

|}


General recommendation for the plugins is as follows
*DDoS attack protection on plugin expose ports
*Utilize a common crypto key storage
*Support a pluggable or built-in certificate authority

==== AAA for External Users ====

From security standpoint, direct access needs  to be restricted; who and how users can interact  with  controllers  needs  to  be clearly defined (best practice dictates access should be limited to only those admins who absolutely need it and be authenticated and logged). Although OpenDaylight supports secure communication access via the northbound APIs, it is desirable to further harden the security by providing role based access control for the external users. The recommendations for the security requirements are

*User access authentication : OpenDaylight today allows configuration of username/password.
*Access protocol authorization: e.g. a user can only access via HTTPS
*Services / Resource authorization: e.g. a user has access to NETCONF and subsection of  URI tree  under NETCONF 
*Auditing access/authorization: useful for incident response analysis.
*Pluggable AAA service

==== Secure Device/Controller BootStrap, Authentication and Authorization ====

Today, the discovery of OpenDaylight controller and devices it controls is manual.  For example, in the case of OpenFlow, the devices/switches have to be configured with the controller’s IP address. It is desirable to automatically and securely bring up integrated set of network devices and controllers.

The following is the recommendation to support the zero touch secure bootstrap requirements
*Controller automatically discovers devices, assigns IP address and establishes secure IP connectivity. If routing is required to reach the devices, the routing is also automatically established.
*Controller has the ability to authenticate and authorize against a device registry.
*For the devices to participate in the automatic bootstrap, the devices should require minimal bootstrap software.
*A southbound syslog plugin should be added to capture bootstrap log information from the devices. This log information would be useful to correlate for incident response.

==== Controller Clustering and Security ====
Clustering provides scalability and availability. It is desirable that the clustering communication channel is secure. Current ODL controller clustering is built on top of Infinispan v5.3.0 distributed-caching/data-grid platform. Infinispan uses Jgroups as a reliable messaging layer for the cluster. Jgroups currently supports UDP, TCP, and Tunnel over TCP as the three transport protocol options. 
In standard configurations, UDP is used as the default transport protocol that uses IP multicast for sending 1-to-many messages to the cluster.
TCP is used when there are cluster nodes outside a LAN and message needs to go through a router where IP multicast does not work. 1-to-many cluster messages are sent out as multiple TCP unicast messages.
Tunneling over TCP is used when there are firewalls that prevent direct communication.  In such situations, it
uses a standard GossipRouter outside of the firewall to intermediate message exchanges.

OpenDaylight AD-SAL clustering uses TCP as the transport for Jgroups. It is recommended to configure Jgroups AUTH and ENCRYPT support for security.  For MD-SAL clustering discussions are currently in progress.

==== Overall Recommendations ====

Overall, the OpenDaylight controller should have following components to build a secure framework.

*Ongoing vulnerability analysis to pinpoint security flaws that can be exploited by the attackers
** It is recommended to have a special mechanism to report security bugs/issues to OpenDaylight. For example, the approach taken by OpenStack would be suitable. [https://www.openstack.org/projects/openstack-security/ link]
** In addition, a vulnerability management team similar to OpenStack would be beneficial. [https://wiki.openstack.org/wiki/Vulnerability_Management link] 
*Robust incident response support for controller/devices/user. A southbound syslog plugin to incorporate capture logs from devices in incident analysis.
*Secure communication channel to connect to plugins. Common trusted crypto key storage for all plugins. DDoS protection on plugins expose ports. Pluggable / Built-in Certificate Authority.
*AAA service for applications/users/devices
*Framework to securely discover, connect and configure the devices
*Secure mechanism to cluster the controller for scalability and availability

==== OpenDaylight Security Analysis Team ====
*Arash Eghtesadi <aeghtesadi@inocybe.ca>
*Anthony Gagliardi <anthony.gagliardi@colorado.edu>
*Bryan Kirchenbauer <Bryan.Kirchenbauer@us.fujitsu.com> 
*Jamie Goodyear <jamie.goodyear@gmail.com>
*Junhui Liu <junhui.liu@ericsson.com>
*Ken Beck < kebeck@cisco.com>
*Madhu Venugopal <mavenugo@gmail.com>
*Meenakshi Kaushik  <mekaushi@cisco.com>
*Mike Geller  <<mgeller@cisco.com>
*Narayana Reddy <narayana1208@iiitd.ac.in>
*Susanta Nanda  <Susanta_Nanda@symantec.com>
*Wojciech Dec <wdec@cisco.com>

==== References ====
 * Security implications of Software‐Defined Networks, By Sarah Sorensen, 2012 [http://www.fiercetelecom.com/story/security-implications-software-defined-networks/2012-05-14 link].
 * Netconf SSH config [https://wiki.opendaylight.org/view/OpenDaylight_Controller:Config:Examples:Netconf#Editing_Netconf_Client_Configuration_in_the_Current_Controller_Config_File link]
 * LISP security [https://datatracker.ietf.org/doc/draft-ietf-lisp-sec/ link]
 * Bootstrapping Key Infrastructures [http://tools.ietf.org/html/draft-pritikin-bootstrapping-keyinfrastructures-00 link]
 * Jgroups Community Documentation [http://www.jgroups.org/manual/html/user-advanced.html link]
 * OpenDaylight Clustering [https://wiki.opendaylight.org/view/OpenDaylight_Controller:Programmer_Guide:Clustering link]

== Meeting Notes ==

===May 9, 2014===

[http://meetings.opendaylight.org/opendaylight-meeting/2014/opendaylight_security_alaysis_team__second_meeting/opendaylight-meeting-opendaylight_security_alaysis_team__second_meeting.2014-05-09-15.32.html Minutes]

[http://meetings.opendaylight.org/opendaylight-meeting/2014/opendaylight_security_alaysis_team__second_meeting/opendaylight-meeting-opendaylight_security_alaysis_team__second_meeting.2014-05-09-15.32.txt  Minutes (text)]

[http://meetings.opendaylight.org/opendaylight-meeting/2014/opendaylight_security_alaysis_team__second_meeting/opendaylight-meeting-opendaylight_security_alaysis_team__second_meeting.2014-05-09-15.32.log.html Log]

===May 2, 2014===

[http://meetings.opendaylight.org/opendaylight-meeting/2014/security_analysis_team__introductory_meeting_/opendaylight-meeting-security_analysis_team__introductory_meeting_.2014-05-02-15.06.html Minutes]

[http://meetings.opendaylight.org/opendaylight-meeting/2014/security_analysis_team__introductory_meeting_/opendaylight-meeting-security_analysis_team__introductory_meeting_.2014-05-02-15.06.txt Minutes (text)]

[http://meetings.opendaylight.org/opendaylight-meeting/2014/security_analysis_team__introductory_meeting_/opendaylight-meeting-security_analysis_team__introductory_meeting_.2014-05-02-15.06.log.html Log]

[[Category:OpenDaylight Security Analysis]]
