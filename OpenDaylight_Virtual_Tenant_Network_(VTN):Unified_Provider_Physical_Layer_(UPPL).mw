= Unified Provider Physical Layer (UPPL) =
The UPPL module is a sub component of the [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator|VTN coordinator]] and provides the Physical network provisioning and monitoring functionality.

== Block Diagram ==

[[File:UPPL.PNG]]

== Functionality Provided ==
:*UPPL is started from phynwd daemon during startup of [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator|VTN coordinator]].
:*Interacts with [[OpenDaylight_Virtual_Tenant_Network_(VTN):Transaction Coordinator|TC]], [[OpenDaylight_Virtual_Tenant_Network_(VTN):Unified Provider Logical Layer (UPLL)|UPLL]] and [[OpenDaylight_Virtual_Tenant_Network_(VTN):OpenDaylight Controller Driver (ODC Driver)|ODC Driver]] using IPC framework
:*Receives Controller, Domain and Boundary Create/Update/Delete/Read requests from [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN API|VTN Services]]
:*Maintains the startup, candidate, and running configurations and state information in an external database
:*Performs the setup/commit/abort operations as instructed by [[OpenDaylight_Virtual_Tenant_Network_(VTN):Transaction Coordinator|TC]].
:*Connects to southbound controllers via [[OpenDaylight_Virtual_Tenant_Network_(VTN):OpenDaylight Controller Driver (ODC Driver)|ODC Driver]]
:*Constructs physical topology using the notifications (events and alarms) from controller platform. 
:*Informs [[OpenDaylight_Virtual_Tenant_Network_(VTN):Unified Provider Logical Layer (UPLL)|UPLL]] about the controller addition/deletion and operational status changes of Physical topology objects.

== Class Details ==

{| class="wikitable"
|-
! Class Name !! Description
|-
| PhysicalLayer || It’s a singleton class which will instantiate other UPPL’s classes. This class will be inherited from base module in order to use the Core features and IPC service handlers.
|-
| PhysicalCore || Class that is responsible for processing requests from [[OpenDaylight_Virtual_Tenant_Network_(VTN):Transaction Coordinator|TC]]. It also processes the configuration and capability file. It’s also responsible for sending alarm to node manager. It’s responsible for receiving requests from north bound.
|-
| IPCConnectionManager || It’s responsible for processing the requests received via IPC framework. It contains separate classes to process request from  [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_API#VTN_Service_Java_API_library|VTN service]], [[OpenDaylight_Virtual_Tenant_Network_(VTN):Unified Provider Logical Layer (UPLL)|UPLL]] and [[OpenDaylight_Virtual_Tenant_Network_(VTN):OpenDaylight Controller Driver (ODC Driver)|ODC Driver]].
|-
| ODBCManager || It is a singleton class which performs all database services.
|-
| InternalTransactionCoordinator || It is responsible for parsing the IPC structures and forward it to the various request classes like ConfigurationRequest, ReadRequest, ImportRequest etc.
|-
| ConfigurationRequest || It is responsible to process the Create, Delete and Update operations received from [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_API#VTN_Service_Java_API_library|VTN service]].
|-
| ReadRequest || It is responsible to process all the read operations.
|-
| Kt_Base, Kt_State_Base and respective Kt classes || These classes perform the functionality required for individual key type.
|-
| TransactionRequest || It is responsible for performing the various functions required for each phase of the Transaction Request received from Transaction Coordinator during User Commit/Abort.
|-
| AuditRequest || It is responsible for performing functions related to audit request.
|-
| ImportRequest || It is responsible for performing functions related to import request.
|-
| SystemStateChangeRequest || It is responsible for performing functions when [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator|VTN coordinator]] state is moved to active or standby.
|-
| DBConfigurationRequest || It is responsible for processing various Database operations like Save/Clear/Abort
|}

[[Category:OpenDaylight Virtual Tenant Network]]
