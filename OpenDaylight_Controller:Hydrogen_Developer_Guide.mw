==Technical Architecture==

In Hydrogen Release,  the OpenDaylight controller consists of the following modules:

* [[OpenDaylight_Controller:Architectural_Framework#Service_Abstraction_Layer|AD-SAL]] - API-Driven Service Abstraction Layer
* [[OpenDaylight_Controller:Architectural_Framework#High_Availability|Clustering and High-Availability Services]] for AD-SAL 
* AD-SAL Network Function Services: provides network functions, such as ARP handling, host tracking, topology, or Switch Management,  for OpenFlow-capable Nodes
* [[OpenDaylight_Controller:MD-SAL:Developer_Guide|MD-SAL]] - Model Driven Service Adaptation Layer
** MD-SAL Base Network Functions: Topology and Inventory services
** MD-SAL Netconf Connector (Southbound Netconf Plugin) 
** [[OpenDaylight_Controller:MD-SAL:Restconf#How_it_works|MD-SAL Restconf Connector]] (Northbound Restconf Plugin) - infrastructure component that renders REST APIs for device/service models loaded into the controller
* [[OpenDaylight_Controller:Config:Main|Config Subsystem]] - Netconf/Yang based framework for configuration, performance and fault management of controller infrastructure and plugins deployed into the controller
* NSF Adapters - Network Service Function Adapter that allow the MD-SAL based OF1.0/1.3 Plugin to talk with AS-SAL based Network Service Functions


The controller architecture, as implemented for Hydrogen, is shown in the following figure. The figure shows an example of hte Service Provider edition, which in addition to  Base Edition controller components and plugins, contains the BGP-LS/PCEP and LISP plugins, the Affinity, LISP and PCEP Services, and the D4A Defense application.

[[File:Controller-Arch-Hydrogen.jpg]]

==Installation Guide (link)==
If applicable, a hyperlink to installation instructions for the project beyond what is in the per-edition installation instructions

==Installation Troubleshooting (link)==
If applicable, a hyperlink to a list of troubleshooting steps for installation of the project

==Configuration (link)==
If applicable, a hyperlink to how to configure the project beyond the per-edition steps

==Tutorial / How-To==
Step-by-step instructions for doing some basic functionality with this project

==Command Line Interface==
If applicable, hyperlinks to the relevant section(s) of the user guide 

==Programmatic Interface(s)==
If applicable, hyperlink(s) to the relevant sections of the Developer Guide
* Getting Started – Should cover topics like authentication, common error codes, etc.
* API Documentation – Detailed documentation of the API(s) – If this can be auto-generated, try provide the object and verb hierarchy and hyperlinks to the auto-generated documentation
** Per-Object
*** Per-Method / Verb / Operation
**** Description – Brief description of the interface
**** Request – Example request followed by tabular description of the parameters (ex: Name, Format, Required/Optional, Description, Example, Limits)
**** Response –Example response follow by tabular description of the parameters
