= Unified Provider Logical Layer (UPLL) =
The UPLL module is a sub component of the [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator|VTN coordinator]] and provides the Virtual network provisioning and monitoring functionality.

It consists of two sub components

1. [[#UPLL|UPLL]]

2. [[#DAL|DAL]]

== Block Diagram ==
[[File:UPLL.PNG]]

== UPLL ==

The UPLL module implements the virtual network provisioning and monitoring functionality.

The main functions of this module are
:*UPLL is started from lgcnwd daemon during startup of [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_Coordinator|VTN coordinator]].
:*Interacts with [[OpenDaylight_Virtual_Tenant_Network_(VTN):Transaction Coordinator|TC]], [[OpenDaylight_Virtual_Tenant_Network_(VTN):Unified Provider Physical Layer (UPPL)|UPPL]] and [[OpenDaylight_Virtual_Tenant_Network_(VTN):OpenDaylight Controller Driver (ODC Driver)|ODC Driver]] using IPC framework.
:*Receives virtual network configuration Create/Update/Delete/Read requests from [[OpenDaylight_Virtual_Tenant_Network_(VTN):VTN_API#VTN_Service_Java_API_library|VTN service]].
:*Maintains the startup, candidate, and running configurations and state information in an external database
:*Performs the Setup/Commit/Abort operations as instructed by [[OpenDaylight_Virtual_Tenant_Network_(VTN):Transaction Coordinator|TC]].
:*Connects to southbound controllers via [[OpenDaylight_Virtual_Tenant_Network_(VTN):OpenDaylight Controller Driver (ODC Driver)|ODC Driver]].
:*Constructs and maintains the virtual network topology using the configuration and notifications (events and alarms) received from controller platforms.
:*Supports Audit and Import functionality for the virtual network configurations

== DAL ==
The DAL Module implements the abstraction layer for the Database.

== Class Details ==

=== UPLL ===

{| class="wikitable"
|-
! Class Name !! Description
|-
| UpllConfigSvc || UpllConfigService is a service layer implementation for UPLL. It provides UPLL service to VTN Service and handles all service requests. It also registers with UPPL and Drivers for notifications.
|-
| UpllIpcEventHandler || Handler for IPC events.
|-
| UpllConfigMgr || UpllConfigMgr is the core implementation class for configuration services and   transaction services including audit and import.
|-
| TcLibIntfImpl || This an implementation class which implements the TcLibInterface provided by TC. This implementation class, for each virtual function, will invoke corresponding UpllConfigMgr function.
|-
| MoCfgServiceIntf || Interface class for Edit/Read/Control operations.
|-
| MoTxServiceIntf || Interface class for normal transaction operations.
|-
| MoAuditServiceIntf || Interface class for audit operations.
|-
| MoImportServiceIntf || Interface class for import operations.
|-
| MoDbServiceIntf || Interface class for database operations.
|-
| MoManager || Base class for Key tree specific implementation.
|-
| CtrlrMgr|| Stores the controllers as notified by Physical. UPLL stores the controller type and "invalid config" alarm status against each known controller type.
|-
| ConfigVal || Class for value structure of any key type. This class allows list of values to be specified.
|-
| ConfigKeyVal || Handler for IPC events
|-
| UpllConfigMgr || Class for additional data after the request/response header in messages corresponding to configuration operations. This class allows nesting of key types and values. For one key type many values can be specified and sequence of such <key, value, â€¦> tuples can be encapsulated with one ConfigKeyVal
|-
| ConfigNotification || Implements config notification.
|-
| ConfigNotifier || Implements buffering and sending of config notifications. Also provides API for OperStatus change notification.
|-
| IpcUtil || Provides various IPC wrappers over the IPC framework.
|-
| IpctSt || Provides wrappers for data sent over IPC.
|-
| Key type specific classes || Implements the Key type handling functionality for all key types.
|-
|}

=== DAL ===

{| class="wikitable"
|-
! Class Name !! Description
|-
| DalBindColumnInfo || Contains column_info for each column_index ( column_index, app_data_type, dal_data_type, app_array_size). Contains bind_info (app_out_addr, db_in_out_addr, db_match_addr, io_type). Allocates memory in DB and copies input/match application data. Copies result from DB to application data.
|-
| DalBindInfo || Contains bind_info for all columns in a table (table_index, list of DalBindColumnInfo. Provides API to UPLL to bind the input/output/match address to DB And to copy result back to application.
|-
| DalCursor || Holds cursor information. Holds cursor data to fetch result one by one in case of multi-result query. Provides API to UPLL to fetch the result from cursor and destroy the cursor. Creation of cursor will be done in DalOdbcMgr based on the Query API.
|-
| DalQueryBuilder || Contains list of Query Templates and generates Query based on user inputs.
|-
| DalErrorHandler || Process SQL errors and maps to corresponding DB result code.
|-
| DalOdbcMgr || Provides APIs to UPLL for Connection/Disconnection, Commit/Rollback operation, Cursor fetch/Close cursor, All Single/Multiple result queries Diff, Copy Queries.
|}

[[Category:OpenDaylight Virtual Tenant Network]]
