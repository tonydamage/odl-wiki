
= Robot Tests =

== Prerequisites ==
* virtual machine with Mininet for OF1.0 and OF1.3 and with OpenSwitch
* current version of ODL Controller
* Python (v 2.6 and higher)
* Robot framework
* GIT

== Installation ==
There are in 3 puzzle pieces:
# ODL controller
# mininet with ovs
# robot framework + tests
These can all run on the same machine or can be spreaded (using VMs). 
; All-in-one strategy:
: + easy to transfer whole setup (if running on VM)
: + no network issues (especially between VMs)
: - no simple way to switch or update mininet/ovs
; Robot + ODL controller on one VM, mininet on another:
: + modularity
: - transfer of whole setup involves 2 VMs
: - VMs have to have network access to each other (can be achieved by 'internal network' of virtualBox)


=== VM with Mininet ===
For  creating of VM you can:
* follow instructions on this Opendaylight wiki page:
*: [[CrossProject:Integration_Group:Create_System_Test_Environment#Install_Mininet_for_OF1.0_and_OF1.3]]
* Or download preinstalled VM's:
*: [[CrossProject:Integration_Group:Test_VMs#Links_to_VMs| Links_to_VMs]]
* or there is also a possibility to 
*: [[OpenDaylight_OpenFlow_Plugin::MininetFromScratch| create mininet VM from scratch]] (based on debian distribution)

'''Important notice:''' in order for robot framework to be able to controll mininet through ssh the '''prompt on mininet VM has to end with ">" character'''.

=== ODL Controller ===
How to obtain and install current ODL Controller is described here:
* [[OpenDaylight_Controller:Installation| OpenDaylight_Controller:Installation]]
In order to run openflowplugin distribution use following instructions:
* [[OpenDaylight_OpenFlow_Plugin::Running_controller_with_the_new_OF_plugin| Running_controller_with_the_new_OF_plugin]]

=== Python and Robot framework ===
How to install Python and Robot on Ubuntu distribution is described here:
* [[CrossProject:Integration_Group:Create_System_Test_Environment#Install_Robot_Framework]]

=== GIT ===
Install GIT (debian/ubuntu):
 sudo apt-get install git-core

== Tests ==
=== Get Integration project ===
* git clone https://git.opendaylight.org/gerrit/integration 

=== Execute tests ===
* [[CrossProject:Integration_Group:Robot_Framework#Execute_Robot_Suite]]

=== View results ===
Robot produces 3 files (log.html, output.xml, report.html). You can point browser on them or if robot is executed always at the same 
folder (test scripts are entered using relative way) then apache web server can be easily pointed to "log" folder of robot:
# check if apache is running
#: <tt>sudo /etc/init.d/apache2 status</tt>
#* if not, start it
##: <tt>sudo /etc/init.d/apache2 start</tt>
# create symbolic link to log folder (apache document root location might differ depending on distribution and apache version, this is valid for debian wheeze x86_64, apache-2.2)
#: <tt>sudo ln -s /home/<robotUser>/<odlTestReactor> /var/www/reactorSite
# check browser
#: http://localhost/reactorSite
