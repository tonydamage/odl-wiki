This page presents how to prepare OpenDaylight project pom files for supporting the maven site and site:deploy targets, as well as how to set up the maven's site:deploy as a separate jenkins job.

Note: this page doesn't discuss how to set up parameterized site:deploy, that is left as an exercise for a reader.

==Assumptions==

#It is assumed that there is a single project root that all project bundles inherit from

==Setting up POM Files==

===Adding Site Deploy and Javadoc Report Generation to parent pom===

*If not already defined, add the following lines to the properties section:
 <sitedeploy>${nexusproxy}/sites/site/${project.groupId}</sitedeploy>
 <enunciate.version>1.26.2</enunciate.version></blockquote>
*If not already present, add in the following repository section before the <build> section:
  <repositories>
      <repository>
          <id>opendaylight-release</id>
          <name>opendaylight-release</name>
          <url>${nexusproxy}/repositories/opendaylight.release/</url>
      </repository>
      <repository>
          <id>opendaylight-snapshot</id>
          <name>opendaylight-snapshot</name>
          <url>${nexusproxy}/repositories/opendaylight.snapshot/</url>
      </repository>
  </repositories>
*In the <build> section, add the maven site plugin:
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.1</version>
        <dependencies>
            <!-- add support for WebDAV -->
            <dependency>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav-jackrabbit</artifactId>
                <version>2.2</version>
            </dependency>
            <!-- force slf4j 1.6.x or it fails due to missing class StaticLoggerBinder -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.6.1</version>
            </dependency>
        </dependencies>
      </plugin>
*After the <build> section, add the reporting section:
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <links>
            <link>${sitedeploy}/api</link>
          </links>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
*In the <DistributionManagement> section, add:
    <site>
      <id>opendove-master</id>
      <url>dav:${sitedeploy}/</url>
    </site>
note: in the above, replace opendove-master with your particular project's site id (opendove uses opendove-stable and opendove-master) and let Andy (tykeal) know your choice so he can make sure the necessary system support is in place
