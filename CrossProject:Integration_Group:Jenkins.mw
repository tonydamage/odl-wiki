== Maintainer ==
Luis Gomez (ecelgp@gmail.com)

== Introduction ==
We use Jenkins to trigger distributions and packages builds as well as to perform system test (CSIT).

== Jenkins Strategy ==

[[File:odl_integration_jenkins.png|512px]]

=== Jenkins goals ===
* Build the distributions whenever we have new distribution code or opendaylight project merge
* Build the linux packages (Fedora, Debian, Docker,...) whenever there is new packaging code
* Run system test whenever we have new test code, distribution code or opendaylight project merge
* Run package test whenever there is new packaging code
* System test bed has always latest successful test code and controller artifacts
* We do not upload release artifacts to Nexus if they do not pass system test

=== Jenkins triggers and tasks ===
 
* Trigger 1) New patch in /distributions folder ->  
Verify tasks: build distributions, update controller VM (just made artifacts), run system test

* Trigger 2) Patch merged in /distributions folder ->  
Merge tasks: build distributions, update controller VM (just made artifacts), run system test, upload release artifacts to Nexus

* Trigger 3) New patch in /packaging folder ->  
Verify tasks: build package, update package to controller VM, run package test

* Trigger 4) Patch merged in /packaging folder ->  
Merge tasks: build package, update package to controller VM, run package test, upload package artifacts to Nexus
 
* Trigger 5) New patch in /test folder ->
Verify tasks: run system test (use Gerrit branch)

* Trigger 6) Patch merged in /test folder ->
Merge tasks: run system test (use Gerrit branch)
 
* Trigger 7) Change (merge) in other OpenDaylight project ->
Integration tasks: build distributions, update controller VM (just made artifacts), run system test, upload release artifacts to Nexus

=== Jenkins task distribution ===

* Integration Master Jenkins: distributions and packages build
* Robot Slave Jenkins: run system test
* Controller Slave Jenkins: update controller distribution

== Jenkins jobs ==

=== Deploy Jobs ===

* '''integration-<version>-deploy-controller-latest-<distribution>''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER). This job will:
** Update the controller VM with <distribution> artifacts generated by the Jenkins job ${JOBNAME}-${BUILDNUMBER} for the distribution version ${BUNDLEVERSION}
** Start the controller with the new SW

* '''integration-<version>-deploy-vtn-coordinator-latest''' (VTNCOORDINATOR, JOBNAME, BUILDNUMBER). This job will:
** Update the mininet VM with VTN Coordinator artifacts generated by the Jenkins job ${JOBNAME}-${BUILDNUMBER} for the VTN Coordinator version ${VTNCOORDINATOR}
** Start the controller with the new SW

=== Verify/Merge Test Jobs ===

* '''integration-<version>-verify-test-<distribution>'''. This job will trigger on patch creation under /test folder and will:
** Update controller with distribution (integration-<version>-deploy-controller-latest-<distribution>) using last successful artifacts
** Run Robot system test using GERRIT patch test code

*'''integration-<version>-merge-test-<distribution>'''.  This job will trigger on patch merge under /test folder and will:
** Update controller with distribution (integration-<version>-deploy-controller-latest-<distribution>) using last successful base artifacts
** Run Robot system test using just merged test code

=== CSIT Jobs ===

* '''integration-<version>-csit-<distribution>''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER, PUSH). This job will perform the system test with the following steps:
** Update controller with <distribution> (integration-<version>-deploy-controller-latest-<distribution>) according to BUNDLEVERSION, JOBNAME, BUILDNUMBER described above
** Run Robot system test using system test code available at /test/csit/suites
** In case system test is passed and ${PUSH}=TRUE, upload release artifacts to Nexus

=== Verify/Merge Distributions Jobs ===

* '''integration-<version>-verify-distributions'''. This job will trigger on patch creation under /distributions folder and will:
** Build the OpenDaylight editions using GERRIT patch distribution code
** Extract the BUNDLEVERSION from the build
** Launch all relevant CSIT Jobs (integration-<version>-csit-<distribution>) with ${BUNDLEVERSION}=version from previous step, ${JOBNAME}=current jobname, ${BUILDNUMBER}=current build #, ${PUSH)=TRUE

*'''integration-<version>-merge-distributions'''.  This job will trigger on patch merge under /distributions folder and will:
** Build the OpenDaylight editions using just merged distributions code
** Extract the BUNDLEVERSION from the build
** Launch all relevant CSIT Jobs (integration-<version>-csit-<distribution>) with ${BUNDLEVERSION}=version from previous step, ${JOBNAME}=current jobname, ${BUILDNUMBER}=current build #, ${PUSH)=TRUE

=== Integration Jobs ===

* '''integration-<version>-project-centralized-integration'''. This Job will:
** Build the OpenDaylight editions (Base, Service Provider, Virtualization) using code available at /distributions
** Extract the BUNDLEVERSION from the build
** Launch all relevant CSIT Jobs (integration-<version>-csit-<distribution>) with ${BUNDLEVERSION}=version from previous step, ${JOBNAME}=current jobname, ${BUILDNUMBER}=current build #, ${PUSH)=TRUE

=== Polling Jobs ===
* '''integration-<version>-polling-project-<project>'''. This job polls the <project> merge builds. When a merge happens this job will:
** Launch Integration Job (integration-<version>-project-centralized-integration)

=== Jenkins Link ===

* [https://wiki.jenkins-ci.org/display/JENKINS/Meet+Jenkins Jenkins page]
* [https://jenkins.opendaylight.org/integration Integration Jenkins]

[[Category:Integration Group]]
