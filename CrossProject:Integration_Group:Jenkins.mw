== Maintainer ==
Luis Gomez (ecelgp@gmail.com)

== Introduction ==
We use Jenkins to trigger distributions and packages builds as well as to perform system test (CSIT).

== Jenkins Strategy ==

[[File:odl_integration_jenkins.png|512px]]

=== Jenkins goals ===
* Build the distributions whenever we have new distribution code or opendaylight project merge
* Build the linux packages (Debian, Feadora) whenever there is new packaging code
* Run system test whenever we have new test code, distribution code or opendaylight project merge
* Run package test whenever there is new packaging code
* System test bed has always latest successful test code and controller artifacts
* We do not upload release artifacts to Nexus if they do not pass system test

=== Jenkins triggers and tasks ===
 
* Trigger 1) New patch in /distributions folder ->  
Verify tasks: build distributions, update controller VM (just made artifacts), run system test

* Trigger 2) Patch merged in /distributions folder ->  
Merge tasks: build distributions, update controller VM (just made artifacts), run system test, upload release artifacts to Nexus

* Trigger 3) New patch in /packaging folder ->  
Verify tasks: build package, update package to controller VM, run package test

* Trigger 4) Patch merged in /packaging folder ->  
Merge tasks: build package, update package to controller VM, run package test, upload package artifacts to Nexus
 
* Trigger 5) New patch in /test folder ->
Verify tasks: run system test (use Gerrit branch)

* Trigger 6) Patch merged in /test folder ->
Merge tasks: run system test (use Gerrit branch)
 
* Trigger 7) Change (merge) in other OpenDaylight project ->
Integration tasks: build distributions, update controller VM (just made artifacts), run system test, upload release artifacts to Nexus

=== Jenkins task distribution ===

* Integration Master Jenkins: distributions and packages build
* Robot Slave Jenkins: run system test
* Controller Slave Jenkins: update controller distribution

=== Jenkins jobs ===

** '''integration-deploy-controller-latest-base-edition''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER). This job will:
** Update the controller VM with the base edition artifacts generated by the Jenkins job {JOBNAME }#${BUILDNUMBER} for the release version ${BUNDLEVERSION}
** Start the controller with the new SW

* '''integration-deploy-controller-latest-sp-edition''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER). This job will:
** Update the controller VM with the service provider edition artifacts generated by the Jenkins job {JOBNAME }#${BUILDNUMBER} for the release version ${BUNDLEVERSION}
** Start the controller with the new SW

* '''integration-deploy-controller-latest-vtn-edition''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER). This job will:
** Update the controller VM with the virtualization vtn edition artifacts generated by the Jenkins job {JOBNAME }#${BUILDNUMBER} for the release version ${BUNDLEVERSION}
** Start the controller with the new SW

* '''integration-csit-base''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER, PUSH). This job will perform the system test with the following steps:
** Update controller with base edition (integration-deploy-controller-latest-base-edition) according to BUNDLEVERSION, JOBNAME, BUILDNUMBER described above
** Run Robot system test for base edition using Integration test code available at /test/csit/suites/base
** In case system test is passed and ${PUSH}=TRUE, upload release artifacts to Nexus

* '''integration-csit-sp''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER, PUSH). This job will perform the system test with the following steps:
** Update controller with service provider edition (integration-deploy-controller-latest-sp-edition) according to BUNDLEVERSION, JOBNAME, BUILDNUMBER described above
** Run Robot system test for service provider edition using Integration test code available at /test/csit/suites/sp
** In case system test is passed and ${PUSH}=TRUE, upload release artifacts to Nexus

* '''integration-csit-vtn''' (BUNDLEVERSION, JOBNAME, BUILDNUMBER, PUSH). This job will perform the system test with the following steps:
** Update controller with virtualization vtn edition (integration-deploy-controller-latest-vtn-edition) according to BUNDLEVERSION, JOBNAME, BUILDNUMBER described above
** Run Robot system test for virtualization vtn edition using Integration test code available at /test/csit/suites/vtn
** In case system test is passed and ${PUSH}=TRUE, upload release artifacts to Nexus

* '''integration-<project>-integration'''. This job polls the <project> merge builds. When a merge happens this job will:
** Build the OpenDaylight editions (Base, Service Provider, Virtualization)
** Extract the BUNDLEVERSION from the build
** Perform relevant system test (integration-csit-x) with ${BUNDLEVERSION}=version from previous step, ${JOBNAME}=current jobname, ${BUILDNUMBER}=current build #, ${PUSH)=TRUE

=== Jenkins Link ===

* [https://wiki.jenkins-ci.org/display/JENKINS/Meet+Jenkins Jenkins page]
* [https://jenkins.opendaylight.org/integration Integration Jenkins]

[[Category:Integration Group]]
